diff --git a/backend/__pycache__/Core.cpython-310.pyc b/backend/__pycache__/Core.cpython-310.pyc
index 5f3aadd..de75ba1 100644
Binary files a/backend/__pycache__/Core.cpython-310.pyc and b/backend/__pycache__/Core.cpython-310.pyc differ
diff --git a/backend/__pycache__/core.cpython-310.pyc b/backend/__pycache__/core.cpython-310.pyc
index 5f3aadd..de75ba1 100644
Binary files a/backend/__pycache__/core.cpython-310.pyc and b/backend/__pycache__/core.cpython-310.pyc differ
diff --git a/backend/src/__pycache__/main.cpython-311.pyc b/backend/src/__pycache__/main.cpython-311.pyc
index 41c039d..93b057a 100644
Binary files a/backend/src/__pycache__/main.cpython-311.pyc and b/backend/src/__pycache__/main.cpython-311.pyc differ
diff --git a/backend/src/api/routes/__pycache__/auth.cpython-311.pyc b/backend/src/api/routes/__pycache__/auth.cpython-311.pyc
index 5530421..64e7d38 100644
Binary files a/backend/src/api/routes/__pycache__/auth.cpython-311.pyc and b/backend/src/api/routes/__pycache__/auth.cpython-311.pyc differ
diff --git a/backend/src/api/routes/__pycache__/dependencies.cpython-311.pyc b/backend/src/api/routes/__pycache__/dependencies.cpython-311.pyc
index 5598902..0a54eea 100644
Binary files a/backend/src/api/routes/__pycache__/dependencies.cpython-311.pyc and b/backend/src/api/routes/__pycache__/dependencies.cpython-311.pyc differ
diff --git a/backend/src/api/routes/__pycache__/movies.cpython-311.pyc b/backend/src/api/routes/__pycache__/movies.cpython-311.pyc
index c510144..ea0facf 100644
Binary files a/backend/src/api/routes/__pycache__/movies.cpython-311.pyc and b/backend/src/api/routes/__pycache__/movies.cpython-311.pyc differ
diff --git a/backend/src/api/routes/__pycache__/users.cpython-311.pyc b/backend/src/api/routes/__pycache__/users.cpython-311.pyc
index 0923cbe..81b28c7 100644
Binary files a/backend/src/api/routes/__pycache__/users.cpython-311.pyc and b/backend/src/api/routes/__pycache__/users.cpython-311.pyc differ
diff --git a/backend/src/api/routes/auth.py b/backend/src/api/routes/auth.py
index 491de1a..e17ecba 100644
--- a/backend/src/api/routes/auth.py
+++ b/backend/src/api/routes/auth.py
@@ -14,6 +14,9 @@ async def login_client(credentials: ClientLogin):
         credentials.courriel, credentials.mot_de_passe
     )
 
+    print(client)
+    print(is_correct)
+
     if not client or not is_correct:
         raise HTTPException(status_code=401, detail="Identifiants invalides")
     token = create_token(credentials.courriel)
diff --git a/backend/src/api/routes/movies.py b/backend/src/api/routes/movies.py
index a354d3a..33ed57d 100644
--- a/backend/src/api/routes/movies.py
+++ b/backend/src/api/routes/movies.py
@@ -1,5 +1,3 @@
-from typing import List
-
 from fastapi import APIRouter, Depends, HTTPException
 from models.schemas.movie import (
     MovieBase,
@@ -14,63 +12,19 @@ router = APIRouter()
 service = MovieService()
 
 
-@router.post("/", response_model=MoviesPaginatedResponse)
+@router.post("/movies", response_model=MoviesPaginatedResponse)
 async def search_movies(movie: MovieRequest):
     """Search for movies"""
-    print("Searching for movies", movie)
-    print("Received search request:", movie.dict())
     result = service.search_movies(movie)
-    print("Sending to db", result)
-
     if not result:
         raise HTTPException(status_code=401, detail="No movies found")
     return result
 
 
-@router.get("/movie/{id}", response_model=MovieBase)
+@router.get("/movies/{id}", response_model=MovieBase)
 async def get_movie(id: int):
     """Get a movie by its ID"""
     result = service.get_movie(id)
     if not result:
         raise HTTPException(status_code=401, detail="Movie not found")
     return result
-
-@router.get("/movie/{id}/trailer")
-async def get_movie_trailer(id: int):
-    """Get a movie trailer by its ID"""
-    result = service.get_movie_trailer(id)
-    print("Result", result)
-    if not result:
-        raise HTTPException(status_code=404, detail="Trailer not found")
-    return result
-
-@router.get("/suggestions/{term}")
-async def get_suggestions(term: str):
-    """Get movie suggestions"""
-    result = service.get_suggestions(term)
-    if not result:
-        raise HTTPException(status_code=401, detail="No suggestions found")
-    return result
-
-@router.get("/all-genres")
-async def get_genres():
-    """Get all genres"""
-    result = service.get_genres()
-    if not result:
-        raise HTTPException(status_code=401, detail="No genres found")
-    return result
-
-
-@router.get("/scenariste/{nom_scenariste}", response_model=List[MovieBase])
-async def get_movies_by_scenariste(nom_scenariste: str):
-    """Get movies by scenariste name"""
-    try:
-        result = service.get_movies_by_scenariste(nom_scenariste)
-        if not result:
-            raise HTTPException(status_code=404, detail="No movies found for this scenariste")
-        return result
-    except Exception as e:
-        raise HTTPException(status_code=500, detail=str(e))
-
-
-
diff --git a/backend/src/api/routes/users.py b/backend/src/api/routes/users.py
index bf92d8a..171494d 100644
--- a/backend/src/api/routes/users.py
+++ b/backend/src/api/routes/users.py
@@ -1,6 +1,4 @@
-from typing import List
 from fastapi import APIRouter, Depends, HTTPException
-from models.schemas.movie import MovieResponse
 from models.schemas.user import ClientLogin, TokenResponse, ClientBase, ClientCreate, ClientResponse, ClientUpdate
 from services.users import UserService
 from core.security import create_token, verify_token, get_email_from_token
@@ -20,7 +18,6 @@ service = UserService()
 async def get_current_client(current_user: str = Depends(get_current_user)):
     """Récupère le profil du client connecté"""
     client = service.get_profile(current_user)
-
     if not client:
         raise HTTPException(status_code=401, detail="Client non trouvé")
     return client
@@ -43,30 +40,3 @@ async def register_client(client: ClientCreate):
     if not result:
         raise HTTPException(status_code=401, detail="L'enregistrement a échoué")
     return result
-
-@router.post("/rent/{film_id}")
-async def rent_movie(
-    film_id: int,
-    current_user: str = Depends(get_current_user),
-):
-    """
-    Redeems credits and associates the client with the specified film.
-    """
-    service = UserService()
-
-    success = service.redeem_credits(current_user)
-    if not success:
-        raise HTTPException(status_code=400, detail="Unable to redeem credits")
-
-    link_success = service.link_film_to_client(current_user, film_id)
-    if not link_success:
-        raise HTTPException(status_code=400, detail="Unable to link film to client")
-
-    return {"detail": f"Credits redeemed and film {film_id} linked to client."}
-
-@router.get("/rented-movies", response_model=List[MovieResponse])
-async def get_rented_movies_route(current_user: str = Depends(get_current_user)):
-    service = UserService()
-    movies = service.get_rented_movies(current_user)
-    return movies
-
diff --git a/backend/src/core/__pycache__/config.cpython-311.pyc b/backend/src/core/__pycache__/config.cpython-311.pyc
index 24fdb99..04a4e51 100644
Binary files a/backend/src/core/__pycache__/config.cpython-311.pyc and b/backend/src/core/__pycache__/config.cpython-311.pyc differ
diff --git a/backend/src/core/__pycache__/security.cpython-311.pyc b/backend/src/core/__pycache__/security.cpython-311.pyc
index ce6820e..a8eb78a 100644
Binary files a/backend/src/core/__pycache__/security.cpython-311.pyc and b/backend/src/core/__pycache__/security.cpython-311.pyc differ
diff --git a/backend/src/db/repositories/__pycache__/base.cpython-311.pyc b/backend/src/db/repositories/__pycache__/base.cpython-311.pyc
index cab84b0..d5573cc 100644
Binary files a/backend/src/db/repositories/__pycache__/base.cpython-311.pyc and b/backend/src/db/repositories/__pycache__/base.cpython-311.pyc differ
diff --git a/backend/src/db/repositories/__pycache__/movies.cpython-311.pyc b/backend/src/db/repositories/__pycache__/movies.cpython-311.pyc
index ec58fb5..603e4c4 100644
Binary files a/backend/src/db/repositories/__pycache__/movies.cpython-311.pyc and b/backend/src/db/repositories/__pycache__/movies.cpython-311.pyc differ
diff --git a/backend/src/db/repositories/__pycache__/users.cpython-311.pyc b/backend/src/db/repositories/__pycache__/users.cpython-311.pyc
index b85c4f1..8160d8a 100644
Binary files a/backend/src/db/repositories/__pycache__/users.cpython-311.pyc and b/backend/src/db/repositories/__pycache__/users.cpython-311.pyc differ
diff --git a/backend/src/db/repositories/movies.py b/backend/src/db/repositories/movies.py
index 43f5bfe..c4e883e 100644
--- a/backend/src/db/repositories/movies.py
+++ b/backend/src/db/repositories/movies.py
@@ -1,4 +1,4 @@
-from typing import Optional, Dict, List
+from typing import Optional, Dict
 from db.repositories.base import BaseRepository
 
 
@@ -84,19 +84,6 @@ class MoviesRepository(BaseRepository):
                     )
                     params[param_name] = genre
 
-            if criteria.get("SCENARISTES") and len(criteria["SCENARISTES"]) > 0:
-                for i, scenariste in enumerate(criteria["SCENARISTES"]):
-                    param_name = f"scenariste_{i}"
-                    conditions.append(f"""
-                        EXISTS (
-                            SELECT 1 FROM FILM_SCENARISTES FS
-                            JOIN SCENARISTES S ON FS.ID_SCENARISTE = S.ID
-                            WHERE FS.ID_FILM = F.ID 
-                            AND UPPER(S.NOM) LIKE UPPER(:{param_name})
-                        )
-                    """)
-                    params[param_name] = f"%{scenariste}%"
-
             # Combine all conditions
             where_clause = " AND ".join(conditions) if conditions else "1=1"
 
@@ -106,13 +93,6 @@ class MoviesRepository(BaseRepository):
                 FROM FILMS F 
                 WHERE {where_clause}
             """
-
-            print("\n\n==== DEBUG: SQL QUERY ====")
-            print(count_query)
-            print("\n==== DEBUG: PARAMS ====")
-            print(params)
-            print("\n==========================\n")
-
             self.cur.execute(count_query, params)
             total_count = self.cur.fetchone()[0]
 
@@ -130,9 +110,7 @@ class MoviesRepository(BaseRepository):
                             F.TITRE,
                             F.ANNEE,
                             F.RESUME,
-                            F.POSTER_URL,
-                            F.LANGUE,
-                            F.DUREE
+                            F.POSTER_URL
                         FROM FILMS F
                         WHERE {where_clause}
                         ORDER BY F.TITRE
@@ -155,8 +133,6 @@ class MoviesRepository(BaseRepository):
                     "ANNEE": row[2],
                     "RESUME": str(row[3]) if row[3] else None,
                     "POSTER_URL": row[4],
-                    "LANGUE": row[5],
-                    "DUREE": row[6],
                 }
                 results.append(movie)
 
@@ -280,123 +256,3 @@ class MoviesRepository(BaseRepository):
             raise
         finally:
             self.disconnect()
-
-    def get_trailer_by_id(self, film_id: int) -> Optional[str]:
-        """
-        Récupère l'URL de la bande annonce d'un film par son ID
-        """
-        try:
-            self.connect()
-            query = """
-                SELECT * FROM ANNONCES a 
-                JOIN FILMS f ON a.ID_FILM = f.ID
-                WHERE f.ID = :film_id
-            """
-            self.cur.execute(query, {"film_id": film_id})
-            result = self.cur.fetchone()
-            print(result)
-            return result[0] if result else None
-        except Exception as e:
-            print(f"Error getting trailer by id: {e}")
-            raise
-        finally:
-            self.disconnect()
-
-    def get_suggestion(self, search_term, limit: int = 5):
-        """
-        Get movie suggestions using Oracle's built-in string functions
-        """
-        try:
-            self.connect()  # Always start with a connection
-
-            query = """
-                SELECT DISTINCT F.ID, F.TITRE
-                FROM FILMS F
-                WHERE 
-                    UPPER(F.TITRE) LIKE UPPER(:search_term || '%')
-                    OR UPPER(F.TITRE) LIKE UPPER('% ' || :search_term || '%')
-                    OR UPPER(F.TITRE) LIKE UPPER('%' || :search_term || '%')
-                ORDER BY 
-                    CASE 
-                        WHEN UPPER(F.TITRE) LIKE UPPER(:search_term || '%') THEN 1
-                        WHEN UPPER(F.TITRE) LIKE UPPER('%' || :search_term || '%') THEN 2
-                        ELSE 3
-                    END,
-                    LENGTH(F.TITRE), 
-                    F.TITRE        
-                FETCH FIRST :limit ROWS ONLY
-            """
-
-            # Execute query with both parameters properly bound
-            self.cur.execute(query, {
-                "search_term": search_term.upper(),
-                "limit": limit
-            })
-
-            # Fetch results before disconnecting
-            results = [{"id": row[0], "title": row[1]} for row in self.cur.fetchall()]
-            print(results)
-            return results
-
-        except Exception as e:
-            print(f"Error getting suggestions: {e}")
-            raise
-        finally:
-            self.disconnect()  # Always disconnect in finally block
-
-    def get_genres(self):
-        """
-        Récupère la liste de tous les genres
-        """
-        try:
-            self.connect()
-            query = "SELECT NOM FROM GENRES"
-            self.cur.execute(query)
-            return [row[0] for row in self.cur.fetchall()]
-        except Exception as e:
-            print(f"Error getting genres: {e}")
-            raise
-        finally:
-            self.disconnect()
-
-    # def get_movies_with_filters(self, genre: str, start_year: int, end_year: int, duration: int) -> List[Dict]:
-    #     """
-    #     Récupère les films selon les filtres spécifiés
-    #     """
-    #     try:
-    #         self.connect()
-    #         query = "SELECT NOM FROM GENRES"
-    #         self.cur.execute(query)
-    #         return [row[0] for row in self.cur.fetchall()]
-    #     except Exception as e:
-    #         print(f"Error getting genres: {e}")
-    #         raise
-    #     finally:
-    #         self.disconnect()
-
-    def get_films_by_scenariste(self, nom_scenariste: str) -> List[Dict]:
-        """
-        Récupère les films par le nom du scénariste
-        """
-        try:
-            self.connect()
-            query = """
-                SELECT f.id, f.titre, f.annee, f.duree, f.poster_url
-                FROM FILMS f
-                JOIN FILM_SCENARISTES fs ON f.id = fs.id_film
-                JOIN SCENARISTES s ON fs.id_scenariste = s.id
-                WHERE s.nom = :nom_scenariste
-            """
-            self.cur.execute(query, {"nom_scenariste": nom_scenariste})
-            result = self.cur.fetchall()
-            films = [{'ID': row[0], 'TITRE': row[1], 'ANNEE': row[2], 'DUREE': row[3], 'POSTER_URL': row[4]} for row in
-                     result]
-            return films
-        except Exception as e:
-            print(f"Error getting films by scenariste: {e}")
-            raise
-        finally:
-            self.disconnect()
-
-
-
diff --git a/backend/src/db/repositories/users.py b/backend/src/db/repositories/users.py
index 7568e78..539f1ec 100644
--- a/backend/src/db/repositories/users.py
+++ b/backend/src/db/repositories/users.py
@@ -1,5 +1,5 @@
 
-from typing import List, Optional, Dict
+from typing import Optional, Dict
 from db.repositories.base import BaseRepository
 from models.domain.user import User
 
@@ -7,9 +7,9 @@ from models.domain.user import User
 class UserRepository(BaseRepository):
     def get_by_email(self, email: str) -> Optional[Dict]:
         query = """
-            SELECT ID, NOM_FAMILLE, PRENOM, COURRIEL, TEL,
+            SELECT NOM_FAMILLE, PRENOM, COURRIEL, TEL,
                 DATE_ANNIVERSAIRE, ADRESSE, VILLE,
-                PROVINCE, CODE_POSTAL, FORFAIT, CREDIT
+                PROVINCE, CODE_POSTAL, FORFAIT
             FROM CLIENTS
             WHERE COURRIEL = :email
         """
@@ -107,73 +107,3 @@ class UserRepository(BaseRepository):
         except Exception as e:
             print(f"Error updating profile: {e}")
             return False
-
-    def redeem_credits(self, email: str) -> bool:
-        sql = """
-            UPDATE CLIENTS
-            SET CREDITS = CREDITS - 10
-            WHERE COURRIEL = :email
-        """
-        params = {
-            "email": email,
-        }
-        try:
-            self.execute_non_query(sql, params)
-            return True
-        except Exception as e:
-            print(f"Error redeeming credits: {e}")
-            return False
-
-    def link_film_to_client(self, client_id: int, film_id: int) -> bool:
-        """
-        Inserts a row into FILM_CLIENT. 
-        Returns True if successful, False otherwise.
-        """
-        try:
-            statement = """
-                INSERT INTO FILM_CLIENT (ID_FILM, ID_CLIENT)
-                VALUES (:film_id, :client_id)
-            """
-            self.execute_non_query(statement, {"film_id": film_id, "client_id": client_id})
-            return True
-        except Exception as e:
-            print(f"Error linking film to client: {e}")
-            return False
-
-    def get_rented_movies(self, email: str) -> list[Dict]:
-        self.connect()
-        try:
-            sql = """
-                SELECT FILMS.ID AS FILM_ID,
-                    FILMS.TITRE,
-                    FILMS.ANNEE,
-                    FILMS.RESUME,
-                    FILMS.POSTER_URL
-                FROM FILM_CLIENT
-                JOIN FILMS ON FILM_CLIENT.ID_FILM = FILMS.ID
-                JOIN CLIENTS ON FILM_CLIENT.ID_CLIENT = CLIENTS.ID
-                WHERE CLIENTS.COURRIEL = :email
-            """
-            self.cur.execute(sql, {"email": email})
-            raw_rows = self.cur.fetchall()
-
-            results = []
-            for row in raw_rows:
-                film_id, titre, annee, resume_lob, poster_url = row
-
-                if resume_lob is not None and hasattr(resume_lob, "read"):
-                    resume_lob = resume_lob.read()
-
-                movie_dict = {
-                    "ID": film_id,
-                    "TITRE": titre,
-                    "ANNEE": annee,
-                    "RESUME": resume_lob,
-                    "POSTER_URL": poster_url
-                }
-                results.append(movie_dict)
-
-            return results
-        finally:
-            self.disconnect()
-
diff --git a/backend/src/main.py b/backend/src/main.py
index 459d011..5541a0e 100644
--- a/backend/src/main.py
+++ b/backend/src/main.py
@@ -1,7 +1,7 @@
 from fastapi import FastAPI
 from fastapi.middleware.cors import CORSMiddleware
 from core.config import get_app_config
-from api.routes import auth, movies, users
+from api.routes import auth, movies, users, credits
 
 
 def create_app() -> FastAPI:
diff --git a/backend/src/models/domain/__pycache__/user.cpython-311.pyc b/backend/src/models/domain/__pycache__/user.cpython-311.pyc
index 08e3556..72b803b 100644
Binary files a/backend/src/models/domain/__pycache__/user.cpython-311.pyc and b/backend/src/models/domain/__pycache__/user.cpython-311.pyc differ
diff --git a/backend/src/models/schemas/__pycache__/movie.cpython-311.pyc b/backend/src/models/schemas/__pycache__/movie.cpython-311.pyc
index 7124579..4adf3ee 100644
Binary files a/backend/src/models/schemas/__pycache__/movie.cpython-311.pyc and b/backend/src/models/schemas/__pycache__/movie.cpython-311.pyc differ
diff --git a/backend/src/models/schemas/__pycache__/user.cpython-311.pyc b/backend/src/models/schemas/__pycache__/user.cpython-311.pyc
index 64cf45d..b36fcd8 100644
Binary files a/backend/src/models/schemas/__pycache__/user.cpython-311.pyc and b/backend/src/models/schemas/__pycache__/user.cpython-311.pyc differ
diff --git a/backend/src/models/schemas/movie.py b/backend/src/models/schemas/movie.py
index 2d45bc3..8655337 100644
--- a/backend/src/models/schemas/movie.py
+++ b/backend/src/models/schemas/movie.py
@@ -1,7 +1,6 @@
-from datetime import date
-from typing import List, Optional
-
 from pydantic import BaseModel, Field
+from typing import Optional, List
+from datetime import date
 
 
 class MovieResponse(BaseModel):
@@ -12,8 +11,6 @@ class MovieResponse(BaseModel):
     ANNEE: Optional[int] = Field(None, ge=1888, le=2025, description="Année de sortie")
     RESUME: Optional[str] = Field(None, description="Synopsis du film")
     POSTER_URL: Optional[str] = Field(None, description="URL de l'affiche du film")
-    LANGUE: Optional[str] = Field(None, description="Langue du film")
-    DUREE: Optional[int] = Field(None, gt=0, description="Durée en minutes")
 
     class Config:
         from_attributes = True
@@ -96,7 +93,6 @@ class MoviesPaginatedResponse(BaseModel):
                         "ANNEE": 1999,
                         "RESUME": "Un programmeur découvre que le monde est une simulation...",
                         "POSTER_URL": "http://example.com/matrix.jpg",
-                        "LANGUE": "Anglais",
                     }
                 ],
                 "total": 100,
@@ -125,10 +121,6 @@ class MovieRequest(BaseModel):
     GENRES_EXCLUS: Optional[List[str]] = Field(
         default=[], description="Liste des genres exclus"
     )
-    SCENARISTES: Optional[List[str]] = Field(
-        default=[], description="Liste des scénaristes"
-    )
-
 
     # Champs pour la pagination
     page: int = Field(default=1, ge=1, description="Numéro de la page")
@@ -155,4 +147,3 @@ class MovieRequest(BaseModel):
                 "limit": 10,
             }
         }
-
diff --git a/backend/src/models/schemas/user.py b/backend/src/models/schemas/user.py
index 396b58b..510099b 100644
--- a/backend/src/models/schemas/user.py
+++ b/backend/src/models/schemas/user.py
@@ -14,8 +14,6 @@ class ClientBase(BaseModel):
     province: Optional[str] = Field(None, max_length=2)
     code_postal: Optional[str] = Field(None, max_length=7)
     forfait: Optional[str] = Field(None, max_length=1)
-    credits: Optional[int] = Field(None)
-
 
 
 class ClientLogin(BaseModel):
@@ -49,7 +47,6 @@ class ClientCreate(BaseModel):
     code_postal: Optional[str]
     forfait: Optional[str]
 
-
 class ClientCreateResponse(BaseModel):
     nom_famille: str
     prenom: str
diff --git a/backend/src/services/__pycache__/cache.cpython-311.pyc b/backend/src/services/__pycache__/cache.cpython-311.pyc
index 6ca46e9..c20465d 100644
Binary files a/backend/src/services/__pycache__/cache.cpython-311.pyc and b/backend/src/services/__pycache__/cache.cpython-311.pyc differ
diff --git a/backend/src/services/__pycache__/movies.cpython-311.pyc b/backend/src/services/__pycache__/movies.cpython-311.pyc
index bb17aed..1d371bf 100644
Binary files a/backend/src/services/__pycache__/movies.cpython-311.pyc and b/backend/src/services/__pycache__/movies.cpython-311.pyc differ
diff --git a/backend/src/services/__pycache__/users.cpython-311.pyc b/backend/src/services/__pycache__/users.cpython-311.pyc
index c65b6d4..6c51a55 100644
Binary files a/backend/src/services/__pycache__/users.cpython-311.pyc and b/backend/src/services/__pycache__/users.cpython-311.pyc differ
diff --git a/backend/src/services/movies.py b/backend/src/services/movies.py
index f2d0468..7961d8e 100644
--- a/backend/src/services/movies.py
+++ b/backend/src/services/movies.py
@@ -1,6 +1,5 @@
 # backend/src/services/user.py
-from typing import Dict, List, Optional, Tuple
-
+from typing import Tuple, Dict, Optional, List
 from db.repositories.movies import MoviesRepository
 from services.cache import CacheService
 
@@ -30,16 +29,6 @@ class MovieService:
         params_string = str((sorted(parameter_hashable.items())))
         return f"film_search{hash(params_string)}"
 
-    def get_movie_trailer(self, movie_id: int) -> Optional[str]:
-        cache_key = f"trailer_{movie_id}"
-        if cached := self.cache.get(cache_key):
-            return cached
-
-        result = self.repository.get_trailer_by_id(movie_id)
-        if result:
-            self.cache.set(cache_key, result, 30)
-        return result
-
     def search_movies(self, properties: Dict) -> List[Dict]:
         search_params = properties.dict()
         cache_key = self._create_cache_key(search_params)
@@ -52,22 +41,3 @@ class MovieService:
         self.cache.set(cache_key, result, 30)
 
         return result
-
-    def get_suggestions(self, term: str) -> List[Dict]:
-        result = self.repository.get_suggestion(term)
-        return result
-
-    def get_genres(self) -> List[str]:
-        result = self.repository.get_genres()
-        print(result)
-        return result
-
-
-    def get_movies_by_scenariste(self, nom_scenariste: str) -> List[Dict]:
-        films = self.repository.get_films_by_scenariste(nom_scenariste)
-        print("Films found:", films)  # Log the result
-        return films
-
-
-
-
diff --git a/backend/src/services/users.py b/backend/src/services/users.py
index a343b70..87891dc 100644
--- a/backend/src/services/users.py
+++ b/backend/src/services/users.py
@@ -11,6 +11,8 @@ class UserService:
 
     def authenticate(self, email: str, password: str) -> Tuple[Dict, bool]:
         client = self.repository.get_by_email_password(email)
+        print("Client is", client)
+        print("Password is", password)
         if client and client["MOT_DE_PASSE"] == password:
             return client, True
         return None, False
@@ -51,22 +53,3 @@ class UserService:
 
     def register_client(self, user) -> bool:
         return self.repository.create(user)
-
-    def redeem_credits(self, email: str) -> bool:
-        return self.repository.redeem_credits(email)
-    
-    def link_film_to_client(self, email: str, film_id: int) -> bool:
-        """
-        1) Get the client from email
-        2) Insert a row (ID_FILM, ID_CLIENT) into FILM_CLIENT table
-        """
-        client = self.repository.get_by_email(email)
-        if not client:
-            return False
-
-        client_id = client["ID"]
-        return self.repository.link_film_to_client(client_id, film_id)
-    
-    def get_rented_movies(self, email: str) -> list:
-        return self.repository.get_rented_movies(email)
-
diff --git a/frontend/hooks/use-modal-store.ts b/frontend/hooks/use-modal-store.ts
index 994661a..5aeb915 100644
--- a/frontend/hooks/use-modal-store.ts
+++ b/frontend/hooks/use-modal-store.ts
@@ -1,20 +1,5 @@
-import { create } from "zustand";
-import { MovieDetails } from "../types";
+import { create } from 'zustand';
 
-export type ModalType = "movieModal";
-
-interface ModalStore {
-  type: ModalType | null;
-  data: MovieDetails | null;
-  isOpen: boolean;
-  onOpen: (type: ModalType, data?: MovieDetails) => void;
-  onClose: () => void;
-}
-
-export const useModal = create<ModalStore>((set) => ({
-  type: null,
-  data: null,
-  isOpen: false,
-  onOpen: (type, data) => set({ isOpen: true, type, data }),
-  onClose: () => set({ type: null, isOpen: false, data: null }),
+const useModalStore = create((set) => ({
+  
 }));
diff --git a/frontend/hooks/use-profile-store.ts b/frontend/hooks/use-profile-store.ts
deleted file mode 100644
index 4426239..0000000
--- a/frontend/hooks/use-profile-store.ts
+++ /dev/null
@@ -1,21 +0,0 @@
-import { create } from "zustand";
-import { persist } from "zustand/middleware";
-import { User } from "../types";
-
-
-interface UserStore {
-  user: User | null;
-  getUser: () => User | null;
-  setUser: (user: User) => void;
-}
-
-export const useProfileStore = create<UserStore>()(
-  persist(
-    (set, get) => ({
-      user: null,
-      getUser: () => get().user,
-      setUser: (user) => set({ user }),
-    }),
-    { name: "profile" },
-  ),
-);
diff --git a/frontend/package-lock.json b/frontend/package-lock.json
index e5d44c4..4542e2a 100644
--- a/frontend/package-lock.json
+++ b/frontend/package-lock.json
@@ -8,21 +8,15 @@
       "name": "gti660",
       "version": "0.0.0",
       "dependencies": {
-        "@fortawesome/free-solid-svg-icons": "^6.7.2",
-        "@fortawesome/react-fontawesome": "^0.2.2",
         "@radix-ui/react-dialog": "^1.1.6",
         "@radix-ui/react-label": "^2.1.2",
-        "@radix-ui/react-scroll-area": "^1.2.3",
         "@radix-ui/react-slider": "^1.2.3",
         "@radix-ui/react-slot": "^1.1.1",
-        "@radix-ui/react-tabs": "^1.1.3",
         "axios": "^1.7.9",
         "class-variance-authority": "^0.7.1",
         "clsx": "^2.1.1",
         "crypto-js": "^4.2.0",
         "cryptojs": "^2.5.3",
-        "loadash": "^1.0.0",
-        "lodash": "^4.17.21",
         "lucide-react": "^0.474.0",
         "md5": "^2.3.0",
         "react": "^18.3.1",
@@ -35,7 +29,6 @@
       },
       "devDependencies": {
         "@eslint/js": "^9.17.0",
-        "@types/lodash": "^4.17.15",
         "@types/md5": "^2.3.5",
         "@types/node": "^22.13.1",
         "@types/react": "^18.3.18",
@@ -871,49 +864,6 @@
         "node": "^18.18.0 || ^20.9.0 || >=21.1.0"
       }
     },
-    "node_modules/@fortawesome/fontawesome-common-types": {
-      "version": "6.7.2",
-      "resolved": "https://registry.npmjs.org/@fortawesome/fontawesome-common-types/-/fontawesome-common-types-6.7.2.tgz",
-      "integrity": "sha512-Zs+YeHUC5fkt7Mg1l6XTniei3k4bwG/yo3iFUtZWd/pMx9g3fdvkSK9E0FOC+++phXOka78uJcYb8JaFkW52Xg==",
-      "engines": {
-        "node": ">=6"
-      }
-    },
-    "node_modules/@fortawesome/fontawesome-svg-core": {
-      "version": "6.7.2",
-      "resolved": "https://registry.npmjs.org/@fortawesome/fontawesome-svg-core/-/fontawesome-svg-core-6.7.2.tgz",
-      "integrity": "sha512-yxtOBWDrdi5DD5o1pmVdq3WMCvnobT0LU6R8RyyVXPvFRd2o79/0NCuQoCjNTeZz9EzA9xS3JxNWfv54RIHFEA==",
-      "peer": true,
-      "dependencies": {
-        "@fortawesome/fontawesome-common-types": "6.7.2"
-      },
-      "engines": {
-        "node": ">=6"
-      }
-    },
-    "node_modules/@fortawesome/free-solid-svg-icons": {
-      "version": "6.7.2",
-      "resolved": "https://registry.npmjs.org/@fortawesome/free-solid-svg-icons/-/free-solid-svg-icons-6.7.2.tgz",
-      "integrity": "sha512-GsBrnOzU8uj0LECDfD5zomZJIjrPhIlWU82AHwa2s40FKH+kcxQaBvBo3Z4TxyZHIyX8XTDxsyA33/Vx9eFuQA==",
-      "dependencies": {
-        "@fortawesome/fontawesome-common-types": "6.7.2"
-      },
-      "engines": {
-        "node": ">=6"
-      }
-    },
-    "node_modules/@fortawesome/react-fontawesome": {
-      "version": "0.2.2",
-      "resolved": "https://registry.npmjs.org/@fortawesome/react-fontawesome/-/react-fontawesome-0.2.2.tgz",
-      "integrity": "sha512-EnkrprPNqI6SXJl//m29hpaNzOp1bruISWaOiRtkMi/xSvHJlzc2j2JAYS7egxt/EbjSNV/k6Xy0AQI6vB2+1g==",
-      "dependencies": {
-        "prop-types": "^15.8.1"
-      },
-      "peerDependencies": {
-        "@fortawesome/fontawesome-svg-core": "~1 || ~6",
-        "react": ">=16.3"
-      }
-    },
     "node_modules/@humanfs/core": {
       "version": "0.19.1",
       "resolved": "https://registry.npmjs.org/@humanfs/core/-/core-0.19.1.tgz",
@@ -1358,66 +1308,6 @@
         }
       }
     },
-    "node_modules/@radix-ui/react-roving-focus": {
-      "version": "1.1.2",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-roving-focus/-/react-roving-focus-1.1.2.tgz",
-      "integrity": "sha512-zgMQWkNO169GtGqRvYrzb0Zf8NhMHS2DuEB/TiEmVnpr5OqPU3i8lfbxaAmC2J/KYuIQxyoQQ6DxepyXp61/xw==",
-      "dependencies": {
-        "@radix-ui/primitive": "1.1.1",
-        "@radix-ui/react-collection": "1.1.2",
-        "@radix-ui/react-compose-refs": "1.1.1",
-        "@radix-ui/react-context": "1.1.1",
-        "@radix-ui/react-direction": "1.1.0",
-        "@radix-ui/react-id": "1.1.0",
-        "@radix-ui/react-primitive": "2.0.2",
-        "@radix-ui/react-use-callback-ref": "1.1.0",
-        "@radix-ui/react-use-controllable-state": "1.1.0"
-      },
-      "peerDependencies": {
-        "@types/react": "*",
-        "@types/react-dom": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
-        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        },
-        "@types/react-dom": {
-          "optional": true
-        }
-      }
-    },
-    "node_modules/@radix-ui/react-scroll-area": {
-      "version": "1.2.3",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-scroll-area/-/react-scroll-area-1.2.3.tgz",
-      "integrity": "sha512-l7+NNBfBYYJa9tNqVcP2AGvxdE3lmE6kFTBXdvHgUaZuy+4wGCL1Cl2AfaR7RKyimj7lZURGLwFO59k4eBnDJQ==",
-      "dependencies": {
-        "@radix-ui/number": "1.1.0",
-        "@radix-ui/primitive": "1.1.1",
-        "@radix-ui/react-compose-refs": "1.1.1",
-        "@radix-ui/react-context": "1.1.1",
-        "@radix-ui/react-direction": "1.1.0",
-        "@radix-ui/react-presence": "1.1.2",
-        "@radix-ui/react-primitive": "2.0.2",
-        "@radix-ui/react-use-callback-ref": "1.1.0",
-        "@radix-ui/react-use-layout-effect": "1.1.0"
-      },
-      "peerDependencies": {
-        "@types/react": "*",
-        "@types/react-dom": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
-        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        },
-        "@types/react-dom": {
-          "optional": true
-        }
-      }
-    },
     "node_modules/@radix-ui/react-slider": {
       "version": "1.2.3",
       "resolved": "https://registry.npmjs.org/@radix-ui/react-slider/-/react-slider-1.2.3.tgz",
@@ -1467,35 +1357,6 @@
         }
       }
     },
-    "node_modules/@radix-ui/react-tabs": {
-      "version": "1.1.3",
-      "resolved": "https://registry.npmjs.org/@radix-ui/react-tabs/-/react-tabs-1.1.3.tgz",
-      "integrity": "sha512-9mFyI30cuRDImbmFF6O2KUJdgEOsGh9Vmx9x/Dh9tOhL7BngmQPQfwW4aejKm5OHpfWIdmeV6ySyuxoOGjtNng==",
-      "dependencies": {
-        "@radix-ui/primitive": "1.1.1",
-        "@radix-ui/react-context": "1.1.1",
-        "@radix-ui/react-direction": "1.1.0",
-        "@radix-ui/react-id": "1.1.0",
-        "@radix-ui/react-presence": "1.1.2",
-        "@radix-ui/react-primitive": "2.0.2",
-        "@radix-ui/react-roving-focus": "1.1.2",
-        "@radix-ui/react-use-controllable-state": "1.1.0"
-      },
-      "peerDependencies": {
-        "@types/react": "*",
-        "@types/react-dom": "*",
-        "react": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc",
-        "react-dom": "^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc"
-      },
-      "peerDependenciesMeta": {
-        "@types/react": {
-          "optional": true
-        },
-        "@types/react-dom": {
-          "optional": true
-        }
-      }
-    },
     "node_modules/@radix-ui/react-use-callback-ref": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/@radix-ui/react-use-callback-ref/-/react-use-callback-ref-1.1.0.tgz",
@@ -1894,12 +1755,6 @@
       "integrity": "sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==",
       "dev": true
     },
-    "node_modules/@types/lodash": {
-      "version": "4.17.15",
-      "resolved": "https://registry.npmjs.org/@types/lodash/-/lodash-4.17.15.tgz",
-      "integrity": "sha512-w/P33JFeySuhN6JLkysYUK2gEmy9kHHFN7E8ro0tkfmlDOgxBDzWEZ/J8cWA+fHqFevpswDTFZnDx+R9lbL6xw==",
-      "dev": true
-    },
     "node_modules/@types/md5": {
       "version": "2.3.5",
       "resolved": "https://registry.npmjs.org/@types/md5/-/md5-2.3.5.tgz",
@@ -3558,12 +3413,6 @@
       "resolved": "https://registry.npmjs.org/lines-and-columns/-/lines-and-columns-1.2.4.tgz",
       "integrity": "sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg=="
     },
-    "node_modules/loadash": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/loadash/-/loadash-1.0.0.tgz",
-      "integrity": "sha512-xlX5HBsXB3KG0FJbJJG/3kYWCfsCyCSus3T+uHVu6QL6YxAdggmm3QeyLgn54N2yi5/UE6xxL5ZWJAAiHzHYEg==",
-      "deprecated": "Package is unsupport. Please use the lodash package instead."
-    },
     "node_modules/locate-path": {
       "version": "6.0.0",
       "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
@@ -3579,11 +3428,6 @@
         "url": "https://github.com/sponsors/sindresorhus"
       }
     },
-    "node_modules/lodash": {
-      "version": "4.17.21",
-      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
-      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg=="
-    },
     "node_modules/lodash.merge": {
       "version": "4.6.2",
       "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
@@ -4056,16 +3900,6 @@
         "node": ">= 0.8.0"
       }
     },
-    "node_modules/prop-types": {
-      "version": "15.8.1",
-      "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
-      "integrity": "sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==",
-      "dependencies": {
-        "loose-envify": "^1.4.0",
-        "object-assign": "^4.1.1",
-        "react-is": "^16.13.1"
-      }
-    },
     "node_modules/proxy-from-env": {
       "version": "1.1.0",
       "resolved": "https://registry.npmjs.org/proxy-from-env/-/proxy-from-env-1.1.0.tgz",
@@ -4122,11 +3956,6 @@
         "react": "^18.3.1"
       }
     },
-    "node_modules/react-is": {
-      "version": "16.13.1",
-      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
-      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ=="
-    },
     "node_modules/react-refresh": {
       "version": "0.14.2",
       "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.14.2.tgz",
diff --git a/frontend/package.json b/frontend/package.json
index a7beea9..87c0ac6 100644
--- a/frontend/package.json
+++ b/frontend/package.json
@@ -10,21 +10,15 @@
     "preview": "vite preview"
   },
   "dependencies": {
-    "@fortawesome/free-solid-svg-icons": "^6.7.2",
-    "@fortawesome/react-fontawesome": "^0.2.2",
     "@radix-ui/react-dialog": "^1.1.6",
     "@radix-ui/react-label": "^2.1.2",
-    "@radix-ui/react-scroll-area": "^1.2.3",
     "@radix-ui/react-slider": "^1.2.3",
     "@radix-ui/react-slot": "^1.1.1",
-    "@radix-ui/react-tabs": "^1.1.3",
     "axios": "^1.7.9",
     "class-variance-authority": "^0.7.1",
     "clsx": "^2.1.1",
     "crypto-js": "^4.2.0",
     "cryptojs": "^2.5.3",
-    "loadash": "^1.0.0",
-    "lodash": "^4.17.21",
     "lucide-react": "^0.474.0",
     "md5": "^2.3.0",
     "react": "^18.3.1",
@@ -37,7 +31,6 @@
   },
   "devDependencies": {
     "@eslint/js": "^9.17.0",
-    "@types/lodash": "^4.17.15",
     "@types/md5": "^2.3.5",
     "@types/node": "^22.13.1",
     "@types/react": "^18.3.18",
diff --git a/frontend/pnpm-lock.yaml b/frontend/pnpm-lock.yaml
index 57af928..b77a8d1 100644
--- a/frontend/pnpm-lock.yaml
+++ b/frontend/pnpm-lock.yaml
@@ -8,30 +8,18 @@ importers:
 
   .:
     dependencies:
-      '@fortawesome/free-solid-svg-icons':
-        specifier: ^6.7.2
-        version: 6.7.2
-      '@fortawesome/react-fontawesome':
-        specifier: ^0.2.2
-        version: 0.2.2(@fortawesome/fontawesome-svg-core@6.7.2)(react@18.3.1)
       '@radix-ui/react-dialog':
         specifier: ^1.1.6
         version: 1.1.6(@types/react-dom@18.3.5(@types/react@18.3.18))(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
       '@radix-ui/react-label':
         specifier: ^2.1.2
         version: 2.1.2(@types/react-dom@18.3.5(@types/react@18.3.18))(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
-      '@radix-ui/react-scroll-area':
-        specifier: ^1.2.3
-        version: 1.2.3(@types/react-dom@18.3.5(@types/react@18.3.18))(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
       '@radix-ui/react-slider':
         specifier: ^1.2.3
         version: 1.2.3(@types/react-dom@18.3.5(@types/react@18.3.18))(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
       '@radix-ui/react-slot':
         specifier: ^1.1.1
         version: 1.1.1(@types/react@18.3.18)(react@18.3.1)
-      '@radix-ui/react-tabs':
-        specifier: ^1.1.3
-        version: 1.1.3(@types/react-dom@18.3.5(@types/react@18.3.18))(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
       axios:
         specifier: ^1.7.9
         version: 1.7.9
@@ -47,12 +35,6 @@ importers:
       cryptojs:
         specifier: ^2.5.3
         version: 2.5.3
-      loadash:
-        specifier: ^1.0.0
-        version: 1.0.0
-      lodash:
-        specifier: ^4.17.21
-        version: 4.17.21
       lucide-react:
         specifier: ^0.474.0
         version: 0.474.0(react@18.3.1)
@@ -84,9 +66,6 @@ importers:
       '@eslint/js':
         specifier: ^9.17.0
         version: 9.19.0
-      '@types/lodash':
-        specifier: ^4.17.15
-        version: 4.17.15
       '@types/md5':
         specifier: ^2.3.5
         version: 2.3.5
@@ -406,24 +385,6 @@ packages:
     resolution: {integrity: sha512-lB05FkqEdUg2AA0xEbUz0SnkXT1LcCTa438W4IWTUh4hdOnVbQyOJ81OrDXsJk/LSiJHubgGEFoR5EHq1NsH1A==}
     engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}
 
-  '@fortawesome/fontawesome-common-types@6.7.2':
-    resolution: {integrity: sha512-Zs+YeHUC5fkt7Mg1l6XTniei3k4bwG/yo3iFUtZWd/pMx9g3fdvkSK9E0FOC+++phXOka78uJcYb8JaFkW52Xg==}
-    engines: {node: '>=6'}
-
-  '@fortawesome/fontawesome-svg-core@6.7.2':
-    resolution: {integrity: sha512-yxtOBWDrdi5DD5o1pmVdq3WMCvnobT0LU6R8RyyVXPvFRd2o79/0NCuQoCjNTeZz9EzA9xS3JxNWfv54RIHFEA==}
-    engines: {node: '>=6'}
-
-  '@fortawesome/free-solid-svg-icons@6.7.2':
-    resolution: {integrity: sha512-GsBrnOzU8uj0LECDfD5zomZJIjrPhIlWU82AHwa2s40FKH+kcxQaBvBo3Z4TxyZHIyX8XTDxsyA33/Vx9eFuQA==}
-    engines: {node: '>=6'}
-
-  '@fortawesome/react-fontawesome@0.2.2':
-    resolution: {integrity: sha512-EnkrprPNqI6SXJl//m29hpaNzOp1bruISWaOiRtkMi/xSvHJlzc2j2JAYS7egxt/EbjSNV/k6Xy0AQI6vB2+1g==}
-    peerDependencies:
-      '@fortawesome/fontawesome-svg-core': ~1 || ~6
-      react: '>=16.3'
-
   '@humanfs/core@0.19.1':
     resolution: {integrity: sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==}
     engines: {node: '>=18.18.0'}
@@ -637,32 +598,6 @@ packages:
       '@types/react-dom':
         optional: true
 
-  '@radix-ui/react-roving-focus@1.1.2':
-    resolution: {integrity: sha512-zgMQWkNO169GtGqRvYrzb0Zf8NhMHS2DuEB/TiEmVnpr5OqPU3i8lfbxaAmC2J/KYuIQxyoQQ6DxepyXp61/xw==}
-    peerDependencies:
-      '@types/react': '*'
-      '@types/react-dom': '*'
-      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
-      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
-    peerDependenciesMeta:
-      '@types/react':
-        optional: true
-      '@types/react-dom':
-        optional: true
-
-  '@radix-ui/react-scroll-area@1.2.3':
-    resolution: {integrity: sha512-l7+NNBfBYYJa9tNqVcP2AGvxdE3lmE6kFTBXdvHgUaZuy+4wGCL1Cl2AfaR7RKyimj7lZURGLwFO59k4eBnDJQ==}
-    peerDependencies:
-      '@types/react': '*'
-      '@types/react-dom': '*'
-      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
-      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
-    peerDependenciesMeta:
-      '@types/react':
-        optional: true
-      '@types/react-dom':
-        optional: true
-
   '@radix-ui/react-slider@1.2.3':
     resolution: {integrity: sha512-nNrLAWLjGESnhqBqcCNW4w2nn7LxudyMzeB6VgdyAnFLC6kfQgnAjSL2v6UkQTnDctJBlxrmxfplWS4iYjdUTw==}
     peerDependencies:
@@ -694,19 +629,6 @@ packages:
       '@types/react':
         optional: true
 
-  '@radix-ui/react-tabs@1.1.3':
-    resolution: {integrity: sha512-9mFyI30cuRDImbmFF6O2KUJdgEOsGh9Vmx9x/Dh9tOhL7BngmQPQfwW4aejKm5OHpfWIdmeV6ySyuxoOGjtNng==}
-    peerDependencies:
-      '@types/react': '*'
-      '@types/react-dom': '*'
-      react: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
-      react-dom: ^16.8 || ^17.0 || ^18.0 || ^19.0 || ^19.0.0-rc
-    peerDependenciesMeta:
-      '@types/react':
-        optional: true
-      '@types/react-dom':
-        optional: true
-
   '@radix-ui/react-use-callback-ref@1.1.0':
     resolution: {integrity: sha512-CasTfvsy+frcFkbXtSJ2Zu9JHpN8TYKxkgJGWbjiZhFivxaeW7rMeZt7QELGVLaYVfFMsKHjb7Ak0nMEe+2Vfw==}
     peerDependencies:
@@ -877,9 +799,6 @@ packages:
   '@types/json-schema@7.0.15':
     resolution: {integrity: sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==}
 
-  '@types/lodash@4.17.15':
-    resolution: {integrity: sha512-w/P33JFeySuhN6JLkysYUK2gEmy9kHHFN7E8ro0tkfmlDOgxBDzWEZ/J8cWA+fHqFevpswDTFZnDx+R9lbL6xw==}
-
   '@types/md5@2.3.5':
     resolution: {integrity: sha512-/i42wjYNgE6wf0j2bcTX6kuowmdL/6PE4IVitMpm2eYKBUuYCprdcWVK+xEF0gcV6ufMCRhtxmReGfc6hIK7Jw==}
 
@@ -1404,10 +1323,6 @@ packages:
   lines-and-columns@1.2.4:
     resolution: {integrity: sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==}
 
-  loadash@1.0.0:
-    resolution: {integrity: sha512-xlX5HBsXB3KG0FJbJJG/3kYWCfsCyCSus3T+uHVu6QL6YxAdggmm3QeyLgn54N2yi5/UE6xxL5ZWJAAiHzHYEg==}
-    deprecated: Package is unsupport. Please use the lodash package instead.
-
   locate-path@6.0.0:
     resolution: {integrity: sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==}
     engines: {node: '>=10'}
@@ -1415,9 +1330,6 @@ packages:
   lodash.merge@4.6.2:
     resolution: {integrity: sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==}
 
-  lodash@4.17.21:
-    resolution: {integrity: sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==}
-
   loose-envify@1.4.0:
     resolution: {integrity: sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==}
     hasBin: true
@@ -1590,9 +1502,6 @@ packages:
     resolution: {integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==}
     engines: {node: '>= 0.8.0'}
 
-  prop-types@15.8.1:
-    resolution: {integrity: sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==}
-
   proxy-from-env@1.1.0:
     resolution: {integrity: sha512-D+zkORCbA9f1tdWRK0RaCR3GPv50cMxcrz4X8k5LTSUD1Dkw47mKJEZQNunItRTkWwgtaUSo1RVFRIG9ZXiFYg==}
 
@@ -1608,9 +1517,6 @@ packages:
     peerDependencies:
       react: ^18.3.1
 
-  react-is@16.13.1:
-    resolution: {integrity: sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==}
-
   react-refresh@0.14.2:
     resolution: {integrity: sha512-jCvmsr+1IUSMUyzOkRcvnVbX3ZYC6g9TDrDbFuFmRDq7PD4yaGbLKNQL6k2jnArV8hjYxh7hVhAZB6s9HDGpZA==}
     engines: {node: '>=0.10.0'}
@@ -2174,22 +2080,6 @@ snapshots:
       '@eslint/core': 0.10.0
       levn: 0.4.1
 
-  '@fortawesome/fontawesome-common-types@6.7.2': {}
-
-  '@fortawesome/fontawesome-svg-core@6.7.2':
-    dependencies:
-      '@fortawesome/fontawesome-common-types': 6.7.2
-
-  '@fortawesome/free-solid-svg-icons@6.7.2':
-    dependencies:
-      '@fortawesome/fontawesome-common-types': 6.7.2
-
-  '@fortawesome/react-fontawesome@0.2.2(@fortawesome/fontawesome-svg-core@6.7.2)(react@18.3.1)':
-    dependencies:
-      '@fortawesome/fontawesome-svg-core': 6.7.2
-      prop-types: 15.8.1
-      react: 18.3.1
-
   '@humanfs/core@0.19.1': {}
 
   '@humanfs/node@0.16.6':
@@ -2375,40 +2265,6 @@ snapshots:
       '@types/react': 18.3.18
       '@types/react-dom': 18.3.5(@types/react@18.3.18)
 
-  '@radix-ui/react-roving-focus@1.1.2(@types/react-dom@18.3.5(@types/react@18.3.18))(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
-    dependencies:
-      '@radix-ui/primitive': 1.1.1
-      '@radix-ui/react-collection': 1.1.2(@types/react-dom@18.3.5(@types/react@18.3.18))(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
-      '@radix-ui/react-compose-refs': 1.1.1(@types/react@18.3.18)(react@18.3.1)
-      '@radix-ui/react-context': 1.1.1(@types/react@18.3.18)(react@18.3.1)
-      '@radix-ui/react-direction': 1.1.0(@types/react@18.3.18)(react@18.3.1)
-      '@radix-ui/react-id': 1.1.0(@types/react@18.3.18)(react@18.3.1)
-      '@radix-ui/react-primitive': 2.0.2(@types/react-dom@18.3.5(@types/react@18.3.18))(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
-      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@18.3.18)(react@18.3.1)
-      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@18.3.18)(react@18.3.1)
-      react: 18.3.1
-      react-dom: 18.3.1(react@18.3.1)
-    optionalDependencies:
-      '@types/react': 18.3.18
-      '@types/react-dom': 18.3.5(@types/react@18.3.18)
-
-  '@radix-ui/react-scroll-area@1.2.3(@types/react-dom@18.3.5(@types/react@18.3.18))(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
-    dependencies:
-      '@radix-ui/number': 1.1.0
-      '@radix-ui/primitive': 1.1.1
-      '@radix-ui/react-compose-refs': 1.1.1(@types/react@18.3.18)(react@18.3.1)
-      '@radix-ui/react-context': 1.1.1(@types/react@18.3.18)(react@18.3.1)
-      '@radix-ui/react-direction': 1.1.0(@types/react@18.3.18)(react@18.3.1)
-      '@radix-ui/react-presence': 1.1.2(@types/react-dom@18.3.5(@types/react@18.3.18))(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
-      '@radix-ui/react-primitive': 2.0.2(@types/react-dom@18.3.5(@types/react@18.3.18))(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
-      '@radix-ui/react-use-callback-ref': 1.1.0(@types/react@18.3.18)(react@18.3.1)
-      '@radix-ui/react-use-layout-effect': 1.1.0(@types/react@18.3.18)(react@18.3.1)
-      react: 18.3.1
-      react-dom: 18.3.1(react@18.3.1)
-    optionalDependencies:
-      '@types/react': 18.3.18
-      '@types/react-dom': 18.3.5(@types/react@18.3.18)
-
   '@radix-ui/react-slider@1.2.3(@types/react-dom@18.3.5(@types/react@18.3.18))(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
     dependencies:
       '@radix-ui/number': 1.1.0
@@ -2442,22 +2298,6 @@ snapshots:
     optionalDependencies:
       '@types/react': 18.3.18
 
-  '@radix-ui/react-tabs@1.1.3(@types/react-dom@18.3.5(@types/react@18.3.18))(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)':
-    dependencies:
-      '@radix-ui/primitive': 1.1.1
-      '@radix-ui/react-context': 1.1.1(@types/react@18.3.18)(react@18.3.1)
-      '@radix-ui/react-direction': 1.1.0(@types/react@18.3.18)(react@18.3.1)
-      '@radix-ui/react-id': 1.1.0(@types/react@18.3.18)(react@18.3.1)
-      '@radix-ui/react-presence': 1.1.2(@types/react-dom@18.3.5(@types/react@18.3.18))(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
-      '@radix-ui/react-primitive': 2.0.2(@types/react-dom@18.3.5(@types/react@18.3.18))(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
-      '@radix-ui/react-roving-focus': 1.1.2(@types/react-dom@18.3.5(@types/react@18.3.18))(@types/react@18.3.18)(react-dom@18.3.1(react@18.3.1))(react@18.3.1)
-      '@radix-ui/react-use-controllable-state': 1.1.0(@types/react@18.3.18)(react@18.3.1)
-      react: 18.3.1
-      react-dom: 18.3.1(react@18.3.1)
-    optionalDependencies:
-      '@types/react': 18.3.18
-      '@types/react-dom': 18.3.5(@types/react@18.3.18)
-
   '@radix-ui/react-use-callback-ref@1.1.0(@types/react@18.3.18)(react@18.3.1)':
     dependencies:
       react: 18.3.1
@@ -2581,8 +2421,6 @@ snapshots:
 
   '@types/json-schema@7.0.15': {}
 
-  '@types/lodash@4.17.15': {}
-
   '@types/md5@2.3.5': {}
 
   '@types/node@22.13.1':
@@ -3126,16 +2964,12 @@ snapshots:
 
   lines-and-columns@1.2.4: {}
 
-  loadash@1.0.0: {}
-
   locate-path@6.0.0:
     dependencies:
       p-locate: 5.0.0
 
   lodash.merge@4.6.2: {}
 
-  lodash@4.17.21: {}
-
   loose-envify@1.4.0:
     dependencies:
       js-tokens: 4.0.0
@@ -3282,12 +3116,6 @@ snapshots:
 
   prelude-ls@1.2.1: {}
 
-  prop-types@15.8.1:
-    dependencies:
-      loose-envify: 1.4.0
-      object-assign: 4.1.1
-      react-is: 16.13.1
-
   proxy-from-env@1.1.0: {}
 
   punycode@2.3.1: {}
@@ -3300,8 +3128,6 @@ snapshots:
       react: 18.3.1
       scheduler: 0.23.2
 
-  react-is@16.13.1: {}
-
   react-refresh@0.14.2: {}
 
   react-remove-scroll-bar@2.3.8(@types/react@18.3.18)(react@18.3.1):
diff --git a/frontend/repomix-output.xml b/frontend/repomix-output.xml
index 795ad63..c1ad236 100644
--- a/frontend/repomix-output.xml
+++ b/frontend/repomix-output.xml
@@ -1,7 +1,6 @@
 <repomix>This file is a merged representation of the entire codebase, combining all repository files into a single document.
-Generated by Repomix on: 2025-02-27T13:08:31.116Z<directory_structure>hooks/
+Generated by Repomix on: 2025-02-20T22:36:03.388Z<directory_structure>hooks/
   use-modal-store.ts
-  use-profile-store.ts
 public/
   vite.svg
 src/
@@ -9,31 +8,23 @@ src/
     react.svg
   components/
     ui/
-      badge.tsx
       button.tsx
       card.tsx
       dialog.tsx
       input.tsx
       label.tsx
-      scroll-area.tsx
       slider.tsx
-      tabs.tsx
     Dashboard.tsx
     Header.tsx
     LandingPage.tsx
-    ModalProvider.tsx
     MovieCard.tsx
-    MovieSuggestions.tsx
     Navbar.tsx
+    SignIn.tsx
     TestPage.tsx
-    UserProfile.tsx
   lib/
     utils.ts
   Modal/
-    movie-details-modal.tsx
-    movie-information-modal.tsx
     sign-in-modal.tsx
-    user-profile-modal.tsx
   App.css
   App.tsx
   index.css
@@ -50,82 +41,11 @@ tailwind.config.js
 tsconfig.app.json
 tsconfig.json
 tsconfig.node.json
-types.ts
-vite.config.ts</directory_structure><files>This section contains the contents of the repository&apos;s files.<file path="hooks/use-modal-store.ts">import { create } from &quot;zustand&quot;;
-import { MovieDetails } from &quot;../types&quot;;
+vite.config.ts</directory_structure><files>This section contains the contents of the repository&apos;s files.<file path="hooks/use-modal-store.ts">import { create } from &apos;zustand&apos;;
 
-export type ModalType = &quot;movieModal&quot;;
-
-interface ModalStore {
-  type: ModalType | null;
-  data: MovieDetails | null;
-  isOpen: boolean;
-  onOpen: (type: ModalType, data?: MovieDetails) =&gt; void;
-  onClose: () =&gt; void;
-}
-
-export const useModal = create&lt;ModalStore&gt;((set) =&gt; ({
-  type: null,
-  data: null,
-  isOpen: false,
-  onOpen: (type, data) =&gt; set({ isOpen: true, type, data }),
-  onClose: () =&gt; set({ type: null, isOpen: false, data: null }),
-}));</file><file path="hooks/use-profile-store.ts">import { create } from &quot;zustand&quot;;
-import { persist } from &quot;zustand/middleware&quot;;
-import { User } from &quot;../types&quot;;
-
-
-interface UserStore {
-  user: User | null;
-  getUser: () =&gt; User | null;
-  setUser: (user: User) =&gt; void;
-}
-
-export const useProfileStore = create&lt;UserStore&gt;()(
-  persist(
-    (set, get) =&gt; ({
-      user: null,
-      getUser: () =&gt; get().user,
-      setUser: (user) =&gt; set({ user }),
-    }),
-    { name: &quot;profile&quot; },
-  ),
-);</file><file path="public/vite.svg">&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; aria-hidden=&quot;true&quot; role=&quot;img&quot; class=&quot;iconify iconify--logos&quot; width=&quot;31.88&quot; height=&quot;32&quot; preserveAspectRatio=&quot;xMidYMid meet&quot; viewBox=&quot;0 0 256 257&quot;&gt;&lt;defs&gt;&lt;linearGradient id=&quot;IconifyId1813088fe1fbc01fb466&quot; x1=&quot;-.828%&quot; x2=&quot;57.636%&quot; y1=&quot;7.652%&quot; y2=&quot;78.411%&quot;&gt;&lt;stop offset=&quot;0%&quot; stop-color=&quot;#41D1FF&quot;&gt;&lt;/stop&gt;&lt;stop offset=&quot;100%&quot; stop-color=&quot;#BD34FE&quot;&gt;&lt;/stop&gt;&lt;/linearGradient&gt;&lt;linearGradient id=&quot;IconifyId1813088fe1fbc01fb467&quot; x1=&quot;43.376%&quot; x2=&quot;50.316%&quot; y1=&quot;2.242%&quot; y2=&quot;89.03%&quot;&gt;&lt;stop offset=&quot;0%&quot; stop-color=&quot;#FFEA83&quot;&gt;&lt;/stop&gt;&lt;stop offset=&quot;8.333%&quot; stop-color=&quot;#FFDD35&quot;&gt;&lt;/stop&gt;&lt;stop offset=&quot;100%&quot; stop-color=&quot;#FFA800&quot;&gt;&lt;/stop&gt;&lt;/linearGradient&gt;&lt;/defs&gt;&lt;path fill=&quot;url(#IconifyId1813088fe1fbc01fb466)&quot; d=&quot;M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z&quot;&gt;&lt;/path&gt;&lt;path fill=&quot;url(#IconifyId1813088fe1fbc01fb467)&quot; d=&quot;M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;</file><file path="src/assets/react.svg">&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; aria-hidden=&quot;true&quot; role=&quot;img&quot; class=&quot;iconify iconify--logos&quot; width=&quot;35.93&quot; height=&quot;32&quot; preserveAspectRatio=&quot;xMidYMid meet&quot; viewBox=&quot;0 0 256 228&quot;&gt;&lt;path fill=&quot;#00D8FF&quot; d=&quot;M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;</file><file path="src/components/ui/badge.tsx">import * as React from &quot;react&quot;
-import { cva, type VariantProps } from &quot;class-variance-authority&quot;
-
-import { cn } from &quot;@/lib/utils&quot;
-
-const badgeVariants = cva(
-  &quot;inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2&quot;,
-  {
-    variants: {
-      variant: {
-        default:
-          &quot;border-transparent bg-primary text-primary-foreground hover:bg-primary/80&quot;,
-        secondary:
-          &quot;border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80&quot;,
-        destructive:
-          &quot;border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80&quot;,
-        outline: &quot;text-foreground&quot;,
-      },
-    },
-    defaultVariants: {
-      variant: &quot;default&quot;,
-    },
-  }
-)
-
-export interface BadgeProps
-  extends React.HTMLAttributes&lt;HTMLDivElement&gt;,
-    VariantProps&lt;typeof badgeVariants&gt; {}
-
-function Badge({ className, variant, ...props }: BadgeProps) {
-  return (
-    &lt;div className={cn(badgeVariants({ variant }), className)} {...props} /&gt;
-  )
-}
-
-export { Badge, badgeVariants }</file><file path="src/components/ui/button.tsx">import * as React from &quot;react&quot;
+const useModalStore = create((set) =&gt; ({
+  
+}));</file><file path="public/vite.svg">&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; aria-hidden=&quot;true&quot; role=&quot;img&quot; class=&quot;iconify iconify--logos&quot; width=&quot;31.88&quot; height=&quot;32&quot; preserveAspectRatio=&quot;xMidYMid meet&quot; viewBox=&quot;0 0 256 257&quot;&gt;&lt;defs&gt;&lt;linearGradient id=&quot;IconifyId1813088fe1fbc01fb466&quot; x1=&quot;-.828%&quot; x2=&quot;57.636%&quot; y1=&quot;7.652%&quot; y2=&quot;78.411%&quot;&gt;&lt;stop offset=&quot;0%&quot; stop-color=&quot;#41D1FF&quot;&gt;&lt;/stop&gt;&lt;stop offset=&quot;100%&quot; stop-color=&quot;#BD34FE&quot;&gt;&lt;/stop&gt;&lt;/linearGradient&gt;&lt;linearGradient id=&quot;IconifyId1813088fe1fbc01fb467&quot; x1=&quot;43.376%&quot; x2=&quot;50.316%&quot; y1=&quot;2.242%&quot; y2=&quot;89.03%&quot;&gt;&lt;stop offset=&quot;0%&quot; stop-color=&quot;#FFEA83&quot;&gt;&lt;/stop&gt;&lt;stop offset=&quot;8.333%&quot; stop-color=&quot;#FFDD35&quot;&gt;&lt;/stop&gt;&lt;stop offset=&quot;100%&quot; stop-color=&quot;#FFA800&quot;&gt;&lt;/stop&gt;&lt;/linearGradient&gt;&lt;/defs&gt;&lt;path fill=&quot;url(#IconifyId1813088fe1fbc01fb466)&quot; d=&quot;M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z&quot;&gt;&lt;/path&gt;&lt;path fill=&quot;url(#IconifyId1813088fe1fbc01fb467)&quot; d=&quot;M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;</file><file path="src/assets/react.svg">&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; aria-hidden=&quot;true&quot; role=&quot;img&quot; class=&quot;iconify iconify--logos&quot; width=&quot;35.93&quot; height=&quot;32&quot; preserveAspectRatio=&quot;xMidYMid meet&quot; viewBox=&quot;0 0 256 228&quot;&gt;&lt;path fill=&quot;#00D8FF&quot; d=&quot;M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;</file><file path="src/components/ui/button.tsx">import * as React from &quot;react&quot;
 import { Slot } from &quot;@radix-ui/react-slot&quot;
 import { cva, type VariantProps } from &quot;class-variance-authority&quot;
 
@@ -421,52 +341,7 @@ const Label = React.forwardRef&lt;
 ))
 Label.displayName = LabelPrimitive.Root.displayName
 
-export { Label }</file><file path="src/components/ui/scroll-area.tsx">import * as React from &quot;react&quot;
-import * as ScrollAreaPrimitive from &quot;@radix-ui/react-scroll-area&quot;
-
-import { cn } from &quot;@/lib/utils&quot;
-
-const ScrollArea = React.forwardRef&lt;
-  React.ElementRef&lt;typeof ScrollAreaPrimitive.Root&gt;,
-  React.ComponentPropsWithoutRef&lt;typeof ScrollAreaPrimitive.Root&gt;
-&gt;(({ className, children, ...props }, ref) =&gt; (
-  &lt;ScrollAreaPrimitive.Root
-    ref={ref}
-    className={cn(&quot;relative overflow-hidden&quot;, className)}
-    {...props}
-  &gt;
-    &lt;ScrollAreaPrimitive.Viewport className=&quot;h-full w-full rounded-[inherit]&quot;&gt;
-      {children}
-    &lt;/ScrollAreaPrimitive.Viewport&gt;
-    &lt;ScrollBar /&gt;
-    &lt;ScrollAreaPrimitive.Corner /&gt;
-  &lt;/ScrollAreaPrimitive.Root&gt;
-))
-ScrollArea.displayName = ScrollAreaPrimitive.Root.displayName
-
-const ScrollBar = React.forwardRef&lt;
-  React.ElementRef&lt;typeof ScrollAreaPrimitive.ScrollAreaScrollbar&gt;,
-  React.ComponentPropsWithoutRef&lt;typeof ScrollAreaPrimitive.ScrollAreaScrollbar&gt;
-&gt;(({ className, orientation = &quot;vertical&quot;, ...props }, ref) =&gt; (
-  &lt;ScrollAreaPrimitive.ScrollAreaScrollbar
-    ref={ref}
-    orientation={orientation}
-    className={cn(
-      &quot;flex touch-none select-none transition-colors&quot;,
-      orientation === &quot;vertical&quot; &amp;&amp;
-        &quot;h-full w-2.5 border-l border-l-transparent p-[1px]&quot;,
-      orientation === &quot;horizontal&quot; &amp;&amp;
-        &quot;h-2.5 flex-col border-t border-t-transparent p-[1px]&quot;,
-      className
-    )}
-    {...props}
-  &gt;
-    &lt;ScrollAreaPrimitive.ScrollAreaThumb className=&quot;relative flex-1 rounded-full bg-border&quot; /&gt;
-  &lt;/ScrollAreaPrimitive.ScrollAreaScrollbar&gt;
-))
-ScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName
-
-export { ScrollArea, ScrollBar }</file><file path="src/components/ui/slider.tsx">import * as React from &quot;react&quot;
+export { Label }</file><file path="src/components/ui/slider.tsx">import * as React from &quot;react&quot;
 import * as SliderPrimitive from &quot;@radix-ui/react-slider&quot;
 
 import { cn } from &quot;@/lib/utils&quot;
@@ -491,169 +366,66 @@ const Slider = React.forwardRef&lt;
 ))
 Slider.displayName = SliderPrimitive.Root.displayName
 
-export { Slider }</file><file path="src/components/ui/tabs.tsx">import * as React from &quot;react&quot;
-import * as TabsPrimitive from &quot;@radix-ui/react-tabs&quot;
-
-import { cn } from &quot;@/lib/utils&quot;
-
-const Tabs = TabsPrimitive.Root
-
-const TabsList = React.forwardRef&lt;
-  React.ElementRef&lt;typeof TabsPrimitive.List&gt;,
-  React.ComponentPropsWithoutRef&lt;typeof TabsPrimitive.List&gt;
-&gt;(({ className, ...props }, ref) =&gt; (
-  &lt;TabsPrimitive.List
-    ref={ref}
-    className={cn(
-      &quot;inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground&quot;,
-      className
-    )}
-    {...props}
-  /&gt;
-))
-TabsList.displayName = TabsPrimitive.List.displayName
-
-const TabsTrigger = React.forwardRef&lt;
-  React.ElementRef&lt;typeof TabsPrimitive.Trigger&gt;,
-  React.ComponentPropsWithoutRef&lt;typeof TabsPrimitive.Trigger&gt;
-&gt;(({ className, ...props }, ref) =&gt; (
-  &lt;TabsPrimitive.Trigger
-    ref={ref}
-    className={cn(
-      &quot;inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm&quot;,
-      className
-    )}
-    {...props}
-  /&gt;
-))
-TabsTrigger.displayName = TabsPrimitive.Trigger.displayName
-
-const TabsContent = React.forwardRef&lt;
-  React.ElementRef&lt;typeof TabsPrimitive.Content&gt;,
-  React.ComponentPropsWithoutRef&lt;typeof TabsPrimitive.Content&gt;
-&gt;(({ className, ...props }, ref) =&gt; (
-  &lt;TabsPrimitive.Content
-    ref={ref}
-    className={cn(
-      &quot;mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2&quot;,
-      className
-    )}
-    {...props}
-  /&gt;
-))
-TabsContent.displayName = TabsPrimitive.Content.displayName
-
-export { Tabs, TabsList, TabsTrigger, TabsContent }</file><file path="src/components/Dashboard.tsx">import type React from &quot;react&quot;;
-import { debounce } from &quot;lodash&quot;;
-import axios from &quot;axios&quot;;
-import { useEffect, useState, useCallback } from &quot;react&quot;;
-import { useNavigate } from &quot;react-router-dom&quot;;
-import MovieSuggestions from &quot;./MovieSuggestions&quot;;
-import { Movie } from &quot;../../types&quot;;
-import { MovieSuggestion } from &quot;../../types&quot;;
+export { Slider }</file><file path="src/components/Dashboard.tsx">import type React from &quot;react&quot;;
+import { useLocation } from &quot;react-router-dom&quot;;
+import { useState } from &quot;react&quot;;
 import { Button } from &quot;./ui/button&quot;;
 import { Input } from &quot;./ui/input&quot;;
 import { Label } from &quot;./ui/label&quot;;
 import { Slider } from &quot;./ui/slider&quot;;
 import Header from &quot;./Header&quot;;
 import MovieCard from &quot;./MovieCard&quot;;
-import { useProfileStore } from &quot;../../hooks/use-profile-store&quot;;
 import { Card, CardContent, CardHeader, CardTitle } from &quot;./ui/card&quot;;
-import { useModal } from &quot;../../hooks/use-modal-store&quot;;
+
+const mockMovies = [
+  {
+    id: 1,
+    title: &quot;Inception&quot;,
+    year: 2010,
+    genre: &quot;Sci-Fi&quot;,
+    duration: 148,
+    poster: &quot;/placeholder.svg?height=400&amp;width=300&quot;,
+  },
+  {
+    id: 2,
+    title: &quot;The Shawshank Redemption&quot;,
+    year: 1994,
+    genre: &quot;Drama&quot;,
+    duration: 142,
+    poster: &quot;/placeholder.svg?height=400&amp;width=300&quot;,
+  },
+  {
+    id: 3,
+    title: &quot;The Dark Knight&quot;,
+    year: 2008,
+    genre: &quot;Action&quot;,
+    duration: 152,
+    poster: &quot;/placeholder.svg?height=400&amp;width=300&quot;,
+  },
+  {
+    id: 4,
+    title: &quot;The Dark Knight&quot;,
+    year: 2008,
+    genre: &quot;Action&quot;,
+    duration: 152,
+    poster: &quot;/placeholder.svg?height=400&amp;width=300&quot;,
+  },
+];
 
 const Dashboard: React.FC = () =&gt; {
-  const BACKEND_URL = import.meta.env.VITE_BACKEND_URL;
-  const { user } = useProfileStore();
-  const navigate = useNavigate();
-  const { onOpen } = useModal();
+  const location = useLocation();
+  const userData = location.state?.userData;
+  const token = localStorage.getItem(&quot;authToken&quot;);
 
   const [searchTerm, setSearchTerm] = useState(&quot;&quot;);
-  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState(&quot;&quot;);
-  const [suggestions, setSuggestions] = useState&lt;MovieSuggestion[]&gt;([]);
   const [yearRange, setYearRange] = useState([1900, 2025]);
   const [durationRange, setDurationRange] = useState([0, 240]);
   const [selectedGenres, setSelectedGenres] = useState&lt;string[]&gt;([]);
   const [excludedGenres, setExcludedGenres] = useState&lt;string[]&gt;([]);
-  const [movies, setMovies] = useState&lt;Movie[]&gt;([]);
-  const [genres, setGenres] = useState&lt;string[]&gt;([]);
-
-  useEffect(() =&gt; {
-    if (!user) {
-      navigate(&quot;/&quot;);
-    }
-
-    fetchGenres();
-  }, [user]);
-
-  useEffect(() =&gt; {
-    if (!debouncedSearchTerm) {
-      return;
-    }
-    getSuggestions();
-  }, [debouncedSearchTerm]);
-
-  const searchMovies = async () =&gt; {
-    const criterias = {
-        GENRES_INCLUS: selectedGenres,
-        GENRES_EXCLUS: excludedGenres,
-        ANNEE: yearRange[1],
-        DUREE_MIN: durationRange[0] === 0 ? 1 : durationRange[0],
-        DUREE_MAX: durationRange[1],
-    };
-
-    try {
-      const response = await axios.post(`${BACKEND_URL}/movies`, criterias, {
-        headers: {
-            &quot;Content-Type&quot;: &quot;application/json&quot;,
-        },
-      });
-      setMovies(response.data.items);
-    } catch (error: any) {
-      console.error(error);
-    }
-  };
-
-  const fetchGenres = async () =&gt; {
-    try {
-      const response = await axios.get(`${BACKEND_URL}/movies/all-genres`);
-      setGenres(response.data);
-    } catch (error: any) {
-      console.error(error);
-    }
-  };
-
-  const getSuggestions = async () =&gt; {
-    try {
-      const token = localStorage.getItem(&quot;authToken&quot;);
-      const response = await axios.get(
-        `${BACKEND_URL}/movies/suggestions/${debouncedSearchTerm}`,
-        {
-          headers: {
-            Authorization: `Bearer ${token}`,
-          },
-        },
-      );
-
-      setSuggestions(response.data);
-    } catch (error: any) {
-      console.error(error);
-    }
-  };
-
-  useEffect(() =&gt; {
-    debounceSetSearch(searchTerm);
-  }, [searchTerm]);
-
-  const debounceSetSearch = useCallback(
-    debounce((value: string) =&gt; {
-      setDebouncedSearchTerm(value);
-    }, 300),
-    [],
-  );
 
   const handleSearch = (e: React.FormEvent) =&gt; {
     e.preventDefault();
-    searchMovies();
+    console.log(&quot;Searching for:&quot;, searchTerm);
   };
 
   const handleYearRangeChange = (value: number[]) =&gt; {
@@ -680,29 +452,13 @@ const Dashboard: React.FC = () =&gt; {
     }
   };
 
-  const onClickSelection = async (movieId: number) =&gt; {
-    setSuggestions([]);
-    try {
-      const response = await axios.get(`${BACKEND_URL}/movies/movie/${movieId}`);
-      const movie: Movie = response.data;
-      onOpen(&quot;movieModal&quot;, movie as Movie);
-      setSearchTerm(&quot;&quot;);
-    } catch (error: any) {
-      console.error(error);
-    };
-  }
-
   const openTrailer = (movieId: number) =&gt; {
     console.log(&quot;Opening trailer for movie ID:&quot;, movieId);
   };
 
-  if (!user) {
-    navigate(&quot;/&quot;);
-  }
-
   return (
     &lt;div className=&quot;bg-background min-h-screen w-screen&quot;&gt;
-      &lt;Header title=&quot;Dashboard&quot; /&gt;
+      &lt;Header /&gt;
       &lt;div className=&quot;container mx-auto px-4 py-8&quot;&gt;
         &lt;div className=&quot;flex gap-8&quot;&gt;
           &lt;Card className=&quot;basis-3/4&quot;&gt;
@@ -711,24 +467,14 @@ const Dashboard: React.FC = () =&gt; {
             &lt;/CardHeader&gt;
             &lt;CardContent&gt;
               &lt;form onSubmit={handleSearch} className=&quot;space-y-6&quot;&gt;
-                &lt;div className=&quot;flex gap-2 relative&quot;&gt;
-                  {&quot; &quot;}
+                &lt;div className=&quot;flex gap-2&quot;&gt;
                   &lt;Input
                     placeholder=&quot;Search movies...&quot;
                     value={searchTerm}
-                    onChange={(e) =&gt; setSearchTerm(e.target.value)}
+                    onChange={(e: any) =&gt; setSearchTerm(e.target.value)}
                     className=&quot;flex-1&quot;
                   /&gt;
                   &lt;Button type=&quot;submit&quot;&gt;Search&lt;/Button&gt;
-                  {debouncedSearchTerm.length !== 0 &amp;&amp; (
-                    &lt;MovieSuggestions
-                      suggestions={suggestions.map((s: MovieSuggestion) =&gt; (s))}
-                      onSelect={(suggestion) =&gt; {
-                        onClickSelection(suggestion.id);
-                      }}
-                      visible={suggestions.length &gt; 0}
-                    /&gt;
-                  )}
                 &lt;/div&gt;
 
                 &lt;div className=&quot;space-y-2&quot;&gt;
@@ -762,7 +508,7 @@ const Dashboard: React.FC = () =&gt; {
                 &lt;div className=&quot;space-y-2&quot;&gt;
                   &lt;Label&gt;Include Genres&lt;/Label&gt;
                   &lt;div className=&quot;flex flex-wrap gap-2&quot;&gt;
-                    {genres.map((genre) =&gt; (
+                    {[&quot;Action&quot;, &quot;Comedy&quot;, &quot;Drama&quot;, &quot;Sci-Fi&quot;].map((genre) =&gt; (
                       &lt;Button
                         key={genre}
                         variant={
@@ -781,10 +527,8 @@ const Dashboard: React.FC = () =&gt; {
                 &lt;div className=&quot;space-y-2&quot;&gt;
                   &lt;Label&gt;Exclude Genres&lt;/Label&gt;
                   &lt;div className=&quot;flex flex-wrap gap-2&quot;&gt;
-                    {excludedGenres.length === 0 ? (
-                      &lt;span className=&quot;text-gray-400&quot;&gt;No genres excluded&lt;/span&gt;
-                    ) : (
-                      excludedGenres.map((genre) =&gt; (
+                    {[&quot;Horror&quot;, &quot;Romance&quot;, &quot;Thriller&quot;, &quot;Documentary&quot;].map(
+                      (genre) =&gt; (
                         &lt;Button
                           key={genre}
                           variant={
@@ -798,7 +542,7 @@ const Dashboard: React.FC = () =&gt; {
                         &gt;
                           {genre}
                         &lt;/Button&gt;
-                      ))
+                      ),
                     )}
                   &lt;/div&gt;
                 &lt;/div&gt;
@@ -817,38 +561,32 @@ const Dashboard: React.FC = () =&gt; {
         &lt;/div&gt;
 
         &lt;div className=&quot;mt-8 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6&quot;&gt;
-          {movies ? movies.map((movie) =&gt; (
-            &lt;MovieCard key={movie.ID} movie={movie} openTrailer={openTrailer} /&gt;
-          )) : null}
+          {mockMovies.map((movie) =&gt; (
+            &lt;MovieCard key={movie.id} movie={movie} openTrailer={openTrailer} /&gt;
+          ))}
         &lt;/div&gt;
       &lt;/div&gt;
     &lt;/div&gt;
-  );
+  )
 };
 
-export default Dashboard;</file><file path="src/components/Header.tsx">import type React from &quot;react&quot;;
+export default Dashboard;</file><file path="src/components/Header.tsx">import type React from &quot;react&quot;
 import { Button } from &quot;./ui/button&quot;;
-import { User, Film } from &quot;lucide-react&quot;;
-import { useNavigate } from &quot;react-router-dom&quot;;
-
-type HeaderProps = {
-  title: string;
-};
-const Header: React.FC&lt;HeaderProps&gt; = ({ title }) =&gt; {
-  const navigate = useNavigate();
+import { User, Film } from &quot;lucide-react&quot;
 
+const Header: React.FC = () =&gt; {
   return (
     &lt;header className=&quot;border-b bg-card&quot;&gt;
       &lt;div className=&quot;container mx-auto px-4 py-4&quot;&gt;
         &lt;div className=&quot;flex justify-between items-center&quot;&gt;
-          &lt;h1 className=&quot;text-2xl font-bold&quot;&gt;{title}&lt;/h1&gt;
+          &lt;h1 className=&quot;text-2xl font-bold&quot;&gt;Dashboard&lt;/h1&gt;
           &lt;a href=&quot;#&quot; className=&quot;flex items-center gap-2 hover:text-primary&quot;&gt;
             &lt;Film className=&quot;h-5 w-5&quot; /&gt;
             &lt;span className=&quot;text-xl font-semibold&quot;&gt;iTunes&lt;/span&gt;
           &lt;/a&gt;
           &lt;div className=&quot;flex items-center gap-4&quot;&gt;
             &lt;span className=&quot;text-sm text-muted-foreground&quot;&gt;Credits: 100&lt;/span&gt;
-            &lt;Button variant=&quot;outline&quot; size=&quot;sm&quot; onClick={ () =&gt; (navigate(&quot;/profile&quot;)) }&gt;
+            &lt;Button variant=&quot;outline&quot; size=&quot;sm&quot;&gt;
               &lt;User className=&quot;w-4 h-4 mr-2&quot; /&gt;
               Profile
             &lt;/Button&gt;
@@ -856,54 +594,32 @@ const Header: React.FC&lt;HeaderProps&gt; = ({ title }) =&gt; {
         &lt;/div&gt;
       &lt;/div&gt;
     &lt;/header&gt;
-  );
-};
+  )
+}
 
-export default Header;</file><file path="src/components/LandingPage.tsx">import { useState } from &quot;react&quot;;
+export default Header</file><file path="src/components/LandingPage.tsx">import { useState } from &quot;react&quot;;
 import { Button } from &quot;./ui/button&quot;;
 import { Film } from &quot;lucide-react&quot;;
 import { Input } from &quot;./ui/input&quot;;
 import axios from &quot;axios&quot;;
 import { useNavigate } from &quot;react-router-dom&quot;;
 import SignInModal from &quot;./../Modal/sign-in-modal&quot;;
-import { useProfileStore } from &quot;../../hooks/use-profile-store&quot;;
-import { useModal } from &quot;../../hooks/use-modal-store&quot;;
 
 const LandingPage = () =&gt; {
   const BACKEND_URL = import.meta.env.VITE_BACKEND_URL;
   const navigate = useNavigate();
-  const { setUser } = useProfileStore();
-  const { onOpen } = useModal();
 
   const [showModal, setShowModal] = useState(false);
   const [error, setError] = useState&lt;string&gt;(&quot;&quot;);
 
-  const fecthUserInformation = async () =&gt; {
-    try {
-      const token = localStorage.getItem(&quot;authToken&quot;);
-      const response = await axios.get(`${BACKEND_URL}/users/myaccount`, {
-        headers: {
-          Authorization: `Bearer ${token}`,
-        },
-      });
-
-      setUser(response.data);
-
-    } catch (error: any) {
-      console.error(error);
-    }
-  };
-
   const handleSearchClick = (e: React.FormEvent) =&gt; {
     e.preventDefault();
     setShowModal(true);
   };
 
-  const handleSignInClick = async (formData: {
-    courriel: string;
-    mot_de_passe: string;
-  }) =&gt; {
+  const handleSignInClick = async (formData: { email: string, mot_de_passe: string }) =&gt; {
     try {
+      console.log(formData);
       const response = await axios.post(`${BACKEND_URL}/auth/login`, formData, {
         headers: {
           &quot;Content-Type&quot;: &quot;application/json&quot;,
@@ -913,13 +629,11 @@ const LandingPage = () =&gt; {
       const token = response.data.token;
       localStorage.setItem(&quot;authToken&quot;, token);
 
-      await fecthUserInformation();
-
-      navigate(&quot;/dashboard&quot;);
+      navigate(&quot;/dashboard&quot;, { state: { userData: response.data } });
       setShowModal(false);
     } catch (error: any) {
       if (error.response.status === 401) {
-        setError(&quot;Email ou mot de passe incorrect&quot;);
+        setError(&quot;Email ou mot de passe incorrect&quot;); 
       } else {
         console.error(error);
       }
@@ -927,7 +641,7 @@ const LandingPage = () =&gt; {
   };
 
   return (
-    &lt;div className=&quot;w-screen flex flex-col items-center h-screen justify-center&quot;&gt;
+    &lt;div className=&quot;w-screen flex flex-col items-center&quot;&gt;
       &lt;a
         className=&quot;flex items-center justify-center fixed top-0 pt-10&quot;
         href=&quot;#&quot;
@@ -935,7 +649,7 @@ const LandingPage = () =&gt; {
         &lt;Film className=&quot;h-6 w-6&quot; /&gt;
         &lt;span className=&quot;text-2xl font-bold&quot;&gt;iTunes&lt;/span&gt;
       &lt;/a&gt;
-      &lt;div className=&quot;flex flex-col items-center space-y-4 text-center mt-20 pb-32&quot;&gt;
+      &lt;div className=&quot;flex flex-col items-center space-y-4 text-center mt-20&quot;&gt;
         &lt;div className=&quot;space-y-2&quot;&gt;
           &lt;h1 className=&quot;text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl lg:text-6xl/none&quot;&gt;
             Trouvez Votre Film Préféré
@@ -966,98 +680,61 @@ const LandingPage = () =&gt; {
   );
 };
 
-export default LandingPage;</file><file path="src/components/ModalProvider.tsx">import MovieDetailsModal from &quot;../Modal/movie-details-modal&quot;;
-const ModalProvider = () =&gt; {
-  return (
-    &lt;&gt;
-      &lt;MovieDetailsModal /&gt;
-    &lt;/&gt;
-    
-  );
-};
-
-export default ModalProvider;</file><file path="src/components/MovieCard.tsx">// Current MovieCard.tsx
-import type React from &quot;react&quot;;
+export default LandingPage;</file><file path="src/components/MovieCard.tsx">import type React from &quot;react&quot;;
 import { Button } from &quot;./ui/button&quot;;
 import { Card, CardContent } from &quot;./ui/card&quot;;
-import { MovieSuggestion } from &quot;../../types&quot;;
-import { useModal } from &quot;../../hooks/use-modal-store&quot;;
+import { Play } from &quot;lucide-react&quot;;
 
-interface MovieCardProps {
-  movie: MovieSuggestion;
-  onCardClick: () =&gt; void;
+interface Movie {
+  id: number;
+  title: string;
+  year: number;
+  genre: string;
+  duration: number;
+  poster: string;
 }
 
-const MovieCard: React.FC&lt;MovieCardProps&gt; = ({ movie }) =&gt; {
-
-  const { onOpen } = useModal();
-
-  const onCardClick = () =&gt; {
-    console.log(&quot;Opening movie modal for:&quot;, movie);
-    onOpen(&quot;movieModal&quot;, movie);
-  };
+interface MovieCardProps {
+  movie: Movie;
+  openTrailer: (movieId: number) =&gt; void;
+}
 
+const MovieCard: React.FC&lt;MovieCardProps&gt; = ({ movie, openTrailer }) =&gt; {
   return (
-    &lt;Card key={movie.ID} className=&quot;overflow-hidden&quot;&gt;
+    &lt;Card key={movie.id} className=&quot;overflow-hidden&quot;&gt;
       &lt;CardContent className=&quot;p-0&quot;&gt;
         &lt;div className=&quot;aspect-[2/3] relative&quot;&gt;
-          &lt;Button onClick={onCardClick}&gt;
-            &lt;img
-              src={movie.POSTER_URL || &quot;/placeholder.svg&quot;}
-              alt={movie.TITRE}
-              className=&quot;object-cover absolute inset-0 w-full h-full&quot;
-            /&gt;
-          &lt;/Button&gt;
+          &lt;img
+            src={movie.poster || &quot;/placeholder.svg&quot;}
+            alt={movie.title}
+            className=&quot;object-cover absolute inset-0 w-full h-full&quot;
+          /&gt;
         &lt;/div&gt;
         &lt;div className=&quot;p-4 space-y-4&quot;&gt;
           &lt;div&gt;
             &lt;h3 className=&quot;font-semibold text-lg leading-tight&quot;&gt;
-              {movie.TITRE}
+              {movie.title}
             &lt;/h3&gt;
             &lt;p className=&quot;text-sm text-muted-foreground&quot;&gt;
-              {movie.ANNEE} • {movie.DUREE} min
+              {movie.year} • {movie.genre} • {movie.duration} min
             &lt;/p&gt;
           &lt;/div&gt;
+          &lt;Button
+            size=&quot;sm&quot;
+            variant=&quot;outline&quot;
+            className=&quot;w-full&quot;
+            onClick={() =&gt; openTrailer(movie.id)}
+          &gt;
+            &lt;Play className=&quot;w-4 h-4 mr-2&quot; /&gt;
+            Watch Trailer
+          &lt;/Button&gt;
         &lt;/div&gt;
       &lt;/CardContent&gt;
     &lt;/Card&gt;
   );
 };
 
-export default MovieCard;</file><file path="src/components/MovieSuggestions.tsx">import { Card } from &quot;../components/ui/card&quot;;
-import { MovieSuggestion } from &quot;../../types&quot;;
-
-type MovieSuggestionsProps = {
-  suggestions: MovieSuggestion[];
-  onSelect: (suggestion: MovieSuggestion) =&gt; void;
-  visible: boolean;
-};
-
-const MovieSuggestions = ({
-  suggestions,
-  onSelect,
-  visible,
-}: MovieSuggestionsProps) =&gt; {
-  if (!visible || suggestions.length === 0) return null;
-
-  return (
-    &lt;Card className=&quot;absolute top-full left-0 right-0 mt-1 max-h-60 overflow-y-auto z-50 bg-white border border-input&quot;&gt;
-      &lt;div className=&quot;w-full&quot;&gt;
-        {suggestions.map((suggestion, index) =&gt; (
-          &lt;button
-            key={index}
-            onClick={() =&gt; onSelect(suggestion)}
-            className=&quot;w-full text-left px-3 py-2 hover:bg-accent hover:text-accent-foreground rounded-sm text-sm bg-white text-black&quot;
-          &gt;
-            {suggestion.title}
-          &lt;/button&gt;
-        ))}
-      &lt;/div&gt;
-    &lt;/Card&gt;
-  );
-};
-
-export default MovieSuggestions;</file><file path="src/components/Navbar.tsx">import { Film } from &quot;lucide-react&quot;;
+export default MovieCard;</file><file path="src/components/Navbar.tsx">import { Film } from &quot;lucide-react&quot;;
 
 const NarBar = () =&gt; {
   return (
@@ -1070,599 +747,116 @@ const NarBar = () =&gt; {
   );
 };
 
-export default NarBar;</file><file path="src/components/TestPage.tsx">import {
+export default NarBar;</file><file path="src/components/SignIn.tsx">import { useState } from &quot;react&quot;;
+import {
   Dialog,
   DialogContent,
-} from &quot;../components/ui/dialog&quot;;
-import { ScrollArea } from &quot;../components/ui/scroll-area&quot;;
-import { Button } from &quot;../components/ui/button&quot;;
-import { Tabs, TabsContent, TabsList, TabsTrigger } from &quot;../components/ui/tabs&quot;;
-import {
-  Clock,
-  Calendar,
-  Globe,
-  Play,
-} from &quot;lucide-react&quot;;
-
-// Define the new Movie type
-export type Movie = {
-  ID: number;
-  TITRE: string;
-  RESUME: string;
-  ANNEE: number;
-  DUREE: number;
-  LANGUE: string;
-  ID_REALISATEUR: number;
-  POSTER_URL: string;
-};
-
-// Mock data for testing
-const mockMovieData: Movie = {
-  ID: 1,
-  TITRE: &quot;Inception&quot;,
-  RESUME: &quot;A thief who steals corporate secrets through the use of dream-sharing technology is given the inverse task of planting an idea into the mind of a C.E.O.&quot;,
-  ANNEE: 2010,
-  DUREE: 148,
-  LANGUE: &quot;English&quot;,
-  ID_REALISATEUR: 1,
-  POSTER_URL: &quot;https://example.com/inception-poster.jpg&quot;,
-};
-
-const TestPage = () =&gt; {
+  DialogDescription,
+  DialogHeader,
+  DialogTitle,
+  DialogTrigger,
+  DialogFooter,
+} from &quot;./ui/dialog&quot;;
+import { Button } from &quot;./ui/button&quot;;
+import { Input } from &quot;./ui/input&quot;;
+import { Label } from &quot;./ui/label&quot;;
+import { EyeIcon, EyeOffIcon } from &quot;lucide-react&quot;;
 
-  const handleWatchTrailer = () =&gt; {
-    console.log(&apos;Opening trailer for:&apos;, mockMovieData.TITRE);
-  };
+const SignIn = () =&gt; {
+  const [showPassword, setShowPassword] = useState(false);
 
   return (
-    &lt;div className=&quot;p-4&quot;&gt;
-      &lt;h1 className=&quot;text-2xl font-bold mb-4&quot;&gt;Test Page&lt;/h1&gt;
-      &lt;Dialog open={true} onOpenChange={() =&gt; {}}&gt;
-        &lt;DialogContent className=&quot;max-w-4xl max-h-[55vh] overflow-hidden p-0&quot;&gt;
-          &lt;div className=&quot;relative w-full h-64 md:h-80 bg-gradient-to-b from-black/70 to-background overflow-hidden&quot;&gt;
-            &lt;div 
-              className=&quot;absolute inset-0 bg-cover bg-center blur-sm opacity-50&quot;
-              style={{ backgroundImage: `url(${mockMovieData.POSTER_URL})` }}
-            /&gt;
-            &lt;div className=&quot;absolute inset-0 bg-black/40 flex p-6&quot;&gt;
-              &lt;div className=&quot;flex flex-col md:flex-row gap-6 z-10 w-full&quot;&gt;
-                &lt;div className=&quot;hidden md:block flex-shrink-0 w-40 h-auto shadow-lg rounded-md overflow-hidden&quot;&gt;
-                  &lt;img 
-                    src={mockMovieData.POSTER_URL} 
-                    alt={mockMovieData.TITRE} 
-                    className=&quot;w-full h-full object-cover&quot;
-                  /&gt;
-                &lt;/div&gt;
-                &lt;div className=&quot;flex flex-col justify-end text-white space-y-2 flex-grow&quot;&gt;
-                  &lt;h1 className=&quot;text-2xl md:text-3xl font-bold&quot;&gt;{mockMovieData.TITRE}&lt;/h1&gt;
-                  &lt;div className=&quot;flex flex-wrap items-center gap-x-4 gap-y-2 text-sm text-white/80&quot;&gt;
-                    &lt;div className=&quot;flex items-center&quot;&gt;
-                      &lt;Calendar className=&quot;w-4 h-4 mr-1&quot; /&gt;
-                      &lt;span&gt;{mockMovieData.ANNEE}&lt;/span&gt;
-                    &lt;/div&gt;
-                    &lt;div className=&quot;flex items-center&quot;&gt;
-                      &lt;Clock className=&quot;w-4 h-4 mr-1&quot; /&gt;
-                      &lt;span&gt;{mockMovieData.DUREE} min&lt;/span&gt;
-                    &lt;/div&gt;
-                    &lt;div className=&quot;flex items-center&quot;&gt;
-                      &lt;Globe className=&quot;w-4 h-4 mr-1&quot; /&gt;
-                      &lt;span&gt;{mockMovieData.LANGUE}&lt;/span&gt;
-                    &lt;/div&gt;
-                  &lt;/div&gt;
-                  &lt;div className=&quot;flex gap-2 mt-4&quot;&gt;
-                    &lt;Button 
-                      onClick={handleWatchTrailer} 
-                      className=&quot;bg-primary hover:bg-primary/90&quot;
-                    &gt;
-                      &lt;Play className=&quot;w-4 h-4 mr-2&quot; /&gt;
-                      Watch Trailer
-                    &lt;/Button&gt;
-                  &lt;/div&gt;
-                &lt;/div&gt;
+    &lt;Dialog&gt;
+      &lt;DialogTrigger asChild&gt;
+        &lt;Button variant=&quot;outline&quot;&gt;Se connecter&lt;/Button&gt;
+      &lt;/DialogTrigger&gt;
+      &lt;DialogContent className=&quot;sm:max-w-[425px] [&amp;&gt;button]:hover:bg-transparent [&amp;&gt;button]:focus:bg-transparent [&amp;&gt;button]:active:bg-transparent&quot;&gt;
+        &lt;DialogHeader&gt;
+          &lt;DialogTitle className=&quot;text-2xl font-bold text-center&quot;&gt;
+            Connexion
+          &lt;/DialogTitle&gt;
+          &lt;DialogDescription className=&quot;text-center text-muted-foreground&quot;&gt;
+            Connectez vous a votre profil pour accéder au service
+          &lt;/DialogDescription&gt;
+        &lt;/DialogHeader&gt;
+        &lt;form onSubmit={(e) =&gt; e.preventDefault()}&gt;
+          &lt;div className=&quot;grid gap-6 py-4&quot;&gt;
+            &lt;div className=&quot;grid gap-2&quot;&gt;
+              &lt;Label htmlFor=&quot;email&quot;&gt;Email&lt;/Label&gt;
+              &lt;Input id=&quot;email&quot; type=&quot;email&quot; placeholder=&quot;exemple@email.com&quot; /&gt;
+            &lt;/div&gt;
+            &lt;div className=&quot;grid gap-2&quot;&gt;
+              &lt;Label htmlFor=&quot;password&quot;&gt;Mot de passe&lt;/Label&gt;
+              &lt;div className=&quot;relative&quot;&gt;
+                &lt;Input
+                  id=&quot;password&quot;
+                  type={showPassword ? &quot;text&quot; : &quot;password&quot;}
+                  placeholder=&quot;Mot de passe&quot;
+                /&gt;
+                &lt;Button
+                  type=&quot;button&quot;
+                  variant=&quot;ghost&quot;
+                  size=&quot;icon&quot;
+                  className=&quot;absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent&quot;
+                  onClick={() =&gt; setShowPassword(!showPassword)}
+                &gt;
+                  {showPassword ? (
+                    &lt;EyeOffIcon className=&quot;h-4 w-4 text-muted-foreground&quot; /&gt;
+                  ) : (
+                    &lt;EyeIcon className=&quot;h-4 w-4 text-muted-foreground&quot; /&gt;
+                  )}
+                &lt;/Button&gt;
               &lt;/div&gt;
             &lt;/div&gt;
           &lt;/div&gt;
-          &lt;Tabs defaultValue=&quot;overview&quot; className=&quot;w-full&quot;&gt;
-            &lt;div className=&quot;px-6 pt-4&quot;&gt;
-              &lt;TabsList className=&quot;text-white md:w-auto md:inline-grid&quot;&gt;
-                &lt;TabsTrigger value=&quot;overview&quot;&gt;Overview&lt;/TabsTrigger&gt;
-              &lt;/TabsList&gt;
-            &lt;/div&gt;
-            &lt;div className=&quot;relative h-[calc(90vh-80px-16rem)] md:h-[calc(90vh-80px-12rem)]&quot;&gt;
-              &lt;ScrollArea className=&quot;h-full pb-6&quot;&gt;
-                &lt;TabsContent value=&quot;overview&quot; className=&quot;px-6 py-4 mt-0&quot;&gt;
-                  &lt;div className=&quot;space-y-6&quot;&gt;
-                    &lt;div&gt;
-                      &lt;h3 className=&quot;text-lg font-semibold mb-2&quot;&gt;Synopsis&lt;/h3&gt;
-                      &lt;p className=&quot;text-muted-foreground&quot;&gt;
-                        {mockMovieData.RESUME || 
-                          &quot;No synopsis available for this movie.&quot;}
-                      &lt;/p&gt;
-                    &lt;/div&gt;
-                  &lt;/div&gt;
-                &lt;/TabsContent&gt;
-                &lt;TabsContent value=&quot;details&quot; className=&quot;px-6 py-4 mt-0&quot;&gt;
-                  &lt;div className=&quot;p-8 gap-6&quot;&gt;
-                    &lt;div className=&quot;space-y-4&quot;&gt;
-                      &lt;h3 className=&quot;text-lg font-semibold&quot;&gt;Technical Details&lt;/h3&gt;
-                      &lt;div className=&quot;space-y-2&quot;&gt;
-                        &lt;div className=&quot;flex justify-between&quot;&gt;
-                          &lt;span className=&quot;text-muted-foreground&quot;&gt;Release Year&lt;/span&gt;
-                          &lt;span&gt;{mockMovieData.ANNEE}&lt;/span&gt;
-                        &lt;/div&gt;
-                        &lt;div className=&quot;flex justify-between&quot;&gt;
-                          &lt;span className=&quot;text-muted-foreground&quot;&gt;Runtime&lt;/span&gt;
-                          &lt;span&gt;{mockMovieData.DUREE} minutes&lt;/span&gt;
-                        &lt;/div&gt;
-                        &lt;div className=&quot;flex justify-between&quot;&gt;
-                          &lt;span className=&quot;text-muted-foreground&quot;&gt;Language&lt;/span&gt;
-                          &lt;span&gt;{mockMovieData.LANGUE}&lt;/span&gt;
-                        &lt;/div&gt;
-                      &lt;/div&gt;
-                    &lt;/div&gt;
-                  &lt;/div&gt;
-                &lt;/TabsContent&gt;
-              &lt;/ScrollArea&gt;
+          &lt;DialogFooter&gt;
+            &lt;div className=&quot;py-2 w-full&quot;&gt;
+              &lt;Button type=&quot;submit&quot; className=&quot;w-full&quot;&gt;
+                Connexion
+              &lt;/Button&gt;
             &lt;/div&gt;
-          &lt;/Tabs&gt;
-        &lt;/DialogContent&gt;
-      &lt;/Dialog&gt;
-    &lt;/div&gt;
+          &lt;/DialogFooter&gt;
+        &lt;/form&gt;
+      &lt;/DialogContent&gt;
+    &lt;/Dialog&gt;
   );
 };
 
-export default TestPage;</file><file path="src/components/UserProfile.tsx">import { Card, CardContent, CardHeader, CardTitle } from &quot;../components/ui/card.tsx&quot;;
-import { Tabs, TabsContent, TabsList, TabsTrigger } from &quot;../components/ui/tabs&quot;;
-import { useProfileStore } from &apos;../../hooks/use-profile-store&apos;;
-import Header from &quot;./Header&quot;;
-import { 
-  User as UserIcon, 
-  Mail, 
-  CreditCard, 
-  Phone, 
-  MapPin, 
-  Calendar,
-  Package
-} from &apos;lucide-react&apos;;
-
-const ProfilePage = () =&gt; {
-  const { user } = useProfileStore();
-
-  if (!user) {
-    return (
-      &lt;div className=&quot;flex items-center justify-center min-h-screen&quot;&gt;
-        &lt;p className=&quot;text-lg text-muted-foreground&quot;&gt;Loading profile...&lt;/p&gt;
-      &lt;/div&gt;
-    );
-  }
+export default SignIn;</file><file path="src/components/TestPage.tsx">import tomHankImage from &quot;../../src/assets/tom-hanks.jpg&quot;;
+import {
+  Card,
+  CardContent,
+  CardDescription,
+  CardFooter,
+  CardHeader,
+  CardTitle,
+} from &quot;./ui/card&quot;;
 
+const TestPage = () =&gt; {
   return (
-    &lt;div className=&quot;bg-background min-h-screen w-screen&quot;&gt;
-      &lt;Header title=&quot;Profile&quot;/&gt;
-      &lt;div className=&quot;container mx-auto px-4 py-8 pt-24&quot;&gt;
-        &lt;Tabs defaultValue=&quot;personal&quot; className=&quot;max-w-4xl mx-auto&quot;&gt;
-          &lt;TabsList className=&quot;grid w-full grid-cols-2&quot;&gt;
-            &lt;TabsTrigger className=&quot;bg-gray-200&quot; value=&quot;personal&quot;&gt;Personal Information&lt;/TabsTrigger&gt;
-            &lt;TabsTrigger className=&quot;bg-gray-200&quot; value=&quot;subscription&quot;&gt;Subscription &amp; Credits&lt;/TabsTrigger&gt;
-          &lt;/TabsList&gt;
-          
-          &lt;TabsContent value=&quot;personal&quot;&gt;
-            &lt;Card&gt;
-              &lt;CardHeader&gt;
-                &lt;CardTitle className=&quot;text-2xl font-bold flex items-center gap-2&quot;&gt;
-                  &lt;UserIcon className=&quot;w-6 h-6&quot; /&gt;
-                  Personal Information
-                &lt;/CardTitle&gt;
-              &lt;/CardHeader&gt;
-              &lt;CardContent className=&quot;space-y-6&quot;&gt;
-                &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;
-                  &lt;div className=&quot;space-y-2&quot;&gt;
-                    &lt;label className=&quot;text-sm font-medium text-muted-foreground&quot;&gt;Full Name&lt;/label&gt;
-                    &lt;p className=&quot;text-lg font-medium&quot;&gt;{`${user.prenom} ${user.nom_famille}`}&lt;/p&gt;
-                  &lt;/div&gt;
-                  &lt;div className=&quot;space-y-2&quot;&gt;
-                    &lt;label className=&quot;text-sm font-medium text-muted-foreground&quot;&gt;Email&lt;/label&gt;
-                    &lt;div className=&quot;flex items-center gap-2&quot;&gt;
-                      &lt;Mail className=&quot;w-4 h-4 text-primary&quot; /&gt;
-                      &lt;p className=&quot;text-lg&quot;&gt;{user.courriel}&lt;/p&gt;
-                    &lt;/div&gt;
-                  &lt;/div&gt;
-                  {user.tel &amp;&amp; (
-                    &lt;div className=&quot;space-y-2&quot;&gt;
-                      &lt;label className=&quot;text-sm font-medium text-muted-foreground&quot;&gt;Phone&lt;/label&gt;
-                      &lt;div className=&quot;flex items-center gap-2&quot;&gt;
-                        &lt;Phone className=&quot;w-4 h-4 text-primary&quot; /&gt;
-                        &lt;p className=&quot;text-lg&quot;&gt;{user.tel}&lt;/p&gt;
-                      &lt;/div&gt;
-                    &lt;/div&gt;
-                  )}
-                  {user.date_anniversaire &amp;&amp; (
-                    &lt;div className=&quot;space-y-2&quot;&gt;
-                      &lt;label className=&quot;text-sm font-medium text-muted-foreground&quot;&gt;Birthday&lt;/label&gt;
-                      &lt;div className=&quot;flex items-center gap-2&quot;&gt;
-                        &lt;Calendar className=&quot;w-4 h-4 text-primary&quot; /&gt;
-                        &lt;p className=&quot;text-lg&quot;&gt;
-                          {new Date(user.date_anniversaire).toLocaleDateString()}
-                        &lt;/p&gt;
-                      &lt;/div&gt;
-                    &lt;/div&gt;
-                  )}
-                &lt;/div&gt;
-
-                {(user.adresse || user.ville || user.province || user.code_postal) &amp;&amp; (
-                  &lt;div className=&quot;pt-6 border-t&quot;&gt;
-                    &lt;h3 className=&quot;text-lg font-semibold mb-4 flex items-center gap-2&quot;&gt;
-                      &lt;MapPin className=&quot;w-5 h-5&quot; /&gt;
-                      Address Information
-                    &lt;/h3&gt;
-                    &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;
-                      {user.adresse &amp;&amp; (
-                        &lt;div className=&quot;space-y-2&quot;&gt;
-                          &lt;label className=&quot;text-sm font-medium text-muted-foreground&quot;&gt;Street Address&lt;/label&gt;
-                          &lt;p className=&quot;text-lg&quot;&gt;{user.adresse}&lt;/p&gt;
-                        &lt;/div&gt;
-                      )}
-                      {user.ville &amp;&amp; (
-                        &lt;div className=&quot;space-y-2&quot;&gt;
-                          &lt;label className=&quot;text-sm font-medium text-muted-foreground&quot;&gt;City&lt;/label&gt;
-                          &lt;p className=&quot;text-lg&quot;&gt;{user.ville}&lt;/p&gt;
-                        &lt;/div&gt;
-                      )}
-                      {user.province &amp;&amp; (
-                        &lt;div className=&quot;space-y-2&quot;&gt;
-                          &lt;label className=&quot;text-sm font-medium text-muted-foreground&quot;&gt;Province&lt;/label&gt;
-                          &lt;p className=&quot;text-lg&quot;&gt;{user.province}&lt;/p&gt;
-                        &lt;/div&gt;
-                      )}
-                      {user.code_postal &amp;&amp; (
-                        &lt;div className=&quot;space-y-2&quot;&gt;
-                          &lt;label className=&quot;text-sm font-medium text-muted-foreground&quot;&gt;Postal Code&lt;/label&gt;
-                          &lt;p className=&quot;text-lg&quot;&gt;{user.code_postal}&lt;/p&gt;
-                        &lt;/div&gt;
-                      )}
-                    &lt;/div&gt;
-                  &lt;/div&gt;
-                )}
-              &lt;/CardContent&gt;
-            &lt;/Card&gt;
-          &lt;/TabsContent&gt;
-
-          &lt;TabsContent value=&quot;subscription&quot;&gt;
-            &lt;Card&gt;
-              &lt;CardHeader&gt;
-                &lt;CardTitle className=&quot;text-2xl font-bold flex items-center gap-2&quot;&gt;
-                  &lt;Package className=&quot;w-6 h-6&quot; /&gt;
-                  Subscription Details
-                &lt;/CardTitle&gt;
-              &lt;/CardHeader&gt;
-              &lt;CardContent className=&quot;space-y-6&quot;&gt;
-                &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;
-                  {user.forfait &amp;&amp; (
-                    &lt;div className=&quot;p-6 bg-primary/5 rounded-lg&quot;&gt;
-                      &lt;h3 className=&quot;text-lg font-semibold mb-2 flex items-center gap-2&quot;&gt;
-                        &lt;Package className=&quot;w-5 h-5 text-primary&quot; /&gt;
-                        Current Plan
-                      &lt;/h3&gt;
-                      &lt;p className=&quot;text-3xl font-bold text-primary&quot;&gt;
-                        {user.forfait === &apos;A&apos; ? &apos;Premium&apos; : 
-                         user.forfait === &apos;B&apos; ? &apos;Standard&apos; : 
-                         user.forfait === &apos;C&apos; ? &apos;Basic&apos; : &apos;Free&apos;}
-                      &lt;/p&gt;
-                    &lt;/div&gt;
-                  )}
-                  
-                  &lt;div className=&quot;p-6 bg-primary/5 rounded-lg&quot;&gt;
-                    &lt;h3 className=&quot;text-lg font-semibold mb-2 flex items-center gap-2&quot;&gt;
-                      &lt;CreditCard className=&quot;w-5 h-5 text-primary&quot; /&gt;
-                      Available Credits
-                    &lt;/h3&gt;
-                    &lt;p className=&quot;text-3xl font-bold text-primary&quot;&gt;
-                      {user.credits || 0} credits
-                    &lt;/p&gt;
-                  &lt;/div&gt;
-                &lt;/div&gt;
-              &lt;/CardContent&gt;
-            &lt;/Card&gt;
-          &lt;/TabsContent&gt;
-        &lt;/Tabs&gt;
+    &lt;div className=&quot;w-full flex justify-center flex-1&quot;&gt;
+      &lt;div className=&quot;w-[350px] h-[400px] bg-red-400 relative&quot;&gt;
+        &lt;div className=&quot;w-full flex justify-center&quot;&gt;
+          &lt;img
+            className=&quot;h-52 w-96 object-cover rounded-lg&quot;
+            src={tomHankImage}
+            alt=&quot;Tom Hanks&quot;
+          /&gt;
+        &lt;/div&gt;
+        &lt;Card className=&quot;absolute top-72 left-0 w-full&quot;&gt;
+          &lt;CardHeader&gt;Hello&lt;/CardHeader&gt;
+        &lt;/Card&gt;
       &lt;/div&gt;
     &lt;/div&gt;
   );
 };
 
-export default ProfilePage;</file><file path="src/lib/utils.ts">import { clsx, type ClassValue } from &quot;clsx&quot;
+export default TestPage;</file><file path="src/lib/utils.ts">import { clsx, type ClassValue } from &quot;clsx&quot;
 import { twMerge } from &quot;tailwind-merge&quot;
 
 export function cn(...inputs: ClassValue[]) {
   return twMerge(clsx(inputs))
-}</file><file path="src/Modal/movie-details-modal.tsx">import {
-  Dialog,
-  DialogContent,
-} from &quot;../components/ui/dialog&quot;;
-import { ScrollArea } from &quot;../components/ui/scroll-area&quot;;
-import { Button } from &quot;../components/ui/button&quot;;
-import { Tabs, TabsContent, TabsList, TabsTrigger } from &quot;../components/ui/tabs&quot;;
-import {
-  Clock,
-  Calendar,
-  Globe,
-  Play,
-  ShoppingCart,
-  MapPin
-} from &quot;lucide-react&quot;;
-import { useModal } from &quot;../../hooks/use-modal-store&quot;;
-import { Movie } from &quot;../../types&quot;;
-import { Badge } from &quot;../components/ui/badge&quot;;
-
-const MovieDetailsModal = () =&gt; {
-  const { isOpen, onClose, type, data } = useModal();
-  const isModalOpen = isOpen &amp;&amp; type === &quot;movieModal&quot;;
-  
-  const movie: Movie = data;
-
-  if (!isModalOpen || !movie) return null;
-
-  const handleWatchTrailer = () =&gt; {
-    if (movie.ANNONCES &amp;&amp; movie.ANNONCES.length &gt; 0) {
-      window.open(movie.ANNONCES[0], &apos;_blank&apos;);
-    } else {
-      console.log(&apos;No trailer available for:&apos;, movie.TITRE);
-    }
-  };
-
-  const handleRentMovie = () =&gt; {
-    console.log(&apos;Renting movie:&apos;, movie.TITRE);
-
-  };
-
-  return (
-    &lt;Dialog open={isModalOpen} onOpenChange={onClose}&gt;
-      &lt;DialogContent className=&quot;max-w-4xl max-h-[65vh] overflow-hidden p-0&quot;&gt;
-        &lt;div className=&quot;relative w-full h-64 md:h-80 bg-gradient-to-b from-black/70 to-background overflow-hidden&quot;&gt;
-          &lt;div 
-            className=&quot;absolute inset-0 bg-cover bg-center blur-sm opacity-50&quot;
-            style={{ backgroundImage: `url(${movie.POSTER_URL})` }}
-          /&gt;
-          &lt;div className=&quot;absolute inset-0 bg-black/40 flex p-6&quot;&gt;
-            &lt;div className=&quot;flex flex-col md:flex-row gap-6 z-10 w-full&quot;&gt;
-              &lt;div className=&quot;hidden md:block flex-shrink-0 w-40 h-auto shadow-lg rounded-md overflow-hidden&quot;&gt;
-                &lt;img 
-                  src={movie.POSTER_URL} 
-                  alt={movie.TITRE} 
-                  className=&quot;w-full h-full object-cover&quot;
-                /&gt;
-              &lt;/div&gt;
-
-              &lt;div className=&quot;flex flex-col justify-end text-white space-y-2 flex-grow&quot;&gt;
-                &lt;h1 className=&quot;text-2xl md:text-3xl font-bold&quot;&gt;{movie.TITRE}&lt;/h1&gt;
-                
-                &lt;div className=&quot;flex flex-wrap gap-2 mt-1&quot;&gt;
-                  {movie.GENRES &amp;&amp; movie.GENRES.map((genre, index) =&gt; (
-                    &lt;Badge key={index} variant=&quot;secondary&quot; className=&quot;bg-primary/20 text-primary-foreground&quot;&gt;
-                      {genre}
-                    &lt;/Badge&gt;
-                  ))}
-                &lt;/div&gt;
-                
-                &lt;div className=&quot;flex flex-wrap items-center gap-x-4 gap-y-2 text-sm text-white/80 mt-2&quot;&gt;
-                  &lt;div className=&quot;flex items-center&quot;&gt;
-                    &lt;Calendar className=&quot;w-4 h-4 mr-1&quot; /&gt;
-                    &lt;span&gt;{movie.ANNEE}&lt;/span&gt;
-                  &lt;/div&gt;
-                  &lt;div className=&quot;flex items-center&quot;&gt;
-                    &lt;Clock className=&quot;w-4 h-4 mr-1&quot; /&gt;
-                    &lt;span&gt;{movie.DUREE} min&lt;/span&gt;
-                  &lt;/div&gt;
-                  {movie.LANGUE &amp;&amp; (
-                    &lt;div className=&quot;flex items-center&quot;&gt;
-                      &lt;Globe className=&quot;w-4 h-4 mr-1&quot; /&gt;
-                      &lt;span&gt;{movie.LANGUE}&lt;/span&gt;
-                    &lt;/div&gt;
-                  )}
-                  {movie.PAYS &amp;&amp; movie.PAYS.length &gt; 0 &amp;&amp; (
-                    &lt;div className=&quot;flex items-center&quot;&gt;
-                      &lt;MapPin className=&quot;w-4 h-4 mr-1&quot; /&gt;
-                      &lt;span&gt;{movie.PAYS.join(&apos;, &apos;)}&lt;/span&gt;
-                    &lt;/div&gt;
-                  )}
-                &lt;/div&gt;
-                
-                &lt;div className=&quot;flex flex-wrap gap-2 mt-4&quot;&gt;
-                  &lt;Button 
-                    onClick={handleWatchTrailer} 
-                    className=&quot;bg-primary hover:bg-primary/90&quot;
-                    disabled={!movie.ANNONCES || movie.ANNONCES.length === 0}
-                  &gt;
-                    &lt;Play className=&quot;w-4 h-4 mr-2&quot; /&gt;
-                    Watch Trailer
-                  &lt;/Button&gt;
-                  
-                  &lt;Button 
-                    onClick={handleRentMovie} 
-                    className=&quot;bg-green-600 hover:bg-green-700&quot;
-                  &gt;
-                    &lt;ShoppingCart className=&quot;w-4 h-4 mr-2&quot; /&gt;
-                    Rent Movie
-                  &lt;/Button&gt;
-                &lt;/div&gt;
-              &lt;/div&gt;
-            &lt;/div&gt;
-          &lt;/div&gt;
-        &lt;/div&gt;
-
-        &lt;Tabs defaultValue=&quot;overview&quot; className=&quot;w-full&quot;&gt;
-          &lt;div className=&quot;px-6 pt-4&quot;&gt;
-            &lt;TabsList className=&quot;grid grid-cols-2 md:w-auto md:inline-grid&quot;&gt;
-              &lt;TabsTrigger className=&quot;bg-gray-200&quot; value=&quot;overview&quot;&gt;Overview&lt;/TabsTrigger&gt;
-              &lt;TabsTrigger className=&quot;bg-gray-200&quot; value=&quot;details&quot;&gt;Details&lt;/TabsTrigger&gt;
-            &lt;/TabsList&gt;
-          &lt;/div&gt;
-
-          &lt;div className=&quot;relative h-[calc(90vh-80px-16rem)] md:h-[calc(90vh-80px-12rem)]&quot;&gt;
-            &lt;ScrollArea className=&quot;h-full pb-6&quot;&gt;
-              &lt;TabsContent value=&quot;overview&quot; className=&quot;px-6 py-4 mt-0&quot;&gt;
-                &lt;div className=&quot;space-y-6&quot;&gt;
-                  &lt;div&gt;
-                    &lt;h3 className=&quot;text-lg font-semibold mb-2&quot;&gt;Synopsis&lt;/h3&gt;
-                    &lt;p className=&quot;text-muted-foreground&quot;&gt;
-                      {movie.RESUME || 
-                        &quot;No synopsis available for this movie.&quot;}
-                    &lt;/p&gt;
-                  &lt;/div&gt;
-                  
-                  &lt;div&gt;
-                    &lt;h3 className=&quot;text-lg font-semibold mb-2&quot;&gt;Genres&lt;/h3&gt;
-                    &lt;div className=&quot;flex flex-wrap gap-2 overflow-y-auto max-h-48 pr-2&quot;&gt;
-                      {movie.GENRES &amp;&amp; movie.GENRES.map((genre, index) =&gt; (
-                        &lt;Badge key={index} variant=&quot;outline&quot;&gt;
-                          {genre}
-                        &lt;/Badge&gt;
-                      ))}
-                    &lt;/div&gt;
-                  &lt;/div&gt;
-                &lt;/div&gt;
-              &lt;/TabsContent&gt;
-
-              &lt;TabsContent value=&quot;details&quot; className=&quot;px-6 py-4 mt-0&quot;&gt;
-                &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;
-                  &lt;div className=&quot;space-y-4&quot;&gt;
-                    &lt;h3 className=&quot;text-lg font-semibold&quot;&gt;Technical Details&lt;/h3&gt;
-                    &lt;div className=&quot;space-y-2&quot;&gt;
-                      &lt;div className=&quot;flex justify-between&quot;&gt;
-                        &lt;span className=&quot;text-muted-foreground&quot;&gt;Release Year&lt;/span&gt;
-                        &lt;span&gt;{movie.ANNEE}&lt;/span&gt;
-                      &lt;/div&gt;
-                      &lt;div className=&quot;flex justify-between&quot;&gt;
-                        &lt;span className=&quot;text-muted-foreground&quot;&gt;Runtime&lt;/span&gt;
-                        &lt;span&gt;{movie.DUREE} minutes&lt;/span&gt;
-                      &lt;/div&gt;
-                      &lt;div className=&quot;flex justify-between&quot;&gt;
-                        &lt;span className=&quot;text-muted-foreground&quot;&gt;Language&lt;/span&gt;
-                        &lt;span&gt;{movie.LANGUE}&lt;/span&gt;
-                      &lt;/div&gt;
-                      &lt;div className=&quot;flex justify-between&quot;&gt;
-                        &lt;span className=&quot;text-muted-foreground&quot;&gt;Country&lt;/span&gt;
-                        &lt;span&gt;{movie.PAYS ? movie.PAYS.join(&apos;, &apos;) : &apos;Unknown&apos;}&lt;/span&gt;
-                      &lt;/div&gt;
-                      &lt;div className=&quot;flex justify-between&quot;&gt;
-                        &lt;span className=&quot;text-muted-foreground&quot;&gt;Movie ID&lt;/span&gt;
-                        &lt;span&gt;{movie.ID}&lt;/span&gt;
-                      &lt;/div&gt;
-                    &lt;/div&gt;
-                  &lt;/div&gt;
-                  
-                  &lt;div className=&quot;space-y-4&quot;&gt;
-                    &lt;h3 className=&quot;text-lg font-semibold&quot;&gt;Trailer&lt;/h3&gt;
-                    {movie.ANNONCES &amp;&amp; movie.ANNONCES.length &gt; 0 ? (
-                      &lt;div className=&quot;space-y-2&quot;&gt;
-                        &lt;Button 
-                          variant=&quot;outline&quot; 
-                          className=&quot;w-full&quot;
-                          onClick={handleWatchTrailer}
-                        &gt;
-                          &lt;Play className=&quot;w-4 h-4 mr-2&quot; /&gt;
-                          Watch Trailer
-                        &lt;/Button&gt;
-                      &lt;/div&gt;
-                    ) : (
-                      &lt;p className=&quot;text-muted-foreground&quot;&gt;No trailer available for this movie.&lt;/p&gt;
-                    )}
-                  &lt;/div&gt;
-                &lt;/div&gt;
-              &lt;/TabsContent&gt;
-            &lt;/ScrollArea&gt;
-          &lt;/div&gt;
-        &lt;/Tabs&gt;
-      &lt;/DialogContent&gt;
-    &lt;/Dialog&gt;
-  );
-};
-
-export default MovieDetailsModal;</file><file path="src/Modal/movie-information-modal.tsx">//import React, { useEffect } from &quot;react&quot;;
-//import {
-//  Dialog,
-//  DialogContent,
-//  DialogHeader,
-//  DialogTitle,
-//  DialogDescription,
-//} from &quot;../components/ui/dialog&quot;;
-//import { ScrollArea } from &quot;../components/ui/scroll-area&quot;;
-//import { Clock, Calendar, Globe } from &quot;lucide-react&quot;;
-//import { useModal } from &quot;../../hooks/use-modal-store&quot;
-//
-//const MovieModal = () =&gt; {
-//
-//  const { isOpen, onClose, type, data: movie } = useModal();
-//  const isModalOpen = isOpen &amp;&amp; type === &quot;movieModal&quot;;
-//
-//  if (!isModalOpen) return null;
-//
-//
-//  return (
-//    &lt;Dialog open={isModalOpen} onOpenChange={onClose}&gt;
-//      &lt;DialogContent className=&quot;max-w-3xl max-h-[90vh] overflow-hidden&quot;&gt;
-//        &lt;DialogHeader&gt;
-//          &lt;DialogTitle className=&quot;text-2xl font-bold&quot;&gt;
-//            {movie.TITRE}
-//          &lt;/DialogTitle&gt;
-//          &lt;DialogDescription&gt;
-//            &lt;div className=&quot;flex items-center gap-2 text-gray-500&quot;&gt;
-//              &lt;Calendar className=&quot;w-4 h-4&quot; /&gt;
-//              &lt;span&gt;{movie.ANNEE}&lt;/span&gt;
-//              &lt;Clock className=&quot;w-4 h-4 ml-4&quot; /&gt;
-//              &lt;span&gt;{movie.DUREE} min&lt;/span&gt;
-//              &lt;Globe className=&quot;w-4 h-4 ml-4&quot; /&gt;
-//              &lt;span&gt;{movie.LANGUE}&lt;/span&gt;
-//            &lt;/div&gt;
-//          &lt;/DialogDescription&gt;
-//        &lt;/DialogHeader&gt;
-//
-//        &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;
-//          &lt;div className=&quot;relative aspect-[2/3] rounded-lg overflow-hidden bg-gray-100&quot;&gt;
-//            {movie.POSTER_URL ? (
-//              &lt;img 
-//                src={movie.POSTER_URL} 
-//                alt={movie.TITRE}
-//                className=&quot;object-cover w-full h-full&quot;
-//              /&gt;
-//            ) : (
-//              &lt;div className=&quot;flex items-center justify-center w-full h-full text-gray-400&quot;&gt;
-//                No poster available
-//              &lt;/div&gt;
-//            )}
-//          &lt;/div&gt;
-//
-//          &lt;ScrollArea className=&quot;h-[60vh]&quot;&gt;
-//            &lt;div className=&quot;space-y-6 pr-4&quot;&gt;
-//              &lt;div&gt;
-//                &lt;h3 className=&quot;text-lg font-semibold mb-2&quot;&gt;Synopsis&lt;/h3&gt;
-//                &lt;p className=&quot;text-gray-600&quot;&gt;
-//                  {movie.RESUME || &quot;No synopsis available.&quot;}
-//                &lt;/p&gt;
-//              &lt;/div&gt;
-//
-//              &lt;div&gt;
-//                &lt;h3 className=&quot;text-lg font-semibold mb-2&quot;&gt;Additional Details&lt;/h3&gt;
-//                &lt;dl className=&quot;space-y-2&quot;&gt;
-//                  &lt;div&gt;
-//                    &lt;dt className=&quot;text-sm font-medium text-gray-500&quot;&gt;Director ID&lt;/dt&gt;
-//                    &lt;dd className=&quot;text-gray-700&quot;&gt;{movie.ID_REALISATEUR || &quot;Not available&quot;}&lt;/dd&gt;
-//                  &lt;/div&gt;
-//                  &lt;div&gt;
-//                    &lt;dt className=&quot;text-sm font-medium text-gray-500&quot;&gt;Movie ID&lt;/dt&gt;
-//                    &lt;dd className=&quot;text-gray-700&quot;&gt;{movie.ID}&lt;/dd&gt;
-//                  &lt;/div&gt;
-//                &lt;/dl&gt;
-//              &lt;/div&gt;
-//            &lt;/div&gt;
-//          &lt;/ScrollArea&gt;
-//        &lt;/div&gt;
-//      &lt;/DialogContent&gt;
-//    &lt;/Dialog&gt;
-//  );
-//};
-//
-//export default MovieModal;</file><file path="src/Modal/sign-in-modal.tsx">import { useState } from &quot;react&quot;;
+}</file><file path="src/Modal/sign-in-modal.tsx">import { useState } from &quot;react&quot;;
 import {
   Dialog,
   DialogContent,
@@ -1675,16 +869,22 @@ import { Button } from &quot;../components/ui/button&quot;;
 import { Input } from &quot;../components/ui/input&quot;;
 import { Label } from &quot;../components/ui/label&quot;;
 import { EyeIcon, EyeOffIcon } from &quot;lucide-react&quot;;
+import md5 from &quot;md5&quot;;
 
 type userData = {
-  courriel: string;
+  email: string;
+  password: string;
+};
+
+type userDataWithHashedPassword = {
+  email: string;
   mot_de_passe: string;
 };
 
 interface SignInModalProps {
   isOpen: boolean;
   onClose: () =&gt; void;
-  onSignIn: (formData: userData) =&gt; void;
+  onSignIn: (formData: userDataWithHashedPassword) =&gt; void;
   error: string;
 }
 
@@ -1696,14 +896,20 @@ const SignInModal = ({
 }: SignInModalProps) =&gt; {
   const [showPassword, setShowPassword] = useState(false);
   const [formData, setFormData] = useState&lt;userData&gt;({
-    courriel: &quot;&quot;,
-    mot_de_passe: &quot;&quot;,
+    email: &quot;&quot;,
+    password: &quot;&quot;,
   });
 
   const handleSubmit = (e: React.FormEvent) =&gt; {
     e.preventDefault();
+    const hashedPassword = md5(formData.password);
+
+    const formDataWithHashedPassword = {
+      email: formData.email,
+      mot_de_passe: hashedPassword,
+    };
 
-    onSignIn(formData);
+    onSignIn(formDataWithHashedPassword);
   };
 
   return (
@@ -1724,10 +930,10 @@ const SignInModal = ({
               &lt;Input
                 id=&quot;email&quot;
                 type=&quot;email&quot;
-                placeholder=&quot;exemple@courriel.com&quot;
-                value={formData.courriel}
+                placeholder=&quot;exemple@email.com&quot;
+                value={formData.email}
                 onChange={(e) =&gt;
-                  setFormData({ ...formData, courriel: e.target.value })
+                  setFormData({ ...formData, email: e.target.value })
                 }
               /&gt;
             &lt;/div&gt;
@@ -1738,9 +944,9 @@ const SignInModal = ({
                   id=&quot;password&quot;
                   type={showPassword ? &quot;text&quot; : &quot;password&quot;}
                   placeholder=&quot;Mot de passe&quot;
-                  value={formData.mot_de_passe}
+                  value={formData.password}
                   onChange={(e) =&gt;
-                    setFormData({ ...formData, mot_de_passe: e.target.value })
+                    setFormData({ ...formData, password: e.target.value })
                   }
                 /&gt;
                 &lt;Button
@@ -1775,54 +981,7 @@ const SignInModal = ({
   );
 };
 
-export default SignInModal;</file><file path="src/Modal/user-profile-modal.tsx">import { useState } from &quot;react&quot;;
-import tomHankImage from &quot;../../assets/tom-hanks.jpg&quot;;
-import {
-  Dialog,
-  DialogContent,
-  DialogDescription,
-  DialogFooter,
-  DialogHeader,
-  DialogTitle,
-} from &quot;../components/ui/dialog&quot;;
-
-const UserProfile = () =&gt; {
-  const [isDialogOpen, setIsDialogOpen] = useState(false);
-
-  const openDialog = () =&gt; setIsDialogOpen(true);
-  const closeDialog = () =&gt; setIsDialogOpen(false);
-
-  return (
-    &lt;div className=&quot;w-screen h-screen flex justify-center items-center&quot;&gt;
-      &lt;button onClick={openDialog} className=&quot;bg-blue-500 p-2 rounded text-white&quot;&gt;
-        Open Profile
-      &lt;/button&gt;
-      {isDialogOpen &amp;&amp; (
-        &lt;Dialog onClose={closeDialog}&gt;
-          &lt;DialogContent&gt;
-            &lt;DialogHeader&gt;
-              &lt;DialogTitle&gt;User Profile&lt;/DialogTitle&gt;
-            &lt;/DialogHeader&gt;
-            &lt;DialogContent&gt;
-              &lt;img src={tomHankImage} alt=&quot;Tom Hanks&quot; className=&quot;w-full h-auto rounded mb-4&quot; /&gt;
-              &lt;DialogDescription&gt;
-                &lt;p&gt;Name: Tom Hanks&lt;/p&gt;
-                &lt;p&gt;Email: tom.hanks@example.com&lt;/p&gt;
-              &lt;/DialogDescription&gt;
-            &lt;/DialogContent&gt;
-            &lt;DialogFooter&gt;
-              &lt;button onClick={closeDialog} className=&quot;bg-red-500 p-2 rounded text-white&quot;&gt;
-                Close
-              &lt;/button&gt;
-            &lt;/DialogFooter&gt;
-          &lt;/DialogContent&gt;
-        &lt;/Dialog&gt;
-      )}
-    &lt;/div&gt;
-  );
-};
-
-export default UserProfile;</file><file path="src/App.css">.logo {
+export default SignInModal;</file><file path="src/App.css">.logo {
   height: 6em;
   padding: 1.5em;
   will-change: filter;
@@ -1861,19 +1020,15 @@ import { BrowserRouter as Router, Route, Routes } from &quot;react-router-dom&qu
 import LandingPage from &quot;./components/LandingPage&quot;;
 import TestPage from &quot;./components/TestPage&quot;;
 import Dashboard from &quot;./components/Dashboard&quot;;
-import UserProfilePage from &quot;./components/UserProfile&quot;;
-import ModalProvider from &quot;./components/ModalProvider&quot;;
 
 function App() {
   return (
     &lt;Router&gt;
       &lt;div className=&quot;min-h-screen bg-background&quot;&gt;
-        &lt;ModalProvider /&gt;
         &lt;Routes&gt;
           &lt;Route path=&quot;/&quot; element={&lt;LandingPage /&gt;} /&gt;
           &lt;Route path=&quot;/test&quot; element={&lt;TestPage /&gt;} /&gt;
           &lt;Route path=&quot;/Dashboard&quot; element={&lt;Dashboard /&gt;} /&gt;
-          &lt;Route path=&quot;/profile&quot; element={&lt;UserProfilePage /&gt;} /&gt;
         &lt;/Routes&gt;
       &lt;/div&gt;
     &lt;/Router&gt;
@@ -2022,17 +1177,6 @@ button:focus-visible {
   body {
     @apply bg-background text-foreground;
   }
-}
-
-
-
-@layer base {
-  * {
-    @apply border-border outline-ring/50;
-  }
-  body {
-    @apply bg-background text-foreground;
-  }
 }</file><file path="src/main.tsx">import { StrictMode } from &apos;react&apos;
 import { createRoot } from &apos;react-dom/client&apos;
 import &apos;./index.css&apos;
@@ -2138,17 +1282,13 @@ export default tseslint.config(
   &quot;dependencies&quot;: {
     &quot;@radix-ui/react-dialog&quot;: &quot;^1.1.6&quot;,
     &quot;@radix-ui/react-label&quot;: &quot;^2.1.2&quot;,
-    &quot;@radix-ui/react-scroll-area&quot;: &quot;^1.2.3&quot;,
     &quot;@radix-ui/react-slider&quot;: &quot;^1.2.3&quot;,
     &quot;@radix-ui/react-slot&quot;: &quot;^1.1.1&quot;,
-    &quot;@radix-ui/react-tabs&quot;: &quot;^1.1.3&quot;,
     &quot;axios&quot;: &quot;^1.7.9&quot;,
     &quot;class-variance-authority&quot;: &quot;^0.7.1&quot;,
     &quot;clsx&quot;: &quot;^2.1.1&quot;,
     &quot;crypto-js&quot;: &quot;^4.2.0&quot;,
     &quot;cryptojs&quot;: &quot;^2.5.3&quot;,
-    &quot;loadash&quot;: &quot;^1.0.0&quot;,
-    &quot;lodash&quot;: &quot;^4.17.21&quot;,
     &quot;lucide-react&quot;: &quot;^0.474.0&quot;,
     &quot;md5&quot;: &quot;^2.3.0&quot;,
     &quot;react&quot;: &quot;^18.3.1&quot;,
@@ -2161,7 +1301,6 @@ export default tseslint.config(
   },
   &quot;devDependencies&quot;: {
     &quot;@eslint/js&quot;: &quot;^9.17.0&quot;,
-    &quot;@types/lodash&quot;: &quot;^4.17.15&quot;,
     &quot;@types/md5&quot;: &quot;^2.3.5&quot;,
     &quot;@types/node&quot;: &quot;^22.13.1&quot;,
     &quot;@types/react&quot;: &quot;^18.3.18&quot;,
@@ -2352,51 +1491,7 @@ export default {
     &quot;noUncheckedSideEffectImports&quot;: true
   },
   &quot;include&quot;: [&quot;vite.config.ts&quot;]
-}</file><file path="types.ts">export type User = {
-  name: string;
-  email: string;
-  nom_famille: string;
-  prenom: string;
-  courriel: string;
-  tel?: string;
-  date_anniversaire?: Date;
-  adresse?: string;
-  ville?: string;
-  province?: string;
-  code_postal?: string;
-  forfait?: string;
-  credits?: number;
-};
-
-export type MovieSuggestion = {
-  ID: number;
-  TITRE: string;
-  ANNEE: number;
-  DUREE: number;
-  POSTER_URL: string;
-}
-
-export type Movie = {
-  ID: number;
-  TITRE: string;
-  RESUME: string;
-  ANNEE: number;
-  DUREE: number;
-  LANGUE: string;
-  ID_REALISATEUR: number;
-  POSTER_URL: string;
-  ACTEURS: Array&lt;Actor&gt;;
-  ANNONCES: Array&lt;string&gt;;
-  GENRES: Array&lt;string&gt;;
-  PAYS: Array&lt;string&gt;;
-  SCENARISTES: Array&lt;string&gt;;
-};
-
-export type Actor = {
-  id: number;
-  nom: string;
-  role: string;
-};</file><file path="vite.config.ts">import path from &quot;path&quot;
+}</file><file path="vite.config.ts">import path from &quot;path&quot;
 import react from &quot;@vitejs/plugin-react&quot;
 import { defineConfig } from &quot;vite&quot;
 
diff --git a/frontend/src/App.tsx b/frontend/src/App.tsx
index 9c3f11b..3d94220 100644
--- a/frontend/src/App.tsx
+++ b/frontend/src/App.tsx
@@ -3,19 +3,15 @@ import { BrowserRouter as Router, Route, Routes } from "react-router-dom";
 import LandingPage from "./components/LandingPage";
 import TestPage from "./components/TestPage";
 import Dashboard from "./components/Dashboard";
-import UserProfilePage from "./components/UserProfile";
-import ModalProvider from "./components/ModalProvider";
 
 function App() {
   return (
     <Router>
       <div className="min-h-screen bg-background">
-        <ModalProvider />
         <Routes>
           <Route path="/" element={<LandingPage />} />
           <Route path="/test" element={<TestPage />} />
           <Route path="/Dashboard" element={<Dashboard />} />
-          <Route path="/profile" element={<UserProfilePage />} />
         </Routes>
       </div>
     </Router>
diff --git a/frontend/src/Modal/movie-details-modal.tsx b/frontend/src/Modal/movie-details-modal.tsx
deleted file mode 100644
index 6d0f195..0000000
--- a/frontend/src/Modal/movie-details-modal.tsx
+++ /dev/null
@@ -1,205 +0,0 @@
-import {
-  Dialog,
-  DialogContent,
-} from "../components/ui/dialog";
-import { ScrollArea } from "../components/ui/scroll-area";
-import { Button } from "../components/ui/button";
-import { Tabs, TabsContent, TabsList, TabsTrigger } from "../components/ui/tabs";
-import {
-  Clock,
-  Calendar,
-  Globe,
-  Play,
-  ShoppingCart,
-  MapPin
-} from "lucide-react";
-import { useModal } from "../../hooks/use-modal-store";
-import { Movie } from "../../types";
-import { Badge } from "../components/ui/badge";
-
-const MovieDetailsModal = () => {
-  const { isOpen, onClose, type, data } = useModal();
-  const isModalOpen = isOpen && type === "movieModal";
-  
-  const movie: Movie = data;
-  console.log("Movie details:", movie);
-
-  if (!isModalOpen || !movie) return null;
-
-  const handleWatchTrailer = () => {
-    if (movie.ANNONCES && movie.ANNONCES.length > 0) {
-      window.open(movie.ANNONCES[0], '_blank');
-    } else {
-      console.log('No trailer available for:', movie.TITRE);
-    }
-  };
-
-  const handleRentMovie = () => {
-    console.log('Renting movie:', movie.TITRE);
-
-  };
-
-  return (
-    <Dialog open={isModalOpen} onOpenChange={onClose}>
-      <DialogContent className="max-w-4xl max-h-[65vh] overflow-hidden p-0">
-        <div className="relative w-full h-64 md:h-80 bg-gradient-to-b from-black/70 to-background overflow-hidden">
-          <div 
-            className="absolute inset-0 bg-cover bg-center blur-sm opacity-50"
-            style={{ backgroundImage: `url(${movie.POSTER_URL})` }}
-          />
-          <div className="absolute inset-0 bg-black/40 flex p-6">
-            <div className="flex flex-col md:flex-row gap-6 z-10 w-full">
-              <div className="hidden md:block flex-shrink-0 w-40 h-auto shadow-lg rounded-md overflow-hidden">
-                <img 
-                  src={movie.POSTER_URL} 
-                  alt={movie.TITRE} 
-                  className="w-full h-full object-cover"
-                />
-              </div>
-
-              <div className="flex flex-col justify-end text-white space-y-2 flex-grow">
-                <h1 className="text-2xl md:text-3xl font-bold">{movie.TITRE}</h1>
-                
-                <div className="flex flex-wrap gap-2 mt-1">
-                  {movie.GENRES && movie.GENRES.map((genre, index) => (
-                    <Badge key={index} variant="secondary" className="bg-primary/20 text-primary-foreground">
-                      {genre}
-                    </Badge>
-                  ))}
-                </div>
-                
-                <div className="flex flex-wrap items-center gap-x-4 gap-y-2 text-sm text-white/80 mt-2">
-                  <div className="flex items-center">
-                    <Calendar className="w-4 h-4 mr-1" />
-                    <span>{movie.ANNEE}</span>
-                  </div>
-                  <div className="flex items-center">
-                    <Clock className="w-4 h-4 mr-1" />
-                    <span>{movie.DUREE} min</span>
-                  </div>
-                  {movie.LANGUE && (
-                    <div className="flex items-center">
-                      <Globe className="w-4 h-4 mr-1" />
-                      <span>{movie.LANGUE}</span>
-                    </div>
-                  )}
-                  {movie.PAYS && movie.PAYS.length > 0 && (
-                    <div className="flex items-center">
-                      <MapPin className="w-4 h-4 mr-1" />
-                      <span>{movie.PAYS.join(', ')}</span>
-                    </div>
-                  )}
-                </div>
-                
-                <div className="flex flex-wrap gap-2 mt-4">
-                  <Button 
-                    onClick={handleWatchTrailer} 
-                    className="bg-primary hover:bg-primary/90"
-                    disabled={!movie.ANNONCES || movie.ANNONCES.length === 0}
-                  >
-                    <Play className="w-4 h-4 mr-2" />
-                    Watch Trailer
-                  </Button>
-                  
-                  <Button 
-                    onClick={handleRentMovie} 
-                    className="bg-green-600 hover:bg-green-700"
-                  >
-                    <ShoppingCart className="w-4 h-4 mr-2" />
-                    Rent Movie
-                  </Button>
-                </div>
-              </div>
-            </div>
-          </div>
-        </div>
-
-        <Tabs defaultValue="overview" className="w-full">
-          <div className="px-6 pt-4">
-            <TabsList className="grid grid-cols-2 md:w-auto md:inline-grid">
-              <TabsTrigger className="bg-gray-200" value="overview">Overview</TabsTrigger>
-              <TabsTrigger className="bg-gray-200" value="details">Details</TabsTrigger>
-            </TabsList>
-          </div>
-
-          <div className="relative h-[calc(90vh-80px-16rem)] md:h-[calc(90vh-80px-12rem)]">
-            <ScrollArea className="h-full pb-6">
-              <TabsContent value="overview" className="px-6 py-4 mt-0">
-                <div className="space-y-6">
-                  <div>
-                    <h3 className="text-lg font-semibold mb-2">Synopsis</h3>
-                    <p className="text-muted-foreground">
-                      {movie.RESUME || 
-                        "No synopsis available for this movie."}
-                    </p>
-                  </div>
-                  
-                  <div>
-                    <h3 className="text-lg font-semibold mb-2">Genres</h3>
-                    <div className="flex flex-wrap gap-2 overflow-y-auto max-h-48 pr-2">
-                      {movie.GENRES && movie.GENRES.map((genre, index) => (
-                        <Badge key={index} variant="outline">
-                          {genre}
-                        </Badge>
-                      ))}
-                    </div>
-                  </div>
-                </div>
-              </TabsContent>
-
-              <TabsContent value="details" className="px-6 py-4 mt-0">
-                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
-                  <div className="space-y-4">
-                    <h3 className="text-lg font-semibold">Technical Details</h3>
-                    <div className="space-y-2">
-                      <div className="flex justify-between">
-                        <span className="text-muted-foreground">Release Year</span>
-                        <span>{movie.ANNEE}</span>
-                      </div>
-                      <div className="flex justify-between">
-                        <span className="text-muted-foreground">Runtime</span>
-                        <span>{movie.DUREE} minutes</span>
-                      </div>
-                      <div className="flex justify-between">
-                        <span className="text-muted-foreground">Language</span>
-                        <span>{movie.LANGUE}</span>
-                      </div>
-                      <div className="flex justify-between">
-                        <span className="text-muted-foreground">Country</span>
-                        <span>{movie.PAYS ? movie.PAYS.join(', ') : 'Unknown'}</span>
-                      </div>
-                      <div className="flex justify-between">
-                        <span className="text-muted-foreground">Movie ID</span>
-                        <span>{movie.ID}</span>
-                      </div>
-                    </div>
-                  </div>
-                  
-                  <div className="space-y-4">
-                    <h3 className="text-lg font-semibold">Trailer</h3>
-                    {movie.ANNONCES && movie.ANNONCES.length > 0 ? (
-                      <div className="space-y-2">
-                        <Button 
-                          variant="outline" 
-                          className="w-full"
-                          onClick={handleWatchTrailer}
-                        >
-                          <Play className="w-4 h-4 mr-2" />
-                          Watch Trailer
-                        </Button>
-                      </div>
-                    ) : (
-                      <p className="text-muted-foreground">No trailer available for this movie.</p>
-                    )}
-                  </div>
-                </div>
-              </TabsContent>
-            </ScrollArea>
-          </div>
-        </Tabs>
-      </DialogContent>
-    </Dialog>
-  );
-};
-
-export default MovieDetailsModal;
diff --git a/frontend/src/Modal/movie-information-modal.tsx b/frontend/src/Modal/movie-information-modal.tsx
deleted file mode 100644
index 5b064d4..0000000
--- a/frontend/src/Modal/movie-information-modal.tsx
+++ /dev/null
@@ -1,85 +0,0 @@
-//import React, { useEffect } from "react";
-//import {
-//  Dialog,
-//  DialogContent,
-//  DialogHeader,
-//  DialogTitle,
-//  DialogDescription,
-//} from "../components/ui/dialog";
-//import { ScrollArea } from "../components/ui/scroll-area";
-//import { Clock, Calendar, Globe } from "lucide-react";
-//import { useModal } from "../../hooks/use-modal-store"
-//
-//const MovieModal = () => {
-//
-//  const { isOpen, onClose, type, data: movie } = useModal();
-//  const isModalOpen = isOpen && type === "movieModal";
-//
-//  if (!isModalOpen) return null;
-//
-//
-//  return (
-//    <Dialog open={isModalOpen} onOpenChange={onClose}>
-//      <DialogContent className="max-w-3xl max-h-[90vh] overflow-hidden">
-//        <DialogHeader>
-//          <DialogTitle className="text-2xl font-bold">
-//            {movie.TITRE}
-//          </DialogTitle>
-//          <DialogDescription>
-//            <div className="flex items-center gap-2 text-gray-500">
-//              <Calendar className="w-4 h-4" />
-//              <span>{movie.ANNEE}</span>
-//              <Clock className="w-4 h-4 ml-4" />
-//              <span>{movie.DUREE} min</span>
-//              <Globe className="w-4 h-4 ml-4" />
-//              <span>{movie.LANGUE}</span>
-//            </div>
-//          </DialogDescription>
-//        </DialogHeader>
-//
-//        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
-//          <div className="relative aspect-[2/3] rounded-lg overflow-hidden bg-gray-100">
-//            {movie.POSTER_URL ? (
-//              <img 
-//                src={movie.POSTER_URL} 
-//                alt={movie.TITRE}
-//                className="object-cover w-full h-full"
-//              />
-//            ) : (
-//              <div className="flex items-center justify-center w-full h-full text-gray-400">
-//                No poster available
-//              </div>
-//            )}
-//          </div>
-//
-//          <ScrollArea className="h-[60vh]">
-//            <div className="space-y-6 pr-4">
-//              <div>
-//                <h3 className="text-lg font-semibold mb-2">Synopsis</h3>
-//                <p className="text-gray-600">
-//                  {movie.RESUME || "No synopsis available."}
-//                </p>
-//              </div>
-//
-//              <div>
-//                <h3 className="text-lg font-semibold mb-2">Additional Details</h3>
-//                <dl className="space-y-2">
-//                  <div>
-//                    <dt className="text-sm font-medium text-gray-500">Director ID</dt>
-//                    <dd className="text-gray-700">{movie.ID_REALISATEUR || "Not available"}</dd>
-//                  </div>
-//                  <div>
-//                    <dt className="text-sm font-medium text-gray-500">Movie ID</dt>
-//                    <dd className="text-gray-700">{movie.ID}</dd>
-//                  </div>
-//                </dl>
-//              </div>
-//            </div>
-//          </ScrollArea>
-//        </div>
-//      </DialogContent>
-//    </Dialog>
-//  );
-//};
-//
-//export default MovieModal;
diff --git a/frontend/src/Modal/user-profile-modal.tsx b/frontend/src/Modal/user-profile-modal.tsx
deleted file mode 100644
index 599579b..0000000
--- a/frontend/src/Modal/user-profile-modal.tsx
+++ /dev/null
@@ -1,48 +0,0 @@
-import { useState } from "react";
-import tomHankImage from "../../assets/tom-hanks.jpg";
-import {
-  Dialog,
-  DialogContent,
-  DialogDescription,
-  DialogFooter,
-  DialogHeader,
-  DialogTitle,
-} from "../components/ui/dialog";
-
-const UserProfile = () => {
-  const [isDialogOpen, setIsDialogOpen] = useState(false);
-
-  const openDialog = () => setIsDialogOpen(true);
-  const closeDialog = () => setIsDialogOpen(false);
-
-  return (
-    <div className="w-screen h-screen flex justify-center items-center">
-      <button onClick={openDialog} className="bg-blue-500 p-2 rounded text-white">
-        Open Profile
-      </button>
-      {isDialogOpen && (
-        <Dialog onClose={closeDialog}>
-          <DialogContent>
-            <DialogHeader>
-              <DialogTitle>User Profile</DialogTitle>
-            </DialogHeader>
-            <DialogContent>
-              <img src={tomHankImage} alt="Tom Hanks" className="w-full h-auto rounded mb-4" />
-              <DialogDescription>
-                <p>Name: Tom Hanks</p>
-                <p>Email: tom.hanks@example.com</p>
-              </DialogDescription>
-            </DialogContent>
-            <DialogFooter>
-              <button onClick={closeDialog} className="bg-red-500 p-2 rounded text-white">
-                Close
-              </button>
-            </DialogFooter>
-          </DialogContent>
-        </Dialog>
-      )}
-    </div>
-  );
-};
-
-export default UserProfile;
diff --git a/frontend/src/components/Dashboard.tsx b/frontend/src/components/Dashboard.tsx
index 560b97d..28974dd 100644
--- a/frontend/src/components/Dashboard.tsx
+++ b/frontend/src/components/Dashboard.tsx
@@ -1,165 +1,61 @@
 import type React from "react";
-import { debounce } from "lodash";
-import axios from "axios";
-import { useEffect, useState, useCallback } from "react";
-import { useNavigate } from "react-router-dom";
-import MovieSuggestions from "./MovieSuggestions";
-import { Movie } from "../../types";
-import { MovieSuggestion } from "../../types";
+import { useLocation } from "react-router-dom";
+import { useState } from "react";
 import { Button } from "./ui/button";
 import { Input } from "./ui/input";
 import { Label } from "./ui/label";
 import { Slider } from "./ui/slider";
 import Header from "./Header";
 import MovieCard from "./MovieCard";
-import { useProfileStore } from "../../hooks/use-profile-store";
 import { Card, CardContent, CardHeader, CardTitle } from "./ui/card";
-import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
-import { faRobot } from "@fortawesome/free-solid-svg-icons";
-import { useModal } from "../../hooks/use-modal-store";
-import { Pagination } from "../components/Pagination";
+
+const mockMovies = [
+  {
+    id: 1,
+    title: "Inception",
+    year: 2010,
+    genre: "Sci-Fi",
+    duration: 148,
+    poster: "/placeholder.svg?height=400&width=300",
+  },
+  {
+    id: 2,
+    title: "The Shawshank Redemption",
+    year: 1994,
+    genre: "Drama",
+    duration: 142,
+    poster: "/placeholder.svg?height=400&width=300",
+  },
+  {
+    id: 3,
+    title: "The Dark Knight",
+    year: 2008,
+    genre: "Action",
+    duration: 152,
+    poster: "/placeholder.svg?height=400&width=300",
+  },
+  {
+    id: 4,
+    title: "The Dark Knight",
+    year: 2008,
+    genre: "Action",
+    duration: 152,
+    poster: "/placeholder.svg?height=400&width=300",
+  },
+];
 
 const Dashboard: React.FC = () => {
-  const BACKEND_URL = import.meta.env.VITE_BACKEND_URL;
-  const { user } = useProfileStore();
-  const navigate = useNavigate();
-  const { onOpen } = useModal();
+  const userData = location.state?.userData;
 
   const [searchTerm, setSearchTerm] = useState("");
-  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState("");
-  const [suggestions, setSuggestions] = useState<MovieSuggestion[]>([]);
   const [yearRange, setYearRange] = useState([1900, 2025]);
   const [durationRange, setDurationRange] = useState([0, 240]);
   const [selectedGenres, setSelectedGenres] = useState<string[]>([]);
   const [excludedGenres, setExcludedGenres] = useState<string[]>([]);
-  const [scenariste, setScenariste] = useState("");
-  const [movies, setMovies] = useState<Movie[]>([]);
-  const [genres, setGenres] = useState<string[]>([]);
-  const [searchPerformed, setSearchPerformed] = useState(false);
-  const [currentPage, setCurrentPage] = useState(1);
-  const [itemsPerPage, setItemsPerPage] = useState(12);
-  const [totalPages, setTotalPages] = useState(1);
-  const [totalItems, setTotalItems] = useState(0);
-
-  useEffect(() => {
-    if (!user) {
-      navigate("/");
-    }
-
-    fetchGenres();
-  }, [user]);
-
-  useEffect(() => {
-    if (!debouncedSearchTerm) {
-      return;
-    }
-    getSuggestions();
-  }, [debouncedSearchTerm]);
-
-  const searchMovies = async (page: number = currentPage) => {
-    const criterias = {
-      GENRES_INCLUS: selectedGenres,
-      GENRES_EXCLUS: excludedGenres,
-      ANNEE: yearRange[1],
-      DUREE_MIN: durationRange[0] === 0 ? 1 : durationRange[0],
-      DUREE_MAX: durationRange[1],
-      SCENARISTES: scenariste.trim() !== "" ? [scenariste.toUpperCase()] : [],
-      page: page,
-      limit: itemsPerPage,
-    };
-
-    console.log("Search criterias:", criterias);
-
-    try {
-      const response = await axios.post(`${BACKEND_URL}/movies`, criterias, {
-        headers: {
-          "Content-Type": "application/json",
-        },
-      });
-      setMovies(response.data.items);
-      setTotalPages(response.data.total_pages);
-      setTotalItems(response.data.total);
-      setCurrentPage(response.data.page);
-    } catch (error: any) {
-      console.error(error);
-    }
-  };
-
-  const fetchGenres = async () => {
-    try {
-      const response = await axios.get(`${BACKEND_URL}/movies/all-genres`);
-      setGenres(response.data);
-    } catch (error: any) {
-      console.error(error);
-    }
-  };
-
-  const getSuggestions = async () => {
-    try {
-      const token = localStorage.getItem("authToken");
-      const response = await axios.get(
-        `${BACKEND_URL}/movies/suggestions/${debouncedSearchTerm}`,
-        {
-          headers: {
-            Authorization: `Bearer ${token}`,
-          },
-        },
-      );
-
-      setSuggestions(response.data);
-    } catch (error: any) {
-      console.error(error);
-    }
-  };
-
-  useEffect(() => {
-    debounceSetSearch(searchTerm);
-  }, [searchTerm]);
-
-  const debounceSetSearch = useCallback(
-    debounce((value: string) => {
-      setDebouncedSearchTerm(value);
-    }, 300),
-    [],
-  );
-
-  const resetFilters = () => {
-    setMovies([]);
-    setSearchTerm("");
-    setDebouncedSearchTerm("");
-    setSuggestions([]);
-    setYearRange([1900, 2025]);
-    setDurationRange([0, 240]);
-    setSelectedGenres([]);
-    setExcludedGenres([]);
-    setScenariste("");
-    setSearchPerformed(false);
-    fetchGenres();
-  };
 
   const handleSearch = (e: React.FormEvent) => {
     e.preventDefault();
-    //  if (scenariste.trim() === "") {
-    //    resetFilters();
-    //    console.log("No scenariste entered, resetting filters");
-    //  } else {
-    //    fetchMoviesByScenariste(scenariste);
-    //    setSearchPerformed(true);
-    //  }
-    searchMovies();
-  };
-
-  const fetchMoviesByScenariste = async (scenariste: string) => {
-    try {
-      const response = await axios.get(
-        `${BACKEND_URL}/movies/scenariste/${scenariste}`,
-      );
-      console.log("Movies fetched:", response.data);
-      setMovies(response.data);
-    } catch (error) {
-      console.error("Error fetching movies:", error);
-    }
-    searchMovies();
+    console.log("Searching for:", searchTerm);
   };
 
   const handleYearRangeChange = (value: number[]) => {
@@ -186,39 +82,13 @@ const Dashboard: React.FC = () => {
     }
   };
 
-  const goToPage = (page: number) => {
-    if (page >= 1 && page <= totalPages) {
-      setCurrentPage(page);
-      searchMovies(page);
-    }
-  };
-
-  const onClickSelection = async (movieId: number) => {
-    setSuggestions([]);
-    try {
-      const response = await axios.get(
-        `${BACKEND_URL}/movies/movie/${movieId}`,
-      );
-      const movie: Movie = response.data;
-      onOpen("movieModal", movie as Movie);
-      setSearchTerm("");
-    } catch (error: any) {
-      console.error(error);
-    }
-  };
-
-  const handleScenaristeChange = (e: React.ChangeEvent<HTMLInputElement>) => {
-    console.log("Scenariste changed:", e.target.value);
-    setScenariste(e.target.value);
+  const openTrailer = (movieId: number) => {
+    console.log("Opening trailer for movie ID:", movieId);
   };
 
-  //const openTrailer = (movieId: number) => {
-  //  console.log("Opening trailer for movie ID:", movieId);
-  //};
-
   return (
     <div className="bg-background min-h-screen w-screen">
-      <Header title="Dashboard" />
+      <Header />
       <div className="container mx-auto px-4 py-8">
         <div className="flex gap-8">
           <Card className="basis-3/4">
@@ -227,24 +97,14 @@ const Dashboard: React.FC = () => {
             </CardHeader>
             <CardContent>
               <form onSubmit={handleSearch} className="space-y-6">
-                <div className="flex gap-2 relative">
-                  {" "}
+                <div className="flex gap-2">
                   <Input
                     placeholder="Search movies..."
                     value={searchTerm}
-                    onChange={(e) => setSearchTerm(e.target.value)}
+                    onChange={(e: any) => setSearchTerm(e.target.value)}
                     className="flex-1"
                   />
                   <Button type="submit">Search</Button>
-                  {debouncedSearchTerm.length !== 0 && (
-                    <MovieSuggestions
-                      suggestions={suggestions.map((s: MovieSuggestion) => s)}
-                      onSelect={(suggestion) => {
-                        onClickSelection(suggestion.ID);
-                      }}
-                      visible={suggestions.length > 0}
-                    />
-                  )}
                 </div>
 
                 <div className="space-y-2">
@@ -278,7 +138,7 @@ const Dashboard: React.FC = () => {
                 <div className="space-y-2">
                   <Label>Include Genres</Label>
                   <div className="flex flex-wrap gap-2">
-                    {genres.map((genre) => (
+                    {["Action", "Comedy", "Drama", "Sci-Fi"].map((genre) => (
                       <Button
                         key={genre}
                         variant={
@@ -297,19 +157,23 @@ const Dashboard: React.FC = () => {
                 <div className="space-y-2">
                   <Label>Exclude Genres</Label>
                   <div className="flex flex-wrap gap-2">
-                    {genres.map((genre) => (
-                      <Button
-                        key={genre}
-                        variant={
-                          excludedGenres.includes(genre) ? "default" : "outline"
-                        }
-                        size="sm"
-                        onClick={() => toggleGenre(genre, "exclude")}
-                        type="button"
-                      >
-                        {genre}
-                      </Button>
-                    ))}
+                    {["Horror", "Romance", "Thriller", "Documentary"].map(
+                      (genre) => (
+                        <Button
+                          key={genre}
+                          variant={
+                            excludedGenres.includes(genre)
+                              ? "destructive"
+                              : "outline"
+                          }
+                          size="sm"
+                          onClick={() => toggleGenre(genre, "exclude")}
+                          type="button"
+                        >
+                          {genre}
+                        </Button>
+                      ),
+                    )}
                   </div>
                 </div>
               </form>
@@ -321,44 +185,19 @@ const Dashboard: React.FC = () => {
               <CardTitle>People Search</CardTitle>
             </CardHeader>
             <CardContent>
-              <div className="space-y-2">
-                <Label>Scenariste</Label>
-                <Input
-                  placeholder="Enter scenariste name..."
-                  value={scenariste}
-                  onChange={handleScenaristeChange}
-                  className="flex-1"
-                />
-              </div>
+              <Input placeholder="Search directors, actors..." />
             </CardContent>
           </Card>
         </div>
 
         <div className="mt-8 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
-          {movies.length > 0
-            ? movies.map((movie) => <MovieCard key={movie.ID} movie={movie} />)
-            : searchPerformed && (
-                <div className="col-span-full text-center text-gray-500 flex flex-col items-center">
-                  <FontAwesomeIcon icon={faRobot} size="3x" className="mb-4" />
-                  <span>
-                    Il n'y a pas de films correspondant aux filtres de
-                    recherche. Oups!
-                  </span>
-                </div>
-              )}
+          {mockMovies.map((movie) => (
+            <MovieCard key={movie.id} movie={movie} openTrailer={openTrailer} />
+          ))}
         </div>
-
-        {movies.length > 0 && totalPages > 1 && (
-          <Pagination
-            currentPage={currentPage}
-            totalPages={totalPages}
-            maxVisiblePages={5}
-            goToPage={goToPage}
-          />
-        )}
       </div>
     </div>
-  );
+  )
 };
 
 export default Dashboard;
diff --git a/frontend/src/components/Header.tsx b/frontend/src/components/Header.tsx
index 650a87c..5c770b9 100644
--- a/frontend/src/components/Header.tsx
+++ b/frontend/src/components/Header.tsx
@@ -1,26 +1,20 @@
-import type React from "react";
+import type React from "react"
 import { Button } from "./ui/button";
-import { User, Film } from "lucide-react";
-import { useNavigate } from "react-router-dom";
-
-type HeaderProps = {
-  title: string;
-};
-const Header: React.FC<HeaderProps> = ({ title }) => {
-  const navigate = useNavigate();
+import { User, Film } from "lucide-react"
 
+const Header: React.FC = () => {
   return (
     <header className="border-b bg-card">
       <div className="container mx-auto px-4 py-4">
         <div className="flex justify-between items-center">
-          <h1 className="text-2xl font-bold">{title}</h1>
+          <h1 className="text-2xl font-bold">Dashboard</h1>
           <a href="#" className="flex items-center gap-2 hover:text-primary">
             <Film className="h-5 w-5" />
             <span className="text-xl font-semibold">iTunes</span>
           </a>
           <div className="flex items-center gap-4">
             <span className="text-sm text-muted-foreground">Credits: 100</span>
-            <Button variant="outline" size="sm" onClick={ () => (navigate("/profile")) }>
+            <Button variant="outline" size="sm">
               <User className="w-4 h-4 mr-2" />
               Profile
             </Button>
@@ -28,7 +22,9 @@ const Header: React.FC<HeaderProps> = ({ title }) => {
         </div>
       </div>
     </header>
-  );
-};
+  )
+}
+
+export default Header
+
 
-export default Header;
diff --git a/frontend/src/components/LandingPage.tsx b/frontend/src/components/LandingPage.tsx
index df6544c..7223cf0 100644
--- a/frontend/src/components/LandingPage.tsx
+++ b/frontend/src/components/LandingPage.tsx
@@ -5,44 +5,22 @@ import { Input } from "./ui/input";
 import axios from "axios";
 import { useNavigate } from "react-router-dom";
 import SignInModal from "./../Modal/sign-in-modal";
-import { useProfileStore } from "../../hooks/use-profile-store";
-import { useModal } from "../../hooks/use-modal-store";
 
 const LandingPage = () => {
   const BACKEND_URL = import.meta.env.VITE_BACKEND_URL;
   const navigate = useNavigate();
-  const { setUser } = useProfileStore();
-  const { onOpen } = useModal();
 
   const [showModal, setShowModal] = useState(false);
   const [error, setError] = useState<string>("");
 
-  const fecthUserInformation = async () => {
-    try {
-      const token = localStorage.getItem("authToken");
-      const response = await axios.get(`${BACKEND_URL}/users/myaccount`, {
-        headers: {
-          Authorization: `Bearer ${token}`,
-        },
-      });
-
-      setUser(response.data);
-
-    } catch (error: any) {
-      console.error(error);
-    }
-  };
-
   const handleSearchClick = (e: React.FormEvent) => {
     e.preventDefault();
     setShowModal(true);
   };
 
-  const handleSignInClick = async (formData: {
-    courriel: string;
-    mot_de_passe: string;
-  }) => {
+  const handleSignInClick = async (formData: { courriel: string, mot_de_passe: string }) => {
     try {
+      console.log(formData);
       const response = await axios.post(`${BACKEND_URL}/auth/login`, formData, {
         headers: {
           "Content-Type": "application/json",
@@ -52,13 +30,11 @@ const LandingPage = () => {
       const token = response.data.token;
       localStorage.setItem("authToken", token);
 
-      await fecthUserInformation();
-
-      navigate("/dashboard");
+      navigate("/dashboard", { state: { userData: response.data } });
       setShowModal(false);
     } catch (error: any) {
       if (error.response.status === 401) {
-        setError("Email ou mot de passe incorrect");
+        setError("Email ou mot de passe incorrect"); 
       } else {
         console.error(error);
       }
@@ -66,7 +42,7 @@ const LandingPage = () => {
   };
 
   return (
-    <div className="w-screen flex flex-col items-center h-screen justify-center">
+    <div className="w-screen flex flex-col items-center">
       <a
         className="flex items-center justify-center fixed top-0 pt-10"
         href="#"
@@ -74,7 +50,7 @@ const LandingPage = () => {
         <Film className="h-6 w-6" />
         <span className="text-2xl font-bold">iTunes</span>
       </a>
-      <div className="flex flex-col items-center space-y-4 text-center mt-20 pb-32">
+      <div className="flex flex-col items-center space-y-4 text-center mt-20">
         <div className="space-y-2">
           <h1 className="text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl lg:text-6xl/none">
             Trouvez Votre Film Préféré
diff --git a/frontend/src/components/ModalProvider.tsx b/frontend/src/components/ModalProvider.tsx
deleted file mode 100644
index 2cf2899..0000000
--- a/frontend/src/components/ModalProvider.tsx
+++ /dev/null
@@ -1,11 +0,0 @@
-import MovieDetailsModal from "../Modal/movie-details-modal";
-const ModalProvider = () => {
-  return (
-    <>
-      <MovieDetailsModal />
-    </>
-    
-  );
-};
-
-export default ModalProvider;
diff --git a/frontend/src/components/MovieCard.tsx b/frontend/src/components/MovieCard.tsx
index 42d3a5d..2a0a508 100644
--- a/frontend/src/components/MovieCard.tsx
+++ b/frontend/src/components/MovieCard.tsx
@@ -1,68 +1,51 @@
 import type React from "react";
 import { Button } from "./ui/button";
 import { Card, CardContent } from "./ui/card";
-import { MovieSuggestion, Movie } from "../../types";
-import { useModal } from "../../hooks/use-modal-store";
-import axios from "axios";
-import { useState } from "react";
-import { Loader2 } from "lucide-react";
+import { Play } from "lucide-react";
 
-interface MovieCardProps {
-  movie: MovieSuggestion;
+interface Movie {
+  id: number;
+  title: string;
+  year: number;
+  genre: string;
+  duration: number;
+  poster: string;
 }
 
-const MovieCard: React.FC<MovieCardProps> = ({ movie }) => {
-  const { onOpen } = useModal();
-  const [loading, setLoading] = useState(false);
-  const BACKEND_URL = import.meta.env.VITE_BACKEND_URL;
-
-  const onCardClick = async () => {
-    try {
-      setLoading(true);
-      console.log("Fetching complete details for movie:", movie.ID);
-      
-      const response = await axios.get(`${BACKEND_URL}/movies/movie/${movie.ID}`);
-      const fullMovieData: Movie = response.data;
-      
-      onOpen("movieModal", fullMovieData);
-    } catch (error) {
-      console.error("Error fetching movie details:", error);
-      onOpen("movieModal", movie as unknown as Movie);
-    } finally {
-      setLoading(false);
-    }
-  };
+interface MovieCardProps {
+  movie: Movie;
+  openTrailer: (movieId: number) => void;
+}
 
+const MovieCard: React.FC<MovieCardProps> = ({ movie, openTrailer }) => {
   return (
-    <Card key={movie.ID} className="overflow-hidden">
+    <Card key={movie.id} className="overflow-hidden">
       <CardContent className="p-0">
         <div className="aspect-[2/3] relative">
-          <Button 
-            onClick={onCardClick} 
-            disabled={loading}
-            className="w-full h-full p-0 m-0 rounded-none"
-          >
-            {loading ? (
-              <div className="absolute inset-0 flex items-center justify-center bg-black/50">
-                <Loader2 className="w-8 h-8 animate-spin text-white" />
-              </div>
-            ) : null}
-            <img
-              src={movie.POSTER_URL || "/placeholder.svg"}
-              alt={movie.TITRE}
-              className="object-cover absolute inset-0 w-full h-full"
-            />
-          </Button>
+          <img
+            src={movie.poster || "/placeholder.svg"}
+            alt={movie.title}
+            className="object-cover absolute inset-0 w-full h-full"
+          />
         </div>
         <div className="p-4 space-y-4">
           <div>
             <h3 className="font-semibold text-lg leading-tight">
-              {movie.TITRE}
+              {movie.title}
             </h3>
             <p className="text-sm text-muted-foreground">
-              {movie.ANNEE} • {movie.DUREE} min
+              {movie.year} • {movie.genre} • {movie.duration} min
             </p>
           </div>
+          <Button
+            size="sm"
+            variant="outline"
+            className="w-full"
+            onClick={() => openTrailer(movie.id)}
+          >
+            <Play className="w-4 h-4 mr-2" />
+            Watch Trailer
+          </Button>
         </div>
       </CardContent>
     </Card>
diff --git a/frontend/src/components/MovieSuggestions.tsx b/frontend/src/components/MovieSuggestions.tsx
deleted file mode 100644
index c8ceeaf..0000000
--- a/frontend/src/components/MovieSuggestions.tsx
+++ /dev/null
@@ -1,34 +0,0 @@
-import { Card } from "../components/ui/card";
-import { MovieSuggestion } from "../../types";
-
-type MovieSuggestionsProps = {
-  suggestions: MovieSuggestion[];
-  onSelect: (suggestion: MovieSuggestion) => void;
-  visible: boolean;
-};
-
-const MovieSuggestions = ({
-  suggestions,
-  onSelect,
-  visible,
-}: MovieSuggestionsProps) => {
-  if (!visible || suggestions.length === 0) return null;
-
-  return (
-    <Card className="absolute top-full left-0 right-0 mt-1 max-h-60 overflow-y-auto z-50 bg-white border border-input">
-      <div className="w-full">
-        {suggestions.map((suggestion, index) => (
-          <button
-            key={index}
-            onClick={() => onSelect(suggestion)}
-            className="w-full text-left px-3 py-2 hover:bg-accent hover:text-accent-foreground rounded-sm text-sm bg-white text-black"
-          >
-            {suggestion.title}
-          </button>
-        ))}
-      </div>
-    </Card>
-  );
-};
-
-export default MovieSuggestions;
diff --git a/frontend/src/components/Pagination.tsx b/frontend/src/components/Pagination.tsx
deleted file mode 100644
index 783a2c3..0000000
--- a/frontend/src/components/Pagination.tsx
+++ /dev/null
@@ -1,74 +0,0 @@
-import { Button } from '../components/ui/button';
-
-interface PaginationProps {
-  currentPage: number;
-  totalPages: number;
-  maxVisiblePages: number;
-  goToPage: (page: number) => void;
-}
-
-export const Pagination: React.FC<PaginationProps> = ({
-  currentPage,
-  totalPages,
-  maxVisiblePages = 5,
-  goToPage
-}) => {
-  const pageNumbers = [];
-  
-  let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
-  let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);
-  
-  if (endPage - startPage + 1 < maxVisiblePages) {
-    startPage = Math.max(1, endPage - maxVisiblePages + 1);
-  }
-
-  for (let i = startPage; i <= endPage; i++) {
-    pageNumbers.push(i);
-  }
-
-  return (
-    <div className="flex items-center justify-center space-x-2 mt-6">
-      <Button 
-        variant="outline" 
-        onClick={() => goToPage(currentPage - 1)}
-        disabled={currentPage === 1}
-      >
-        Previous
-      </Button>
-      
-      {startPage > 1 && (
-        <>
-          <Button variant="outline" onClick={() => goToPage(1)}>1</Button>
-          {startPage > 2 && <span className="px-2">...</span>}
-        </>
-      )}
-      
-      {pageNumbers.map(number => (
-        <Button
-          key={number}
-          variant={currentPage === number ? "default" : "outline"}
-          onClick={() => goToPage(number)}
-        >
-          {number}
-        </Button>
-      ))}
-      
-      {endPage < totalPages && (
-        <>
-          {endPage < totalPages - 1 && <span className="px-2">...</span>}
-          <Button variant="outline" onClick={() => goToPage(totalPages)}>
-            {totalPages}
-          </Button>
-        </>
-      )}
-      
-      <Button 
-        variant="outline" 
-        onClick={() => goToPage(currentPage + 1)}
-        disabled={currentPage === totalPages}
-      >
-        Next
-      </Button>
-    </div>
-  );
-};
diff --git a/frontend/src/components/SignIn.tsx b/frontend/src/components/SignIn.tsx
new file mode 100644
index 0000000..bb14fec
--- /dev/null
+++ b/frontend/src/components/SignIn.tsx
@@ -0,0 +1,76 @@
+import { useState } from "react";
+import {
+  Dialog,
+  DialogContent,
+  DialogDescription,
+  DialogHeader,
+  DialogTitle,
+  DialogTrigger,
+  DialogFooter,
+} from "./ui/dialog";
+import { Button } from "./ui/button";
+import { Input } from "./ui/input";
+import { Label } from "./ui/label";
+import { EyeIcon, EyeOffIcon } from "lucide-react";
+
+const SignIn = () => {
+  const [showPassword, setShowPassword] = useState(false);
+
+  return (
+    <Dialog>
+      <DialogTrigger asChild>
+        <Button variant="outline">Se connecter</Button>
+      </DialogTrigger>
+      <DialogContent className="sm:max-w-[425px] [&>button]:hover:bg-transparent [&>button]:focus:bg-transparent [&>button]:active:bg-transparent">
+        <DialogHeader>
+          <DialogTitle className="text-2xl font-bold text-center">
+            Connexion
+          </DialogTitle>
+          <DialogDescription className="text-center text-muted-foreground">
+            Connectez vous a votre profil pour accéder au service
+          </DialogDescription>
+        </DialogHeader>
+        <form onSubmit={(e) => e.preventDefault()}>
+          <div className="grid gap-6 py-4">
+            <div className="grid gap-2">
+              <Label htmlFor="email">Email</Label>
+              <Input id="email" type="email" placeholder="exemple@email.com" />
+            </div>
+            <div className="grid gap-2">
+              <Label htmlFor="password">Mot de passe</Label>
+              <div className="relative">
+                <Input
+                  id="password"
+                  type={showPassword ? "text" : "password"}
+                  placeholder="Mot de passe"
+                />
+                <Button
+                  type="button"
+                  variant="ghost"
+                  size="icon"
+                  className="absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent"
+                  onClick={() => setShowPassword(!showPassword)}
+                >
+                  {showPassword ? (
+                    <EyeOffIcon className="h-4 w-4 text-muted-foreground" />
+                  ) : (
+                    <EyeIcon className="h-4 w-4 text-muted-foreground" />
+                  )}
+                </Button>
+              </div>
+            </div>
+          </div>
+          <DialogFooter>
+            <div className="py-2 w-full">
+              <Button type="submit" className="w-full">
+                Connexion
+              </Button>
+            </div>
+          </DialogFooter>
+        </form>
+      </DialogContent>
+    </Dialog>
+  );
+};
+
+export default SignIn;
diff --git a/frontend/src/components/TestPage.tsx b/frontend/src/components/TestPage.tsx
index e4d897f..57bd664 100644
--- a/frontend/src/components/TestPage.tsx
+++ b/frontend/src/components/TestPage.tsx
@@ -1,140 +1,28 @@
+import tomHankImage from "../../src/assets/tom-hanks.jpg";
 import {
-  Dialog,
-  DialogContent,
-} from "../components/ui/dialog";
-import { ScrollArea } from "../components/ui/scroll-area";
-import { Button } from "../components/ui/button";
-import { Tabs, TabsContent, TabsList, TabsTrigger } from "../components/ui/tabs";
-import {
-  Clock,
-  Calendar,
-  Globe,
-  Play,
-} from "lucide-react";
-
-// Define the new Movie type
-export type Movie = {
-  ID: number;
-  TITRE: string;
-  RESUME: string;
-  ANNEE: number;
-  DUREE: number;
-  LANGUE: string;
-  ID_REALISATEUR: number;
-  POSTER_URL: string;
-};
-
-// Mock data for testing
-const mockMovieData: Movie = {
-  ID: 1,
-  TITRE: "Inception",
-  RESUME: "A thief who steals corporate secrets through the use of dream-sharing technology is given the inverse task of planting an idea into the mind of a C.E.O.",
-  ANNEE: 2010,
-  DUREE: 148,
-  LANGUE: "English",
-  ID_REALISATEUR: 1,
-  POSTER_URL: "https://example.com/inception-poster.jpg",
-};
+  Card,
+  CardContent,
+  CardDescription,
+  CardFooter,
+  CardHeader,
+  CardTitle,
+} from "./ui/card";
 
 const TestPage = () => {
-
-  const handleWatchTrailer = () => {
-    console.log('Opening trailer for:', mockMovieData.TITRE);
-  };
-
   return (
-    <div className="p-4">
-      <h1 className="text-2xl font-bold mb-4">Test Page</h1>
-      <Dialog open={true} onOpenChange={() => {}}>
-        <DialogContent className="max-w-4xl max-h-[55vh] overflow-hidden p-0">
-          <div className="relative w-full h-64 md:h-80 bg-gradient-to-b from-black/70 to-background overflow-hidden">
-            <div 
-              className="absolute inset-0 bg-cover bg-center blur-sm opacity-50"
-              style={{ backgroundImage: `url(${mockMovieData.POSTER_URL})` }}
-            />
-            <div className="absolute inset-0 bg-black/40 flex p-6">
-              <div className="flex flex-col md:flex-row gap-6 z-10 w-full">
-                <div className="hidden md:block flex-shrink-0 w-40 h-auto shadow-lg rounded-md overflow-hidden">
-                  <img 
-                    src={mockMovieData.POSTER_URL} 
-                    alt={mockMovieData.TITRE} 
-                    className="w-full h-full object-cover"
-                  />
-                </div>
-                <div className="flex flex-col justify-end text-white space-y-2 flex-grow">
-                  <h1 className="text-2xl md:text-3xl font-bold">{mockMovieData.TITRE}</h1>
-                  <div className="flex flex-wrap items-center gap-x-4 gap-y-2 text-sm text-white/80">
-                    <div className="flex items-center">
-                      <Calendar className="w-4 h-4 mr-1" />
-                      <span>{mockMovieData.ANNEE}</span>
-                    </div>
-                    <div className="flex items-center">
-                      <Clock className="w-4 h-4 mr-1" />
-                      <span>{mockMovieData.DUREE} min</span>
-                    </div>
-                    <div className="flex items-center">
-                      <Globe className="w-4 h-4 mr-1" />
-                      <span>{mockMovieData.LANGUE}</span>
-                    </div>
-                  </div>
-                  <div className="flex gap-2 mt-4">
-                    <Button 
-                      onClick={handleWatchTrailer} 
-                      className="bg-primary hover:bg-primary/90"
-                    >
-                      <Play className="w-4 h-4 mr-2" />
-                      Watch Trailer
-                    </Button>
-                  </div>
-                </div>
-              </div>
-            </div>
-          </div>
-          <Tabs defaultValue="overview" className="w-full">
-            <div className="px-6 pt-4">
-              <TabsList className="text-white md:w-auto md:inline-grid">
-                <TabsTrigger value="overview">Overview</TabsTrigger>
-              </TabsList>
-            </div>
-            <div className="relative h-[calc(90vh-80px-16rem)] md:h-[calc(90vh-80px-12rem)]">
-              <ScrollArea className="h-full pb-6">
-                <TabsContent value="overview" className="px-6 py-4 mt-0">
-                  <div className="space-y-6">
-                    <div>
-                      <h3 className="text-lg font-semibold mb-2">Synopsis</h3>
-                      <p className="text-muted-foreground">
-                        {mockMovieData.RESUME || 
-                          "No synopsis available for this movie."}
-                      </p>
-                    </div>
-                  </div>
-                </TabsContent>
-                <TabsContent value="details" className="px-6 py-4 mt-0">
-                  <div className="p-8 gap-6">
-                    <div className="space-y-4">
-                      <h3 className="text-lg font-semibold">Technical Details</h3>
-                      <div className="space-y-2">
-                        <div className="flex justify-between">
-                          <span className="text-muted-foreground">Release Year</span>
-                          <span>{mockMovieData.ANNEE}</span>
-                        </div>
-                        <div className="flex justify-between">
-                          <span className="text-muted-foreground">Runtime</span>
-                          <span>{mockMovieData.DUREE} minutes</span>
-                        </div>
-                        <div className="flex justify-between">
-                          <span className="text-muted-foreground">Language</span>
-                          <span>{mockMovieData.LANGUE}</span>
-                        </div>
-                      </div>
-                    </div>
-                  </div>
-                </TabsContent>
-              </ScrollArea>
-            </div>
-          </Tabs>
-        </DialogContent>
-      </Dialog>
+    <div className="w-full flex justify-center flex-1">
+      <div className="w-[350px] h-[400px] bg-red-400 relative">
+        <div className="w-full flex justify-center">
+          <img
+            className="h-52 w-96 object-cover rounded-lg"
+            src={tomHankImage}
+            alt="Tom Hanks"
+          />
+        </div>
+        <Card className="absolute top-72 left-0 w-full">
+          <CardHeader>Hello</CardHeader>
+        </Card>
+      </div>
     </div>
   );
 };
diff --git a/frontend/src/components/UserProfile.tsx b/frontend/src/components/UserProfile.tsx
deleted file mode 100644
index 5e8313b..0000000
--- a/frontend/src/components/UserProfile.tsx
+++ /dev/null
@@ -1,160 +0,0 @@
-import { Card, CardContent, CardHeader, CardTitle } from "../components/ui/card.tsx";
-import { Tabs, TabsContent, TabsList, TabsTrigger } from "../components/ui/tabs";
-import { useProfileStore } from '../../hooks/use-profile-store';
-import Header from "./Header";
-import { 
-  User as UserIcon, 
-  Mail, 
-  CreditCard, 
-  Phone, 
-  MapPin, 
-  Calendar,
-  Package
-} from 'lucide-react';
-
-const ProfilePage = () => {
-  const { user } = useProfileStore();
-
-  if (!user) {
-    return (
-      <div className="flex items-center justify-center min-h-screen">
-        <p className="text-lg text-muted-foreground">Loading profile...</p>
-      </div>
-    );
-  }
-
-  return (
-    <div className="bg-background min-h-screen w-screen">
-      <Header title="Profile"/>
-      <div className="container mx-auto px-4 py-8 pt-24">
-        <Tabs defaultValue="personal" className="max-w-4xl mx-auto">
-          <TabsList className="grid w-full grid-cols-2">
-            <TabsTrigger className="bg-gray-200" value="personal">Personal Information</TabsTrigger>
-            <TabsTrigger className="bg-gray-200" value="subscription">Subscription & Credits</TabsTrigger>
-          </TabsList>
-          
-          <TabsContent value="personal">
-            <Card>
-              <CardHeader>
-                <CardTitle className="text-2xl font-bold flex items-center gap-2">
-                  <UserIcon className="w-6 h-6" />
-                  Personal Information
-                </CardTitle>
-              </CardHeader>
-              <CardContent className="space-y-6">
-                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
-                  <div className="space-y-2">
-                    <label className="text-sm font-medium text-muted-foreground">Full Name</label>
-                    <p className="text-lg font-medium">{`${user.prenom} ${user.nom_famille}`}</p>
-                  </div>
-                  <div className="space-y-2">
-                    <label className="text-sm font-medium text-muted-foreground">Email</label>
-                    <div className="flex items-center gap-2">
-                      <Mail className="w-4 h-4 text-primary" />
-                      <p className="text-lg">{user.courriel}</p>
-                    </div>
-                  </div>
-                  {user.tel && (
-                    <div className="space-y-2">
-                      <label className="text-sm font-medium text-muted-foreground">Phone</label>
-                      <div className="flex items-center gap-2">
-                        <Phone className="w-4 h-4 text-primary" />
-                        <p className="text-lg">{user.tel}</p>
-                      </div>
-                    </div>
-                  )}
-                  {user.date_anniversaire && (
-                    <div className="space-y-2">
-                      <label className="text-sm font-medium text-muted-foreground">Birthday</label>
-                      <div className="flex items-center gap-2">
-                        <Calendar className="w-4 h-4 text-primary" />
-                        <p className="text-lg">
-                          {new Date(user.date_anniversaire).toLocaleDateString()}
-                        </p>
-                      </div>
-                    </div>
-                  )}
-                </div>
-
-                {(user.adresse || user.ville || user.province || user.code_postal) && (
-                  <div className="pt-6 border-t">
-                    <h3 className="text-lg font-semibold mb-4 flex items-center gap-2">
-                      <MapPin className="w-5 h-5" />
-                      Address Information
-                    </h3>
-                    <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
-                      {user.adresse && (
-                        <div className="space-y-2">
-                          <label className="text-sm font-medium text-muted-foreground">Street Address</label>
-                          <p className="text-lg">{user.adresse}</p>
-                        </div>
-                      )}
-                      {user.ville && (
-                        <div className="space-y-2">
-                          <label className="text-sm font-medium text-muted-foreground">City</label>
-                          <p className="text-lg">{user.ville}</p>
-                        </div>
-                      )}
-                      {user.province && (
-                        <div className="space-y-2">
-                          <label className="text-sm font-medium text-muted-foreground">Province</label>
-                          <p className="text-lg">{user.province}</p>
-                        </div>
-                      )}
-                      {user.code_postal && (
-                        <div className="space-y-2">
-                          <label className="text-sm font-medium text-muted-foreground">Postal Code</label>
-                          <p className="text-lg">{user.code_postal}</p>
-                        </div>
-                      )}
-                    </div>
-                  </div>
-                )}
-              </CardContent>
-            </Card>
-          </TabsContent>
-
-          <TabsContent value="subscription">
-            <Card>
-              <CardHeader>
-                <CardTitle className="text-2xl font-bold flex items-center gap-2">
-                  <Package className="w-6 h-6" />
-                  Subscription Details
-                </CardTitle>
-              </CardHeader>
-              <CardContent className="space-y-6">
-                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
-                  {user.forfait && (
-                    <div className="p-6 bg-primary/5 rounded-lg">
-                      <h3 className="text-lg font-semibold mb-2 flex items-center gap-2">
-                        <Package className="w-5 h-5 text-primary" />
-                        Current Plan
-                      </h3>
-                      <p className="text-3xl font-bold text-primary">
-                        {user.forfait === 'A' ? 'Premium' : 
-                         user.forfait === 'B' ? 'Standard' : 
-                         user.forfait === 'C' ? 'Basic' : 'Free'}
-                      </p>
-                    </div>
-                  )}
-                  
-                  <div className="p-6 bg-primary/5 rounded-lg">
-                    <h3 className="text-lg font-semibold mb-2 flex items-center gap-2">
-                      <CreditCard className="w-5 h-5 text-primary" />
-                      Available Credits
-                    </h3>
-                    <p className="text-3xl font-bold text-primary">
-                      {user.credits || 0} credits
-                    </p>
-                  </div>
-                </div>
-              </CardContent>
-            </Card>
-          </TabsContent>
-        </Tabs>
-      </div>
-    </div>
-  );
-};
-
-export default ProfilePage;
diff --git a/frontend/src/components/ui/badge.tsx b/frontend/src/components/ui/badge.tsx
deleted file mode 100644
index f000e3e..0000000
--- a/frontend/src/components/ui/badge.tsx
+++ /dev/null
@@ -1,36 +0,0 @@
-import * as React from "react"
-import { cva, type VariantProps } from "class-variance-authority"
-
-import { cn } from "@/lib/utils"
-
-const badgeVariants = cva(
-  "inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
-  {
-    variants: {
-      variant: {
-        default:
-          "border-transparent bg-primary text-primary-foreground hover:bg-primary/80",
-        secondary:
-          "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
-        destructive:
-          "border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80",
-        outline: "text-foreground",
-      },
-    },
-    defaultVariants: {
-      variant: "default",
-    },
-  }
-)
-
-export interface BadgeProps
-  extends React.HTMLAttributes<HTMLDivElement>,
-    VariantProps<typeof badgeVariants> {}
-
-function Badge({ className, variant, ...props }: BadgeProps) {
-  return (
-    <div className={cn(badgeVariants({ variant }), className)} {...props} />
-  )
-}
-
-export { Badge, badgeVariants }
diff --git a/frontend/src/components/ui/scroll-area.tsx b/frontend/src/components/ui/scroll-area.tsx
deleted file mode 100644
index cf253cf..0000000
--- a/frontend/src/components/ui/scroll-area.tsx
+++ /dev/null
@@ -1,46 +0,0 @@
-import * as React from "react"
-import * as ScrollAreaPrimitive from "@radix-ui/react-scroll-area"
-
-import { cn } from "@/lib/utils"
-
-const ScrollArea = React.forwardRef<
-  React.ElementRef<typeof ScrollAreaPrimitive.Root>,
-  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>
->(({ className, children, ...props }, ref) => (
-  <ScrollAreaPrimitive.Root
-    ref={ref}
-    className={cn("relative overflow-hidden", className)}
-    {...props}
-  >
-    <ScrollAreaPrimitive.Viewport className="h-full w-full rounded-[inherit]">
-      {children}
-    </ScrollAreaPrimitive.Viewport>
-    <ScrollBar />
-    <ScrollAreaPrimitive.Corner />
-  </ScrollAreaPrimitive.Root>
-))
-ScrollArea.displayName = ScrollAreaPrimitive.Root.displayName
-
-const ScrollBar = React.forwardRef<
-  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,
-  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>
->(({ className, orientation = "vertical", ...props }, ref) => (
-  <ScrollAreaPrimitive.ScrollAreaScrollbar
-    ref={ref}
-    orientation={orientation}
-    className={cn(
-      "flex touch-none select-none transition-colors",
-      orientation === "vertical" &&
-        "h-full w-2.5 border-l border-l-transparent p-[1px]",
-      orientation === "horizontal" &&
-        "h-2.5 flex-col border-t border-t-transparent p-[1px]",
-      className
-    )}
-    {...props}
-  >
-    <ScrollAreaPrimitive.ScrollAreaThumb className="relative flex-1 rounded-full bg-border" />
-  </ScrollAreaPrimitive.ScrollAreaScrollbar>
-))
-ScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName
-
-export { ScrollArea, ScrollBar }
diff --git a/frontend/src/components/ui/tabs.tsx b/frontend/src/components/ui/tabs.tsx
deleted file mode 100644
index f57fffd..0000000
--- a/frontend/src/components/ui/tabs.tsx
+++ /dev/null
@@ -1,53 +0,0 @@
-import * as React from "react"
-import * as TabsPrimitive from "@radix-ui/react-tabs"
-
-import { cn } from "@/lib/utils"
-
-const Tabs = TabsPrimitive.Root
-
-const TabsList = React.forwardRef<
-  React.ElementRef<typeof TabsPrimitive.List>,
-  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>
->(({ className, ...props }, ref) => (
-  <TabsPrimitive.List
-    ref={ref}
-    className={cn(
-      "inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground",
-      className
-    )}
-    {...props}
-  />
-))
-TabsList.displayName = TabsPrimitive.List.displayName
-
-const TabsTrigger = React.forwardRef<
-  React.ElementRef<typeof TabsPrimitive.Trigger>,
-  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>
->(({ className, ...props }, ref) => (
-  <TabsPrimitive.Trigger
-    ref={ref}
-    className={cn(
-      "inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm",
-      className
-    )}
-    {...props}
-  />
-))
-TabsTrigger.displayName = TabsPrimitive.Trigger.displayName
-
-const TabsContent = React.forwardRef<
-  React.ElementRef<typeof TabsPrimitive.Content>,
-  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>
->(({ className, ...props }, ref) => (
-  <TabsPrimitive.Content
-    ref={ref}
-    className={cn(
-      "mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2",
-      className
-    )}
-    {...props}
-  />
-))
-TabsContent.displayName = TabsPrimitive.Content.displayName
-
-export { Tabs, TabsList, TabsTrigger, TabsContent }
diff --git a/frontend/src/index.css b/frontend/src/index.css
index fe4da2f..5e38433 100644
--- a/frontend/src/index.css
+++ b/frontend/src/index.css
@@ -141,14 +141,3 @@ button:focus-visible {
     @apply bg-background text-foreground;
   }
 }
-
-
-
-@layer base {
-  * {
-    @apply border-border outline-ring/50;
-  }
-  body {
-    @apply bg-background text-foreground;
-  }
-}
diff --git a/frontend/types.ts b/frontend/types.ts
deleted file mode 100644
index 3121c13..0000000
--- a/frontend/types.ts
+++ /dev/null
@@ -1,45 +0,0 @@
-export type User = {
-  name: string;
-  email: string;
-  nom_famille: string;
-  prenom: string;
-  courriel: string;
-  tel?: string;
-  date_anniversaire?: Date;
-  adresse?: string;
-  ville?: string;
-  province?: string;
-  code_postal?: string;
-  forfait?: string;
-  credits?: number;
-};
-
-export type MovieSuggestion = {
-  ID: number;
-  TITRE: string;
-  ANNEE: number;
-  DUREE: number;
-  POSTER_URL: string;
-}
-
-export type Movie = {
-  ID: number;
-  TITRE: string;
-  RESUME: string;
-  ANNEE: number;
-  DUREE: number;
-  LANGUE: string;
-  ID_REALISATEUR: number;
-  POSTER_URL: string;
-  ACTEURS: Array<Actor>;
-  ANNONCES: Array<string>;
-  GENRES: Array<string>;
-  PAYS: Array<string>;
-  SCENARISTES: Array<string>;
-};
-
-export type Actor = {
-  id: number;
-  nom: string;
-  role: string;
-};
diff --git a/repomix-output.xml b/repomix-output.xml
deleted file mode 100644
index 484d9d8..0000000
--- a/repomix-output.xml
+++ /dev/null
@@ -1,6142 +0,0 @@
-<repomix>This file is a merged representation of the entire codebase, combining all repository files into a single document.
-Generated by Repomix on: 2025-02-24T21:08:16.105Z<directory_structure>backend/
-  src/
-    api/
-      routes/
-        auth.py
-        credits.py
-        dependencies.py
-        movies.py
-        users.py
-    core/
-      config.py
-      security.py
-    db/
-      repositories/
-        base.py
-        credits.py
-        movies.py
-        users.py
-    models/
-      domain/
-        user.py
-      schemas/
-        movie.py
-        user.py
-    services/
-      cache.py
-      credits.py
-      movies.py
-      users.py
-    .dockerignore
-    .env
-    Dockerfile
-    main.py
-    repomix-output.xml
-    requirements.txt
-  .env.exemple
-  .gitignore
-  README.md
-frontend/
-  hooks/
-    use-modal-store.ts
-    use-profile-store.ts
-  public/
-    vite.svg
-  src/
-    assets/
-      react.svg
-    components/
-      ui/
-        button.tsx
-        card.tsx
-        dialog.tsx
-        input.tsx
-        label.tsx
-        scroll-area.tsx
-        slider.tsx
-        tabs.tsx
-      Dashboard.tsx
-      Header.tsx
-      LandingPage.tsx
-      MovieCard.tsx
-      MovieSuggestions.tsx
-      Navbar.tsx
-      TestPage.tsx
-      UserProfile.tsx
-    lib/
-      utils.ts
-    Modal/
-      movie-information-modal.tsx
-      sign-in-modal.tsx
-      user-profile-modal.tsx
-    App.css
-    App.tsx
-    index.css
-    main.tsx
-    vite-env.d.ts
-  .env
-  .gitignore
-  components.json
-  eslint.config.js
-  index.html
-  package.json
-  postcss.config.js
-  README.md
-  repomix-output.xml
-  tailwind.config.js
-  tsconfig.app.json
-  tsconfig.json
-  tsconfig.node.json
-  types.ts
-  vite.config.ts</directory_structure><files>This section contains the contents of the repository&apos;s files.<file path="backend/src/api/routes/auth.py"># backend/src/api/routes/auth.py
-from fastapi import APIRouter, Depends, HTTPException
-from models.schemas.user import ClientLogin, TokenResponse
-from services.users import UserService
-from core.security import create_token
-
-router = APIRouter()
-
-
-@router.post(&quot;/login&quot;, response_model=TokenResponse)
-async def login_client(credentials: ClientLogin):
-    service = UserService()
-    client, is_correct = service.authenticate(
-        credentials.courriel, credentials.mot_de_passe
-    )
-
-    if not client or not is_correct:
-        raise HTTPException(status_code=401, detail=&quot;Identifiants invalides&quot;)
-    token = create_token(credentials.courriel)
-    return TokenResponse(token=token)</file><file path="backend/src/api/routes/credits.py">from fastapi import APIRouter, HTTPException
-from pydantic import BaseModel, Field
-from services.credits import CreditsService
-
-router = APIRouter()
-service = CreditsService()
-
-class CreditAdjustmentRequest(BaseModel):
-    amount: int = Field(..., description=&quot;Number of credits to add or redeem&quot;)
-
-@router.get(&quot;/{client_id}/balance&quot;)
-def get_balance(client_id: int):
-    &quot;&quot;&quot;
-    Returns the current credit balance for the given client ID.
-    &quot;&quot;&quot;
-    balance = service.get_balance(client_id)
-    return {&quot;client_id&quot;: client_id, &quot;balance&quot;: balance}
-
-@router.post(&quot;/{client_id}/credits/add&quot;)
-def add_credits(client_id: int, request: CreditAdjustmentRequest):
-    &quot;&quot;&quot;
-    Adds &apos;amount&apos; credits to the user&apos;s balance.
-    &quot;&quot;&quot;
-    success = service.add_credits(client_id, request.amount)
-    if not success:
-        raise HTTPException(status_code=400, detail=&quot;Unable to add credits.&quot;)
-    return {&quot;client_id&quot;: client_id, &quot;amount_added&quot;: request.amount}
-
-@router.post(&quot;/{client_id}/redeem&quot;)
-def redeem_credits(client_id: int, request: CreditAdjustmentRequest):
-    &quot;&quot;&quot;
-    Redeems &apos;amount&apos; credits from the user&apos;s balance.
-    &quot;&quot;&quot;
-    success = service.redeem_credits(client_id, request.amount)
-    if not success:
-        raise HTTPException(status_code=400, detail=&quot;Not enough credits to redeem.&quot;)
-    return {&quot;client_id&quot;: client_id, &quot;amount_redeemed&quot;: request.amount}</file><file path="backend/src/api/routes/dependencies.py">from fastapi import Depends, HTTPException, status
-from fastapi.security import HTTPBearer, HTTPAuthorizationCredentials
-from core.security import verify_token, get_email_from_token
-
-security = HTTPBearer()
-
-
-def get_current_user(
-    credentials: HTTPAuthorizationCredentials = Depends(security),
-) -&gt; str:
-    &quot;&quot;&quot;
-    Dépendance FastAPI pour récupérer l&apos;utilisateur actuel à partir du token JWT
-    &quot;&quot;&quot;
-    try:
-        token = credentials.credentials
-        if not verify_token(token):
-            raise HTTPException(
-                status_code=status.HTTP_401_UNAUTHORIZED, detail=&quot;Token invalide&quot;
-            )
-
-        email = get_email_from_token(token)
-        if not email:
-            raise HTTPException(
-                status_code=status.HTTP_401_UNAUTHORIZED, detail=&quot;Token invalide&quot;
-            )
-
-        return email
-    except Exception as e:
-        raise HTTPException(
-            status_code=status.HTTP_401_UNAUTHORIZED, detail=&quot;Non autorisé&quot;
-        )</file><file path="backend/src/api/routes/movies.py">from fastapi import APIRouter, Depends, HTTPException
-from models.schemas.movie import (
-    MovieBase,
-    MovieResponse,
-    MoviesPaginatedResponse,
-    MovieRequest,
-)
-from services.movies import MovieService
-from core.security import create_token, verify_token, get_email_from_token
-
-router = APIRouter()
-service = MovieService()
-
-
-@router.post(&quot;/movies&quot;, response_model=MoviesPaginatedResponse)
-async def search_movies(movie: MovieRequest):
-    &quot;&quot;&quot;Search for movies&quot;&quot;&quot;
-    result = service.search_movies(movie)
-    if not result:
-        raise HTTPException(status_code=401, detail=&quot;No movies found&quot;)
-    return result
-
-
-@router.get(&quot;/movies/{id}&quot;, response_model=MovieBase)
-async def get_movie(id: int):
-    &quot;&quot;&quot;Get a movie by its ID&quot;&quot;&quot;
-    result = service.get_movie(id)
-    if not result:
-        raise HTTPException(status_code=401, detail=&quot;Movie not found&quot;)
-    return result
-
-@router.get(&quot;/suggestions/{term}&quot;)
-async def get_suggestions(term: str):
-    &quot;&quot;&quot;Get movie suggestions&quot;&quot;&quot;
-    result = service.get_suggestions(term)
-    if not result:
-        raise HTTPException(status_code=401, detail=&quot;No suggestions found&quot;)
-    return result
-
-@router.get(&quot;/all-genres&quot;)
-async def get_genres():
-    &quot;&quot;&quot;Get all genres&quot;&quot;&quot;
-    result = service.get_genres()
-    if not result:
-        raise HTTPException(status_code=401, detail=&quot;No genres found&quot;)
-    return result</file><file path="backend/src/api/routes/users.py">from fastapi import APIRouter, Depends, HTTPException
-from models.schemas.user import ClientLogin, TokenResponse, ClientBase, ClientCreate, ClientResponse, ClientUpdate
-from services.users import UserService
-from core.security import create_token, verify_token, get_email_from_token
-from api.routes.dependencies import get_current_user
-
-router = APIRouter()
-service = UserService()
-
-
-@router.get(
-    &quot;/myaccount&quot;,
-    tags=[&quot;Client&quot;],
-    summary=&quot;Get client details&quot;,
-    description=&quot;Retrieve details of a client by their email&quot;,
-    response_model=ClientBase,
-)
-async def get_current_client(current_user: str = Depends(get_current_user)):
-    &quot;&quot;&quot;Récupère le profil du client connecté&quot;&quot;&quot;
-    client = service.get_profile(current_user)
-
-    if not client:
-        raise HTTPException(status_code=401, detail=&quot;Client non trouvé&quot;)
-    return client
-
-@router.patch(&quot;/myaccount&quot;)
-async def patch_myaccount(
-    updates: ClientUpdate,
-    current_user: str = Depends(get_current_user),
-):
-    service = UserService()
-    success = service.update_profile(current_user, updates.dict(exclude_unset=True))
-    if not success:
-        raise HTTPException(status_code=400, detail=&quot;Unable to update profile&quot;)
-    return {&quot;detail&quot;: &quot;Profile updated&quot;}
-
-@router.post(&quot;/auth/register&quot;)
-async def register_client(client: ClientCreate):
-    &quot;&quot;&quot;Enregistre un nouveau client&quot;&quot;&quot;
-    result = service.register_client(client)
-    if not result:
-        raise HTTPException(status_code=401, detail=&quot;L&apos;enregistrement a échoué&quot;)
-    return result</file><file path="backend/src/core/config.py">from typing import List
-from dataclasses import dataclass, field
-import os
-from dotenv import load_dotenv
-
-load_dotenv()
-
-
-@dataclass
-class DatabaseConfig:
-    host: str
-    port: str
-    user: str
-    password: str
-    service_name: str
-
-
-@dataclass
-class AppConfig:
-    # API Config
-    API_VERSION: str = &quot;1.0.0&quot;
-    DEBUG: bool = False
-
-    # Security
-    SECRET_KEY: str = os.getenv(&quot;SECRET_KEY&quot;, &quot;your-secret-key&quot;)
-    ALGORITHM: str = &quot;HS256&quot;
-    ACCESS_TOKEN_EXPIRE_MINUTES: int = 30
-
-    # Database
-    DB_HOST: str = os.getenv(&quot;ORACLE_HOST&quot;)
-    DB_PORT: str = os.getenv(&quot;ORACLE_PORT&quot;)
-    DB_USER: str = os.getenv(&quot;ORACLE_USER&quot;)
-    DB_PASSWORD: str = os.getenv(&quot;ORACLE_PASSWORD&quot;)
-    DB_SERVICE: str = os.getenv(&quot;ORACLE_SERVICE&quot;)
-
-    class Config:
-        env_file = &quot;.env&quot;
-
-
-def get_app_config() -&gt; AppConfig:
-    return AppConfig()
-
-
-def get_database_config() -&gt; DatabaseConfig:
-    return DatabaseConfig(
-        host=os.getenv(&quot;ORACLE_HOST&quot;),
-        port=os.getenv(&quot;ORACLE_PORT&quot;),
-        user=os.getenv(&quot;ORACLE_USER&quot;),
-        password=os.getenv(&quot;ORACLE_PASSWORD&quot;),
-        service_name=os.getenv(&quot;ORACLE_SERVICE&quot;),
-    )</file><file path="backend/src/core/security.py">from datetime import datetime, timedelta
-import jwt
-from dotenv import load_dotenv
-import os
-
-load_dotenv()
-# Clé secrète simple (à mettre dans .env en production)
-load_dotenv()
-SECRET_KEY = os.getenv(&quot;SECRET_KEY&quot;)
-ALGORITHM = os.getenv(&quot;ALGORITHM&quot;)
-
-
-if ALGORITHM is None:
-    ALGORITHM = &quot;HS256&quot;
-
-
-def create_token(email: str) -&gt; str:
-    &quot;&quot;&quot;Créer un token simple&quot;&quot;&quot;
-    data = {
-        &quot;user_email&quot;: email,
-        &quot;expires&quot;: str(datetime.utcnow() + timedelta(minutes=30)),
-    }
-
-    token = jwt.encode(data, SECRET_KEY, algorithm=ALGORITHM)
-    return token
-
-
-def verify_token(token: str) -&gt; bool:
-    &quot;&quot;&quot;Vérifier si le token est valide&quot;&quot;&quot;
-    try:
-        jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
-        return True
-    except:
-        return False
-
-
-def get_email_from_token(token: str) -&gt; str:
-    &quot;&quot;&quot;Récupérer l&apos;email du token&quot;&quot;&quot;
-    try:
-        return jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])[&quot;user_email&quot;]
-    except:
-        return None</file><file path="backend/src/db/repositories/base.py">from typing import Optional, List, Dict, Any
-import oracledb
-from core.config import get_database_config
-
-
-class BaseRepository:
-    def __init__(self):
-        self.config = get_database_config()
-        self.conn = None
-        self.cur = None
-
-    def connect(self):
-        try:
- 
-            dsn = f&quot;{self.config.host}:{self.config.port}/{self.config.service_name}&quot;
-
-            # Connect in Thin mode
-            self.conn = oracledb.connect(
-                user=self.config.user,
-                password=self.config.password,
-                dsn=dsn,
-            )
-            self.cur = self.conn.cursor()
-        except Exception as e:
-            print(f&quot;Error connecting to database: {e}&quot;)
-            raise
-
-    def disconnect(self):
-        if self.cur:
-            self.cur.close()
-        if self.conn:
-            self.conn.close()
-
-    def execute_query(self, query: str, params: Dict[str, Any] = None) -&gt; List[Dict]:
-        try:
-            self.connect()
-            self.cur.execute(query, params or {})
-            columns = [col[0] for col in self.cur.description]
-            return [dict(zip(columns, row)) for row in self.cur.fetchall()]
-        finally:
-            self.disconnect()
-
-    def execute_non_query(self, statement: str, params: Dict[str, Any] = None) -&gt; None:
-        &quot;&quot;&quot;
-        For INSERT/UPDATE/DELETE statements. Opens/closes a connection each time.
-        &quot;&quot;&quot;
-        try:
-            self.connect()
-            self.cur.execute(statement, params or {})
-            self.conn.commit()
-        finally:
-            self.disconnect()</file><file path="backend/src/db/repositories/credits.py">from typing import Optional
-from db.repositories.base import BaseRepository
-
-class CreditsRepository(BaseRepository):
-    def get_by_client_id(self, client_id: int) -&gt; Optional[dict]:
-        &quot;&quot;&quot;
-        Return the credits row for the given client_id, or None if not found.
-        &quot;&quot;&quot;
-        query = &quot;SELECT ID, CLIENT_ID, BALANCE FROM CREDITS WHERE CLIENT_ID = :client_id&quot;
-        rows = self.execute_query(query, {&quot;client_id&quot;: client_id})
-        return rows[0] if rows else None
-
-    def create_credits(self, client_id: int, initial_balance: int) -&gt; None:
-        &quot;&quot;&quot;
-        Insert a new row into CREDITS for this client_id, if not already present.
-        &quot;&quot;&quot;
-        statement = &quot;&quot;&quot;
-            INSERT INTO CREDITS (CLIENT_ID, BALANCE)
-            VALUES (:client_id, :balance)
-        &quot;&quot;&quot;
-        self.execute_non_query(statement, {&quot;client_id&quot;: client_id, &quot;balance&quot;: initial_balance})
-
-    def update_balance(self, credits_id: int, new_balance: int) -&gt; None:
-        &quot;&quot;&quot;
-        Update the BALANCE column for the given credits row ID.
-        &quot;&quot;&quot;
-        statement = &quot;&quot;&quot;
-            UPDATE CREDITS
-            SET BALANCE = :balance
-            WHERE ID = :id
-        &quot;&quot;&quot;
-        self.execute_non_query(statement, {&quot;balance&quot;: new_balance, &quot;id&quot;: credits_id})</file><file path="backend/src/db/repositories/movies.py">from typing import Optional, Dict
-from db.repositories.base import BaseRepository
-
-
-class MoviesRepository(BaseRepository):
-
-    def search_films(self, criteria: dict) -&gt; Dict:
-        &quot;&quot;&quot;
-        Recherche des films selon plusieurs critères
-        Retourne un format compatible avec MoviesPaginatedResponse
-        &quot;&quot;&quot;
-        try:
-            self.connect()
-
-            conditions = []
-            params = {}
-
-            # Recherche par titre
-            if criteria.get(&quot;TITRE&quot;):
-                conditions.append(&quot;UPPER(F.TITRE) LIKE UPPER(:titre)&quot;)
-                params[&quot;titre&quot;] = f&quot;%{criteria[&apos;TITRE&apos;]}%&quot;
-
-            # Recherche par année
-            if criteria.get(&quot;ANNEE_MIN&quot;):
-                conditions.append(&quot;F.ANNEE &gt;= :annee_min&quot;)
-                params[&quot;annee_min&quot;] = criteria[&quot;ANNEE_MIN&quot;]
-            if criteria.get(&quot;ANNEE_MAX&quot;):
-                conditions.append(&quot;F.ANNEE &lt;= :annee_max&quot;)
-                params[&quot;annee_max&quot;] = criteria[&quot;ANNEE_MAX&quot;]
-
-            # Recherche par langue
-            if criteria.get(&quot;LANGUE&quot;):
-                conditions.append(&quot;UPPER(F.LANGUE) = UPPER(:langue)&quot;)
-                params[&quot;langue&quot;] = criteria[&quot;LANGUE&quot;]
-
-            # Recherche par durée
-            if criteria.get(&quot;DUREE_MIN&quot;):
-                conditions.append(&quot;F.DUREE &gt;= :duree_min&quot;)
-                params[&quot;duree_min&quot;] = criteria[&quot;DUREE_MIN&quot;]
-            if criteria.get(&quot;DUREE_MAX&quot;):
-                conditions.append(&quot;F.DUREE &lt;= :duree_max&quot;)
-                params[&quot;duree_max&quot;] = criteria[&quot;DUREE_MAX&quot;]
-
-            # Recherche dans le résumé
-            if criteria.get(&quot;RESUME&quot;):
-                conditions.append(&quot;UPPER(F.RESUME) LIKE UPPER(:resume)&quot;)
-                params[&quot;resume&quot;] = f&quot;%{criteria[&apos;RESUME&apos;]}%&quot;
-
-            # Genres à inclure
-            if criteria.get(&quot;GENRES_INCLUS&quot;):
-                genres_inclus = criteria[&quot;GENRES_INCLUS&quot;]
-                if isinstance(genres_inclus, str):
-                    genres_inclus = [genres_inclus]
-                for i, genre in enumerate(genres_inclus):
-                    param_name = f&quot;genre_inclus_{i}&quot;
-                    conditions.append(
-                        f&quot;&quot;&quot;
-                        EXISTS (
-                            SELECT 1 FROM FILM_GENRE FG
-                            JOIN GENRES G ON FG.ID_GENRE = G.ID
-                            WHERE FG.ID_FILM = F.ID 
-                            AND UPPER(G.NOM) = UPPER(:{param_name})
-                        )
-                    &quot;&quot;&quot;
-                    )
-                    params[param_name] = genre
-
-            # Genres à exclure
-            if criteria.get(&quot;GENRES_EXCLUS&quot;):
-                genres_exclus = criteria[&quot;GENRES_EXCLUS&quot;]
-                if isinstance(genres_exclus, str):
-                    genres_exclus = [genres_exclus]
-                for i, genre in enumerate(genres_exclus):
-                    param_name = f&quot;genre_exclus_{i}&quot;
-                    conditions.append(
-                        f&quot;&quot;&quot;
-                        NOT EXISTS (
-                            SELECT 1 FROM FILM_GENRE FG
-                            JOIN GENRES G ON FG.ID_GENRE = G.ID
-                            WHERE FG.ID_FILM = F.ID 
-                            AND UPPER(G.NOM) = UPPER(:{param_name})
-                        )
-                    &quot;&quot;&quot;
-                    )
-                    params[param_name] = genre
-
-            # Combine all conditions
-            where_clause = &quot; AND &quot;.join(conditions) if conditions else &quot;1=1&quot;
-
-            # Count total records
-            count_query = f&quot;&quot;&quot;
-                SELECT COUNT(DISTINCT F.ID) 
-                FROM FILMS F 
-                WHERE {where_clause}
-            &quot;&quot;&quot;
-            self.cur.execute(count_query, params)
-            total_count = self.cur.fetchone()[0]
-
-            # Pagination parameters
-            page = criteria.get(&quot;page&quot;, 1)
-            per_page = criteria.get(&quot;limit&quot;, 10)
-            offset = (page - 1) * per_page
-
-            # Main query with pagination
-            main_query = f&quot;&quot;&quot;
-                SELECT * FROM (
-                    SELECT a.*, ROWNUM rnum FROM (
-                        SELECT DISTINCT 
-                            F.ID,
-                            F.TITRE,
-                            F.ANNEE,
-                            F.RESUME,
-                            F.POSTER_URL
-                        FROM FILMS F
-                        WHERE {where_clause}
-                        ORDER BY F.TITRE
-                    ) a WHERE ROWNUM &lt;= :upper_limit
-                ) WHERE rnum &gt; :lower_limit
-            &quot;&quot;&quot;
-
-            params[&quot;upper_limit&quot;] = offset + per_page
-            params[&quot;lower_limit&quot;] = offset
-
-            # Execute main query
-            self.cur.execute(main_query, params)
-
-            # Process results
-            results = []
-            for row in self.cur.fetchall():
-                movie = {
-                    &quot;ID&quot;: row[0],
-                    &quot;TITRE&quot;: row[1],
-                    &quot;ANNEE&quot;: row[2],
-                    &quot;RESUME&quot;: str(row[3]) if row[3] else None,
-                    &quot;POSTER_URL&quot;: row[4],
-                }
-                results.append(movie)
-
-            # Calculate total pages
-            total_pages = (total_count + per_page - 1) // per_page
-
-            return {
-                &quot;items&quot;: results,
-                &quot;total&quot;: total_count,
-                &quot;page&quot;: page,
-                &quot;per_page&quot;: per_page,
-                &quot;total_pages&quot;: total_pages,
-            }
-
-        except Exception as e:
-            print(f&quot;Error searching films: {e}&quot;)
-            raise
-        finally:
-            self.disconnect()
-
-    def get_film_by_id(self, film_id: int) -&gt; Optional[Dict]:
-        &quot;&quot;&quot;
-        Récupère les détails d&apos;un film par son ID
-        &quot;&quot;&quot;
-        try:
-            self.connect()
-            # Requête principale pour les informations de base du film
-            query = &quot;&quot;&quot;
-                SELECT 
-                    F.ID,
-                    F.TITRE,
-                    F.ANNEE,
-                    F.LANGUE,
-                    F.DUREE,
-                    F.RESUME,
-                    F.POSTER_URL,
-                    F.ID_REALISATEUR
-                FROM FILMS F
-                WHERE F.ID = :film_id
-            &quot;&quot;&quot;
-
-            self.cur.execute(query, {&quot;film_id&quot;: film_id})
-            result = self.cur.fetchone()
-
-            if not result:
-                return None
-
-            # Création du dictionnaire de base
-            film_dict = {
-                &quot;ID&quot;: result[0],
-                &quot;TITRE&quot;: result[1],
-                &quot;ANNEE&quot;: result[2],
-                &quot;LANGUE&quot;: result[3],
-                &quot;DUREE&quot;: result[4],
-                &quot;RESUME&quot;: str(result[5]),
-                &quot;POSTER_URL&quot;: result[6],
-                &quot;ID_REALISATEUR&quot;: result[7],
-            }
-
-            # Requête séparée pour les genres
-            genres_query = &quot;&quot;&quot;
-                SELECT G.NOM
-                FROM FILM_GENRE FG
-                JOIN GENRES G ON FG.ID_GENRE = G.ID
-                WHERE FG.ID_FILM = :film_id
-            &quot;&quot;&quot;
-            self.cur.execute(genres_query, {&quot;film_id&quot;: film_id})
-            film_dict[&quot;GENRES&quot;] = [row[0] for row in self.cur.fetchall()]
-
-            # Requête séparée pour les pays
-            pays_query = &quot;&quot;&quot;
-                SELECT P.NOM
-                FROM FILM_PAYS FP
-                JOIN PAYS P ON FP.ID_PAYS = P.ID
-                WHERE FP.ID_FILM = :film_id
-            &quot;&quot;&quot;
-            self.cur.execute(pays_query, {&quot;film_id&quot;: film_id})
-            film_dict[&quot;PAYS&quot;] = [row[0] for row in self.cur.fetchall()]
-
-            # Requête séparée pour les scénaristes
-            scenaristes_query = &quot;&quot;&quot;
-                SELECT S.NOM
-                FROM FILM_SCENARISTES FS
-                JOIN SCENARISTES S ON FS.ID_SCENARISTE = S.ID
-                WHERE FS.ID_FILM = :film_id
-            &quot;&quot;&quot;
-            self.cur.execute(scenaristes_query, {&quot;film_id&quot;: film_id})
-            film_dict[&quot;SCENARISTES&quot;] = [row[0] for row in self.cur.fetchall()]
-
-            # Requête séparée pour les acteurs et leurs rôles
-            actors_query = &quot;&quot;&quot;
-                SELECT 
-                    P.ID,
-                    P.NOM,
-                    R.PERSONNAGE
-                FROM ROLES R
-                JOIN PERSONNES P ON R.ID_ACTEUR = P.ID
-                WHERE R.ID_FILM = :film_id
-            &quot;&quot;&quot;
-
-            self.cur.execute(actors_query, {&quot;film_id&quot;: film_id})
-            film_dict[&quot;ACTEURS&quot;] = [
-                {&quot;id&quot;: row[0], &quot;nom&quot;: row[1], &quot;role&quot;: row[2]}
-                for row in self.cur.fetchall()
-            ]
-
-            # Requête pour récupérer les bandes annonces
-            trailers_query = &quot;&quot;&quot;
-                SELECT URL
-                FROM ANNONCES
-                WHERE ID_FILM = :film_id
-                ORDER BY ID
-            &quot;&quot;&quot;
-            self.cur.execute(trailers_query, {&quot;film_id&quot;: film_id})
-            film_dict[&quot;ANNONCES&quot;] = [row[0] for row in self.cur.fetchall()]
-
-            return film_dict
-
-        except Exception as e:
-            print(f&quot;Error getting film by id: {e}&quot;)
-            raise
-        finally:
-            self.disconnect()
-
-    def get_suggestion(self, search_term, limit: int = 5):
-        &quot;&quot;&quot;
-        Get movie suggestions using Oracle&apos;s built-in string functions
-        &quot;&quot;&quot;
-        try:
-            self.connect()  # Always start with a connection
-            
-            query = &quot;&quot;&quot;
-                SELECT DISTINCT F.TITRE
-                FROM FILMS F
-                WHERE 
-                    UPPER(F.TITRE) LIKE UPPER(:search_term || &apos;%&apos;)
-                    OR UPPER(F.TITRE) LIKE UPPER(&apos;% &apos; || :search_term || &apos;%&apos;)
-                    OR UPPER(F.TITRE) LIKE UPPER(&apos;%&apos; || :search_term || &apos;%&apos;)
-                ORDER BY 
-                    CASE 
-                        WHEN UPPER(F.TITRE) LIKE UPPER(:search_term || &apos;%&apos;) THEN 1
-                        WHEN UPPER(F.TITRE) LIKE UPPER(&apos;%&apos; || :search_term || &apos;%&apos;) THEN 2
-                        ELSE 3
-                    END,
-                    LENGTH(F.TITRE), 
-                    F.TITRE        
-                FETCH FIRST :limit ROWS ONLY
-            &quot;&quot;&quot;
-            
-            # Execute query with both parameters properly bound
-            self.cur.execute(query, {
-                &quot;search_term&quot;: search_term.upper(),
-                &quot;limit&quot;: limit
-            })
-            
-            # Fetch results before disconnecting
-            results = [row[0] for row in self.cur.fetchall()]
-            return results
-            
-        except Exception as e:
-            print(f&quot;Error getting suggestions: {e}&quot;)
-            raise
-        finally:
-            self.disconnect()  # Always disconnect in finally block
-
-    def get_genres(self):
-        &quot;&quot;&quot;
-        Récupère la liste de tous les genres
-        &quot;&quot;&quot;
-        try:
-            self.connect()
-            query = &quot;SELECT NOM FROM GENRES&quot;
-            self.cur.execute(query)
-            return [row[0] for row in self.cur.fetchall()]
-        except Exception as e:
-            print(f&quot;Error getting genres: {e}&quot;)
-            raise
-        finally:
-            self.disconnect()
-
-    # def get_movies_with_filters(self, genre: str, start_year: int, end_year: int, duration: int) -&gt; List[Dict]:
-    #     &quot;&quot;&quot;
-    #     Récupère les films selon les filtres spécifiés
-    #     &quot;&quot;&quot;
-    #     try:
-    #         self.connect()
-    #         query = &quot;SELECT NOM FROM GENRES&quot;
-    #         self.cur.execute(query)
-    #         return [row[0] for row in self.cur.fetchall()]
-    #     except Exception as e:
-    #         print(f&quot;Error getting genres: {e}&quot;)
-    #         raise
-    #     finally:
-    #         self.disconnect()</file><file path="backend/src/db/repositories/users.py">from typing import Optional, Dict
-from db.repositories.base import BaseRepository
-from models.domain.user import User
-
-
-class UserRepository(BaseRepository):
-    def get_by_email(self, email: str) -&gt; Optional[Dict]:
-        query = &quot;&quot;&quot;
-            SELECT NOM_FAMILLE, PRENOM, COURRIEL, TEL,
-                DATE_ANNIVERSAIRE, ADRESSE, VILLE,
-                PROVINCE, CODE_POSTAL, FORFAIT
-            FROM CLIENTS
-            WHERE COURRIEL = :email
-        &quot;&quot;&quot;
-        rows = self.execute_query(query, {&quot;email&quot;: email})
-        return rows[0] if rows else None
-
-    def get_by_email_password(self, email: str) -&gt; Optional[Dict]:
-        query = &quot;&quot;&quot;
-            SELECT NOM_FAMILLE, PRENOM, MOT_DE_PASSE
-            FROM CLIENTS
-            WHERE COURRIEL = :email
-        &quot;&quot;&quot;
-        rows = self.execute_query(query, {&quot;email&quot;: email})
-        return rows[0] if rows else None
-
-    def create(self, user: User) -&gt; bool:
-        &quot;&quot;&quot;
-        Uses execute_non_query() for the INSERT
-        &quot;&quot;&quot;
-        try:
-            new_id = self.generate_id()
-
-            insert_stmt = &quot;&quot;&quot;
-                INSERT INTO CLIENTS (
-                    ID, COURRIEL, MOT_DE_PASSE, NOM_FAMILLE,
-                    PRENOM, TEL, DATE_ANNIVERSAIRE, ADRESSE,
-                    VILLE, PROVINCE, CODE_POSTAL, FORFAIT
-                ) VALUES (
-                    :id, :email, :password, :lastname,
-                    :firstname, :tel, :birthdate, :address,
-                    :city, :province, :postal_code, :plan
-                )
-            &quot;&quot;&quot;
-            params = {
-                &quot;id&quot;: new_id,
-                &quot;email&quot;: user.courriel,
-                &quot;password&quot;: user.mot_de_passe,
-                &quot;lastname&quot;: user.nom_famille,
-                &quot;firstname&quot;: user.prenom,
-                &quot;tel&quot;: user.tel,
-                &quot;birthdate&quot;: user.date_anniversaire,
-                &quot;address&quot;: user.adresse,
-                &quot;city&quot;: user.ville,
-                &quot;province&quot;: user.province,
-                &quot;postal_code&quot;: user.code_postal,
-                &quot;plan&quot;: user.forfait,
-            }
-            self.execute_non_query(insert_stmt, params)
-            return True
-
-        except Exception as e:
-            print(f&quot;Error creating user: {e}&quot;)
-            return False
-
-    def generate_id(self) -&gt; int:
-        &quot;&quot;&quot;
-        Uses execute_query() which opens/closes connection automatically.
-        &quot;&quot;&quot;
-        query = &quot;SELECT MAX(ID) as MAX_ID FROM CLIENTS&quot;
-        rows = self.execute_query(query)  # returns a list of dicts
-        max_id = rows[0][&quot;MAX_ID&quot;] if rows and rows[0][&quot;MAX_ID&quot;] else 0
-        return max_id + 1
-
-    def update_profile(self, email: str, data: dict) -&gt; bool:
-        # If you know you have all fields, this is easy
-        sql = &quot;&quot;&quot;
-            UPDATE CLIENTS
-            SET
-                NOM_FAMILLE = :nom_famille,
-                PRENOM = :prenom,
-                TEL = :tel,
-                DATE_ANNIVERSAIRE = :date_anniversaire,
-                ADRESSE = :adresse,
-                VILLE = :ville,
-                PROVINCE = :province,
-                CODE_POSTAL = :code_postal,
-                FORFAIT = :forfait
-            WHERE COURRIEL = :email
-        &quot;&quot;&quot;
-        params = {
-            &quot;nom_famille&quot;: data[&quot;nom_famille&quot;],
-            &quot;prenom&quot;: data[&quot;prenom&quot;],
-            &quot;tel&quot;: data[&quot;tel&quot;],
-            &quot;date_anniversaire&quot;: data[&quot;date_anniversaire&quot;],
-            &quot;adresse&quot;: data[&quot;adresse&quot;],
-            &quot;ville&quot;: data[&quot;ville&quot;],
-            &quot;province&quot;: data[&quot;province&quot;],
-            &quot;code_postal&quot;: data[&quot;code_postal&quot;],
-            &quot;forfait&quot;: data[&quot;forfait&quot;],
-            &quot;email&quot;: email,
-        }
-        try:
-            self.execute_non_query(sql, params)
-            return True
-        except Exception as e:
-            print(f&quot;Error updating profile: {e}&quot;)
-            return False</file><file path="backend/src/models/domain/user.py">from dataclasses import dataclass
-from datetime import date
-from typing import Optional
-
-
-@dataclass
-class User:
-    nom_famille: str
-    prenom: str
-    courriel: str
-    mot_de_passe: Optional[str] = None
-    tel: Optional[str] = None
-    date_anniversaire: Optional[date] = None
-    adresse: Optional[str] = None
-    ville: Optional[str] = None
-    province: Optional[str] = None
-    code_postal: Optional[str] = None
-    forfait: Optional[str] = None</file><file path="backend/src/models/schemas/movie.py">from pydantic import BaseModel, Field
-from typing import Optional, List
-from datetime import date
-
-
-class MovieResponse(BaseModel):
-    &quot;&quot;&quot;Modèle simplifié pour l&apos;affichage basique d&apos;un film&quot;&quot;&quot;
-
-    ID: Optional[int] = Field(None, description=&quot;Identifiant unique du film&quot;)
-    TITRE: str = Field(..., description=&quot;Titre du film&quot;)
-    ANNEE: Optional[int] = Field(None, ge=1888, le=2025, description=&quot;Année de sortie&quot;)
-    RESUME: Optional[str] = Field(None, description=&quot;Synopsis du film&quot;)
-    POSTER_URL: Optional[str] = Field(None, description=&quot;URL de l&apos;affiche du film&quot;)
-
-    class Config:
-        from_attributes = True
-        schema_extra = {
-            &quot;example&quot;: {
-                &quot;TITRE&quot;: &quot;Matrix&quot;,
-                &quot;ANNEE&quot;: 1999,
-                &quot;RESUME&quot;: &quot;Un programmeur découvre que le monde est une simulation...&quot;,
-                &quot;POSTER_URL&quot;: &quot;http://example.com/matrix.jpg&quot;,
-            }
-        }
-
-
-class MovieBase(BaseModel):
-    &quot;&quot;&quot;Modèle complet d&apos;un film avec toutes ses informations&quot;&quot;&quot;
-
-    ID: Optional[int] = Field(None, description=&quot;Identifiant unique du film&quot;)
-    TITRE: str = Field(..., description=&quot;Titre du film&quot;)
-    ANNEE: Optional[int] = Field(None, ge=1888, le=2025, description=&quot;Année de sortie&quot;)
-    LANGUE: Optional[str] = Field(None, description=&quot;Langue originale du film&quot;)
-    DUREE: Optional[int] = Field(None, gt=0, description=&quot;Durée en minutes&quot;)
-    RESUME: Optional[str] = Field(None, description=&quot;Synopsis du film&quot;)
-    ID_REALISATEUR: Optional[int] = Field(None, description=&quot;ID du réalisateur&quot;)
-    POSTER_URL: Optional[str] = Field(None, description=&quot;URL de l&apos;affiche du film&quot;)
-
-    # Relations (informations des tables jointes)
-    GENRES: Optional[List[str]] = Field(default=[], description=&quot;Liste des genres&quot;)
-    PAYS: Optional[List[str]] = Field(default=[], description=&quot;Pays de production&quot;)
-    SCENARISTES: Optional[List[str]] = Field(
-        default=[], description=&quot;Liste des scénaristes&quot;
-    )
-    ACTEURS: Optional[List[dict]] = Field(
-        default=[],
-        description=&quot;Liste des acteurs et leurs rôles&quot;,
-        example=[{&quot;id&quot;: 1, &quot;nom&quot;: &quot;Keanu Reeves&quot;, &quot;role&quot;: &quot;Neo&quot;}],
-    )
-    ANNONCES: Optional[List[str]] = Field(
-        default=[], description=&quot;URLs des bandes annonces&quot;
-    )
-
-    class Config:
-        from_attributes = True
-        schema_extra = {
-            &quot;example&quot;: {
-                &quot;ID&quot;: 1,
-                &quot;TITRE&quot;: &quot;Matrix&quot;,
-                &quot;ANNEE&quot;: 1999,
-                &quot;LANGUE&quot;: &quot;Anglais&quot;,
-                &quot;DUREE&quot;: 136,
-                &quot;RESUME&quot;: &quot;Un programmeur découvre que le monde est une simulation...&quot;,
-                &quot;ID_REALISATEUR&quot;: 1,
-                &quot;POSTER_URL&quot;: &quot;http://example.com/matrix.jpg&quot;,
-                &quot;GENRES&quot;: [&quot;Science Fiction&quot;, &quot;Action&quot;],
-                &quot;PAYS&quot;: [&quot;États-Unis&quot;],
-                &quot;SCENARISTES&quot;: [&quot;Lana Wachowski&quot;, &quot;Lilly Wachowski&quot;],
-                &quot;ACTEURS&quot;: [
-                    {&quot;id&quot;: 1, &quot;nom&quot;: &quot;Keanu Reeves&quot;, &quot;role&quot;: &quot;Neo&quot;},
-                    {&quot;id&quot;: 2, &quot;nom&quot;: &quot;Laurence Fishburne&quot;, &quot;role&quot;: &quot;Morpheus&quot;},
-                ],
-                &quot;BANDE_ANNONCE&quot;: [&quot;http://example.com/matrix-trailer.mp4&quot;],
-            }
-        }
-
-
-class MoviesPaginatedResponse(BaseModel):
-    &quot;&quot;&quot;Réponse paginée contenant une liste de films&quot;&quot;&quot;
-
-    items: List[MovieResponse] = Field(..., description=&quot;Liste des films&quot;)
-    total: int = Field(..., description=&quot;Nombre total de films&quot;)
-    page: int = Field(..., ge=1, description=&quot;Page actuelle&quot;)
-    per_page: int = Field(..., gt=0, description=&quot;Nombre d&apos;éléments par page&quot;)
-    total_pages: int = Field(..., ge=0, description=&quot;Nombre total de pages&quot;)
-
-    class Config:
-        schema_extra = {
-            &quot;example&quot;: {
-                &quot;items&quot;: [
-                    {
-                        &quot;TITRE&quot;: &quot;Matrix&quot;,
-                        &quot;ANNEE&quot;: 1999,
-                        &quot;RESUME&quot;: &quot;Un programmeur découvre que le monde est une simulation...&quot;,
-                        &quot;POSTER_URL&quot;: &quot;http://example.com/matrix.jpg&quot;,
-                    }
-                ],
-                &quot;total&quot;: 100,
-                &quot;page&quot;: 1,
-                &quot;per_page&quot;: 10,
-                &quot;total_pages&quot;: 10,
-            }
-        }
-
-
-class MovieRequest(BaseModel):
-    # Champs correspondant aux colonnes de la table FILMS
-    TITRE: Optional[str] = Field(None, description=&quot;Titre complet ou partiel du film&quot;)
-    ANNEE: Optional[int] = Field(None, ge=1888, le=2025, description=&quot;Année de sortie&quot;)
-
-    LANGUE: Optional[str] = Field(None, description=&quot;Langue du film&quot;)
-    DUREE_MIN: Optional[int] = Field(None, gt=0, description=&quot;Durée en minutes minimum&quot;)
-    DUREE_MAX: Optional[int] = Field(None, gt=0, description=&quot;Durée en minutes maximum&quot;)
-    RESUME: Optional[str] = Field(
-        None, description=&quot;Texte à rechercher dans le synopsis&quot;
-    )
-    # Champs pour les relations (tables de jonction)
-    GENRES_INCLUS: Optional[List[str]] = Field(
-        default=[], description=&quot;Liste des genres inclus&quot;
-    )
-    GENRES_EXCLUS: Optional[List[str]] = Field(
-        default=[], description=&quot;Liste des genres exclus&quot;
-    )
-
-    # Champs pour la pagination
-    page: int = Field(default=1, ge=1, description=&quot;Numéro de la page&quot;)
-    limit: int = Field(
-        default=10, ge=1, le=100, description=&quot;Nombre d&apos;éléments par page&quot;
-    )
-
-    class Config:
-        # Permet d&apos;utiliser les noms exacts des colonnes SQL
-        allow_population_by_field_name = True
-
-        # Exemple pour la documentation
-        schema_extra = {
-            &quot;example&quot;: {
-                &quot;TITRE&quot;: &quot;Matrix&quot;,
-                &quot;ANNEE&quot;: 1999,
-                &quot;LANGUE&quot;: &quot;Anglais&quot;,
-                &quot;DUREE_MIN&quot;: 120,
-                &quot;DUREE_MAX&quot;: 150,
-                &quot;RESUME&quot;: &quot;intelligence artificielle&quot;,
-                &quot;GENRES_INCLUS&quot;: [&quot;Science Fiction&quot;],
-                &quot;GENRES_EXCLUS&quot;: [&quot;Horreur&quot;],
-                &quot;page&quot;: 1,
-                &quot;limit&quot;: 10,
-            }
-        }</file><file path="backend/src/models/schemas/user.py">from pydantic import BaseModel, Field
-from typing import Optional, List
-from datetime import date
-
-
-class ClientBase(BaseModel):
-    nom_famille: str = Field(..., max_length=50)
-    prenom: str = Field(..., max_length=50)
-    courriel: str = Field(..., max_length=100)
-    tel: Optional[str] = Field(None, max_length=20)
-    date_anniversaire: Optional[date] = None
-    adresse: Optional[str] = Field(None, max_length=200)
-    ville: Optional[str] = Field(None, max_length=100)
-    province: Optional[str] = Field(None, max_length=2)
-    code_postal: Optional[str] = Field(None, max_length=7)
-    forfait: Optional[str] = Field(None, max_length=1)
-
-
-class ClientLogin(BaseModel):
-    courriel: str
-    mot_de_passe: str = Field(..., max_length=100)
-
-
-class ClientResponse(BaseModel):
-    nom_famille: str
-    prenom: str
-    courriel: str
-    tel: Optional[str]
-    date_anniversaire: Optional[date]
-    adresse: Optional[str]
-    ville: Optional[str]
-    province: Optional[str]
-    code_postal: Optional[str]
-    forfait: Optional[str]
-
-
-class ClientCreate(BaseModel):
-    nom_famille: str
-    prenom: str
-    courriel: str
-    mot_de_passe: str
-    tel: Optional[str]
-    date_anniversaire: Optional[date]
-    adresse: Optional[str]
-    ville: Optional[str]
-    province: Optional[str]
-    code_postal: Optional[str]
-    forfait: Optional[str]
-
-class ClientCreateResponse(BaseModel):
-    nom_famille: str
-    prenom: str
-    courriel: str
-    mot_de_passe: str
-    tel: Optional[str]
-    date_anniversaire: Optional[date]
-    adresse: Optional[str]
-    ville: Optional[str]
-    province: Optional[str]
-    code_postal: Optional[str]
-    forfait: Optional[str]
-
-class ClientUpdate(BaseModel):
-    nom_famille: Optional[str] = Field(None, max_length=50)
-    prenom: Optional[str] = Field(None, max_length=50)
-    courriel: Optional[str] = Field(None, max_length=100)
-    tel: Optional[str] = Field(None, max_length=20)
-    date_anniversaire: Optional[date] = None
-    adresse: Optional[str] = Field(None, max_length=200)
-    ville: Optional[str] = Field(None, max_length=100)
-    province: Optional[str] = Field(None, max_length=2)
-    code_postal: Optional[str] = Field(None, max_length=7)
-    mot_de_passe: Optional[str] = Field(None, max_length=100)
-    forfait: Optional[str] = Field(None, max_length=1)
-
-class TokenResponse(BaseModel):
-    token: str</file><file path="backend/src/services/cache.py">from datetime import datetime, timedelta
-from typing import Dict, Any, Optional
-
-
-class CacheService:
-    def __init__(self):
-        # Structure simple: { &quot;clé&quot;: {&quot;data&quot;: données, &quot;expiry&quot;: date_expiration} }
-        self.cache = {}
-
-    def get(self, key: str) -&gt; Optional[Any]:
-        &quot;&quot;&quot;Récupère une donnée du cache&quot;&quot;&quot;
-        if key in self.cache:
-            # Vérifie si la donnée n&apos;a pas expiré
-            if datetime.now() &lt; self.cache[key][&quot;expiry&quot;]:
-                return self.cache[key][&quot;data&quot;]
-            del self.cache[key]
-        return None
-
-    def set(self, key: str, data: Any, minutes: int = 30):
-        &quot;&quot;&quot;Stocke une donnée dans le cache pour X minutes&quot;&quot;&quot;
-        self.cache[key] = {
-            &quot;data&quot;: data,
-            &quot;expiry&quot;: datetime.now() + timedelta(minutes=minutes),
-        }
-
-    def delete(self, key: str):
-        &quot;&quot;&quot;Supprime une donnée du cache&quot;&quot;&quot;
-        if key in self.cache:
-            del self.cache[key]
-
-    def clear(self):
-        &quot;&quot;&quot;Vide tout le cache&quot;&quot;&quot;
-        self.cache.clear()</file><file path="backend/src/services/credits.py">from typing import Optional
-from db.repositories.credits import CreditsRepository
-
-class CreditsService:
-    def __init__(self):
-        self.repository = CreditsRepository()
-
-    def get_balance(self, client_id: int) -&gt; int:
-        row = self.repository.get_by_client_id(client_id)
-        if not row:
-            return 0
-        return row[&quot;BALANCE&quot;]
-
-    def add_credits(self, client_id: int, amount: int) -&gt; bool:
-        &quot;&quot;&quot;
-        Increase the user&apos;s BALANCE by &apos;amount&apos;.
-        &quot;&quot;&quot;
-        row = self.repository.get_by_client_id(client_id)
-        if not row:
-            self.repository.create_credits(client_id, initial_balance=0)
-            row = self.repository.get_by_client_id(client_id)
-
-        new_balance = row[&quot;BALANCE&quot;] + amount
-        self.repository.update_balance(row[&quot;ID&quot;], new_balance)
-        return True
-
-    def redeem_credits(self, client_id: int, amount: int) -&gt; bool:
-        &quot;&quot;&quot;
-        Decrease the user&apos;s BALANCE by &apos;amount&apos;.
-        If you want to prevent negative balances, check before updating.
-        &quot;&quot;&quot;
-        row = self.repository.get_by_client_id(client_id)
-        if not row:
-            return False 
-
-        current_balance = row[&quot;BALANCE&quot;]
-        if current_balance &lt; amount:
-            return False
-
-        new_balance = current_balance - amount
-        self.repository.update_balance(row[&quot;ID&quot;], new_balance)
-        return True</file><file path="backend/src/services/movies.py"># backend/src/services/user.py
-from typing import Dict, List, Optional, Tuple
-
-from db.repositories.movies import MoviesRepository
-from services.cache import CacheService
-
-
-class MovieService:
-    def __init__(self):
-        self.repository = MoviesRepository()
-        self.cache = CacheService()
-
-    def get_movie(self, movie_id: int) -&gt; Optional[Dict]:
-        cache_key = f&quot;movie_{movie_id}&quot;
-        if cached := self.cache.get(cache_key):
-            return cached
-
-        sql_result = self.repository.get_film_by_id(movie_id)
-        if sql_result:
-            self.cache.set(cache_key, sql_result, 30)
-        return sql_result
-
-    def _create_cache_key(self, properties: Dict) -&gt; str:
-        parameter_hashable = {}
-        for key, value in properties.items():
-            if isinstance(value, list):
-                parameter_hashable[key] = tuple(sorted(value))
-            else:
-                parameter_hashable[key] = value
-        params_string = str((sorted(parameter_hashable.items())))
-        return f&quot;film_search{hash(params_string)}&quot;
-
-    def search_movies(self, properties: Dict) -&gt; List[Dict]:
-        search_params = properties.dict()
-        cache_key = self._create_cache_key(search_params)
-        cache_result = self.cache.get(cache_key)
-        if cache_result:
-            return cache_result
-        result = self.repository.search_films(properties.dict())
-        if not result:
-            return []
-        self.cache.set(cache_key, result, 30)
-
-        return result
-
-    def get_suggestions(self, term: str) -&gt; List[Dict]:
-        result = self.repository.get_suggestion(term)
-        return result
-
-    def get_genres(self) -&gt; List[str]:
-        result = self.repository.get_genres()
-        print(result)
-        return result</file><file path="backend/src/services/users.py"># backend/src/services/user.py
-from typing import Tuple, Dict, Optional
-from db.repositories.users import UserRepository
-from services.cache import CacheService
-
-
-class UserService:
-    def __init__(self):
-        self.repository = UserRepository()
-        self.cache = CacheService()
-
-    def authenticate(self, email: str, password: str) -&gt; Tuple[Dict, bool]:
-        client = self.repository.get_by_email_password(email)
-        if client and client[&quot;MOT_DE_PASSE&quot;] == password:
-            return client, True
-        return None, False
-
-    def get_profile(self, email: str) -&gt; Optional[Dict]:
-        cache_key = f&quot;client_{email}&quot;
-        if cached := self.cache.get(cache_key):
-            return cached
-
-        sql_result = self.repository.get_by_email(email)
-        result = self.sql_to_ClientBase(sql_result) if sql_result else None
-        if result:
-            self.cache.set(cache_key, result, 30)
-        return result
-
-    def sql_to_ClientBase(self, sql_result: Dict) -&gt; Dict:
-        return {
-            &quot;nom_famille&quot;: sql_result[&quot;NOM_FAMILLE&quot;],
-            &quot;prenom&quot;: sql_result[&quot;PRENOM&quot;],
-            &quot;courriel&quot;: sql_result[&quot;COURRIEL&quot;],
-            &quot;tel&quot;: sql_result[&quot;TEL&quot;],
-            &quot;date_anniversaire&quot;: sql_result[&quot;DATE_ANNIVERSAIRE&quot;],
-            &quot;adresse&quot;: sql_result[&quot;ADRESSE&quot;],
-            &quot;ville&quot;: sql_result[&quot;VILLE&quot;],
-            &quot;province&quot;: sql_result[&quot;PROVINCE&quot;],
-            &quot;code_postal&quot;: sql_result[&quot;CODE_POSTAL&quot;],
-            &quot;forfait&quot;: sql_result[&quot;FORFAIT&quot;],
-        }
-    
-    def update_profile(self, email: str, updated_data: dict) -&gt; bool:
-        existing_user = self.repository.get_by_email(email)
-        if not existing_user:
-            return False
-        current_profile = self.sql_to_ClientBase(existing_user)
-        merged_data = {**current_profile, **updated_data} 
-        return self.repository.update_profile(email, merged_data)
-
-
-    def register_client(self, user) -&gt; bool:
-        return self.repository.create(user)</file><file path="backend/src/.dockerignore">__pycache__
-*.pyc
-*.pyo
-*.pyd
-.Python
-pip-log.txt
-pip-delete-this-directory.txt
-.tox
-.coverage
-.coverage.*
-.cache
-nosetests.xml
-coverage.xml
-*.cover
-*.log
-.pytest_cache
-.venv
-env/
-venv/
-ENV/</file><file path="backend/src/.env">ORACLE_USER=&apos;EQUIPE103&apos;
-ORACLE_PASSWORD=&apos;qBxX3pp7&apos;
-ORACLE_HOST=bdgti660.ens.ad.etsmtl.ca
-ORACLE_PORT=1521
-ORACLE_SERVICE=orclpdb.ens.ad.etsmtl.ca
-SECRET_KEY=mysecretpassword
-ALGORITHM=&quot;HS256&quot;</file><file path="backend/src/Dockerfile"># Utiliser une image Python officielle
-FROM python:3.11-slim
-
-# Installer les dépendances système nécessaires
-RUN apt-get update &amp;&amp; apt-get install -y \
-    libaio1 \
-    gcc \
-    wget \
-    unzip \
-    &amp;&amp; rm -rf /var/lib/apt/lists/*
-
-# Créer le répertoire pour le client Oracle
-RUN mkdir -p /opt/oracle
-WORKDIR /opt/oracle
-
-# Télécharger et installer le client Oracle Instant Client
-RUN wget https://download.oracle.com/otn_software/linux/instantclient/218000/instantclient-basic-linux.x64-21.8.0.0.0dbru.zip \
-    &amp;&amp; unzip instantclient-basic-linux.x64-21.8.0.0.0dbru.zip \
-    &amp;&amp; rm instantclient-basic-linux.x64-21.8.0.0.0dbru.zip \
-    &amp;&amp; sh -c &quot;echo /opt/oracle/instantclient_21_8 &gt; /etc/ld.so.conf.d/oracle-instantclient.conf&quot; \
-    &amp;&amp; ldconfig
-
-# Définir les variables d&apos;environnement pour Oracle
-ENV ORACLE_HOME=/opt/oracle/instantclient_21_8
-ENV LD_LIBRARY_PATH=/opt/oracle/instantclient_21_8:$LD_LIBRARY_PATH
-ENV PATH=/opt/oracle/instantclient_21_8:$PATH
-
-# Créer et définir le répertoire de travail
-WORKDIR /app
-
-# Copier les fichiers de requirements
-COPY requirements.txt .
-
-# Installer les dépendances Python
-RUN pip install --no-cache-dir -r requirements.txt
-
-# Copier le reste des fichiers de l&apos;application
-COPY . .
-
-# Exposer le port sur lequel FastAPI va tourner
-EXPOSE 8000
-
-# Commande pour démarrer l&apos;application
-CMD [&quot;uvicorn&quot;, &quot;main:app&quot;, &quot;--host&quot;, &quot;0.0.0.0&quot;, &quot;--port&quot;, &quot;8000&quot;, &quot;--reload&quot;]</file><file path="backend/src/main.py">from fastapi import FastAPI
-from fastapi.middleware.cors import CORSMiddleware
-from core.config import get_app_config
-from api.routes import auth, movies, users, credits
-
-
-def create_app() -&gt; FastAPI:
-    config = get_app_config()
-
-    app = FastAPI(
-        title=&quot;Film Location API&quot;,
-        description=&quot;API pour la location de films&quot;,
-        version=&quot;1.0.0&quot;,
-    )
-
-    # Configuration CORS
-    app.add_middleware(
-        CORSMiddleware,
-        allow_origins=[&quot;*&quot;],
-        allow_credentials=True,
-        allow_methods=[&quot;*&quot;],
-        allow_headers=[&quot;*&quot;],
-    )
-
-    # Inclusion des routers
-    app.include_router(auth.router, prefix=&quot;/auth&quot;, tags=[&quot;Authentication&quot;])
-
-    app.include_router(movies.router, prefix=&quot;/movies&quot;, tags=[&quot;Movies&quot;])
-
-    app.include_router(users.router, prefix=&quot;/users&quot;, tags=[&quot;Users&quot;])
-
-    app.include_router(credits.router, prefix=&quot;/credits&quot;, tags=[&quot;Credits&quot;])
-
-    @app.get(&quot;/health&quot;)
-    async def health_check():
-        return {&quot;status&quot;: &quot;healthy&quot;}
-
-    return app
-
-
-app = create_app()</file><file path="backend/src/repomix-output.xml">&lt;repomix&gt;This file is a merged representation of the entire codebase, combining all repository files into a single document.
-Generated by Repomix on: 2025-02-20T21:50:08.901Z&lt;directory_structure&gt;api/
-  routes/
-    auth.py
-    dependencies.py
-    movies.py
-    users.py
-core/
-  config.py
-  security.py
-db/
-  repositories/
-    base.py
-    movies.py
-    users.py
-models/
-  domain/
-    user.py
-  schemas/
-    movie.py
-    user.py
-services/
-  cache.py
-  movies.py
-  users.py
-.dockerignore
-Dockerfile
-main.py
-requirements.txt&lt;/directory_structure&gt;&lt;files&gt;This section contains the contents of the repository&amp;apos;s files.&lt;file path=&quot;api/routes/auth.py&quot;&gt;# backend/src/api/routes/auth.py
-from fastapi import APIRouter, Depends, HTTPException
-from backend.src.models.schemas.user import ClientLogin, TokenResponse
-from backend.src.services.users import UserService
-from backend.src.core.security import create_token
-
-router = APIRouter()
-
-
-@router.post(&amp;quot;/login&amp;quot;, response_model=TokenResponse)
-async def login_client(credentials: ClientLogin):
-    service = UserService()
-    client, is_correct = service.authenticate(
-        credentials.courriel, credentials.mot_de_passe
-    )
-    if not client or not is_correct:
-        raise HTTPException(status_code=401, detail=&amp;quot;Identifiants invalides&amp;quot;)
-    token = create_token(credentials.courriel)
-    return TokenResponse(token=token)&lt;/file&gt;&lt;file path=&quot;api/routes/dependencies.py&quot;&gt;from fastapi import Depends, HTTPException, status
-from fastapi.security import HTTPBearer, HTTPAuthorizationCredentials
-from backend.src.core.security import verify_token, get_email_from_token
-
-security = HTTPBearer()
-
-
-def get_current_user(
-    credentials: HTTPAuthorizationCredentials = Depends(security),
-) -&amp;gt; str:
-    &amp;quot;&amp;quot;&amp;quot;
-    Dépendance FastAPI pour récupérer l&amp;apos;utilisateur actuel à partir du token JWT
-    &amp;quot;&amp;quot;&amp;quot;
-    try:
-        token = credentials.credentials
-        if not verify_token(token):
-            raise HTTPException(
-                status_code=status.HTTP_401_UNAUTHORIZED, detail=&amp;quot;Token invalide&amp;quot;
-            )
-
-        email = get_email_from_token(token)
-        if not email:
-            raise HTTPException(
-                status_code=status.HTTP_401_UNAUTHORIZED, detail=&amp;quot;Token invalide&amp;quot;
-            )
-
-        return email
-    except Exception as e:
-        raise HTTPException(
-            status_code=status.HTTP_401_UNAUTHORIZED, detail=&amp;quot;Non autorisé&amp;quot;
-        )&lt;/file&gt;&lt;file path=&quot;api/routes/movies.py&quot;&gt;from fastapi import APIRouter, Depends, HTTPException
-from backend.src.models.schemas.movie import (
-    MovieBase,
-    MovieResponse,
-    MoviesPaginatedResponse,
-    MovieRequest,
-)
-from backend.src.services.movies import MovieService
-from backend.src.core.security import create_token, verify_token, get_email_from_token
-
-router = APIRouter()
-service = MovieService()
-
-
-@router.post(&amp;quot;/movies&amp;quot;, response_model=MoviesPaginatedResponse)
-async def search_movies(movie: MovieRequest):
-    &amp;quot;&amp;quot;&amp;quot;Search for movies&amp;quot;&amp;quot;&amp;quot;
-    result = service.search_movies(movie)
-    if not result:
-        raise HTTPException(status_code=401, detail=&amp;quot;No movies found&amp;quot;)
-    return result
-
-
-@router.get(&amp;quot;/movies/{id}&amp;quot;, response_model=MovieBase)
-async def get_movie(id: int):
-    &amp;quot;&amp;quot;&amp;quot;Get a movie by its ID&amp;quot;&amp;quot;&amp;quot;
-    result = service.get_movie(id)
-    if not result:
-        raise HTTPException(status_code=401, detail=&amp;quot;Movie not found&amp;quot;)
-    return result&lt;/file&gt;&lt;file path=&quot;api/routes/users.py&quot;&gt;from fastapi import APIRouter, Depends, HTTPException
-from backend.src.models.schemas.user import ClientLogin, TokenResponse, ClientBase, ClientResponse
-from backend.src.services.users import UserService
-from backend.src.core.security import create_token, verify_token, get_email_from_token
-from backend.src.api.routes.dependencies import get_current_user
-
-router = APIRouter()
-service = UserService()
-
-
-@router.get(
-    &amp;quot;/myaccount&amp;quot;,
-    tags=[&amp;quot;Client&amp;quot;],
-    summary=&amp;quot;Get client details&amp;quot;,
-    description=&amp;quot;Retrieve details of a client by their email&amp;quot;,
-    response_model=ClientBase,
-)
-async def get_current_client(current_user: str = Depends(get_current_user)):
-    &amp;quot;&amp;quot;&amp;quot;Récupère le profil du client connecté&amp;quot;&amp;quot;&amp;quot;
-    client = service.get_profile(current_user)
-    if not client:
-        raise HTTPException(status_code=401, detail=&amp;quot;Client non trouvé&amp;quot;)
-    return client
-
-
-@router.post(&amp;quot;/auth/register&amp;quot;)
-async def register_client(client: ClientBase):
-    &amp;quot;&amp;quot;&amp;quot;Enregistre un nouveau client&amp;quot;&amp;quot;&amp;quot;
-    result = service.register_client(ClientBase)
-    if not result:
-        raise HTTPException(status_code=401, detail=&amp;quot;L&amp;apos;enregistrement a échoué&amp;quot;)
-    return result&lt;/file&gt;&lt;file path=&quot;core/config.py&quot;&gt;from typing import List
-from dataclasses import dataclass, field
-import os
-from dotenv import load_dotenv
-
-load_dotenv()
-
-
-@dataclass
-class DatabaseConfig:
-    host: str
-    port: str
-    user: str
-    password: str
-    service_name: str
-
-
-@dataclass
-class AppConfig:
-    # API Config
-    API_VERSION: str = &amp;quot;1.0.0&amp;quot;
-    DEBUG: bool = False
-
-    # Security
-    SECRET_KEY: str = os.getenv(&amp;quot;SECRET_KEY&amp;quot;, &amp;quot;your-secret-key&amp;quot;)
-    ALGORITHM: str = &amp;quot;HS256&amp;quot;
-    ACCESS_TOKEN_EXPIRE_MINUTES: int = 30
-
-    # Database
-    DB_HOST: str = os.getenv(&amp;quot;ORACLE_HOST&amp;quot;)
-    DB_PORT: str = os.getenv(&amp;quot;ORACLE_PORT&amp;quot;)
-    DB_USER: str = os.getenv(&amp;quot;ORACLE_USER&amp;quot;)
-    DB_PASSWORD: str = os.getenv(&amp;quot;ORACLE_PASSWORD&amp;quot;)
-    DB_SERVICE: str = os.getenv(&amp;quot;ORACLE_SERVICE&amp;quot;)
-
-    class Config:
-        env_file = &amp;quot;.env&amp;quot;
-
-
-def get_app_config() -&amp;gt; AppConfig:
-    return AppConfig()
-
-
-def get_database_config() -&amp;gt; DatabaseConfig:
-    return DatabaseConfig(
-        host=os.getenv(&amp;quot;ORACLE_HOST&amp;quot;),
-        port=os.getenv(&amp;quot;ORACLE_PORT&amp;quot;),
-        user=os.getenv(&amp;quot;ORACLE_USER&amp;quot;),
-        password=os.getenv(&amp;quot;ORACLE_PASSWORD&amp;quot;),
-        service_name=os.getenv(&amp;quot;ORACLE_SERVICE&amp;quot;),
-    )&lt;/file&gt;&lt;file path=&quot;core/security.py&quot;&gt;from datetime import datetime, timedelta
-import jwt
-from dotenv import load_dotenv
-import os
-
-load_dotenv()
-# Clé secrète simple (à mettre dans .env en production)
-load_dotenv()
-SECRET_KEY = os.getenv(&amp;quot;SECRET_KEY&amp;quot;)
-ALGORITHM = os.getenv(&amp;quot;ALGORITHM&amp;quot;)
-
-
-if ALGORITHM is None:
-    ALGORITHM = &amp;quot;HS256&amp;quot;
-
-
-def create_token(email: str) -&amp;gt; str:
-    &amp;quot;&amp;quot;&amp;quot;Créer un token simple&amp;quot;&amp;quot;&amp;quot;
-    data = {
-        &amp;quot;user_email&amp;quot;: email,
-        &amp;quot;expires&amp;quot;: str(datetime.utcnow() + timedelta(minutes=30)),
-    }
-
-    token = jwt.encode(data, SECRET_KEY, algorithm=ALGORITHM)
-    return token
-
-
-def verify_token(token: str) -&amp;gt; bool:
-    &amp;quot;&amp;quot;&amp;quot;Vérifier si le token est valide&amp;quot;&amp;quot;&amp;quot;
-    try:
-        jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])
-        return True
-    except:
-        return False
-
-
-def get_email_from_token(token: str) -&amp;gt; str:
-    &amp;quot;&amp;quot;&amp;quot;Récupérer l&amp;apos;email du token&amp;quot;&amp;quot;&amp;quot;
-    try:
-        return jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])[&amp;quot;user_email&amp;quot;]
-    except:
-        return None&lt;/file&gt;&lt;file path=&quot;db/repositories/base.py&quot;&gt;from typing import Optional, List, Dict, Any
-import cx_Oracle
-from backend.src.core.config import get_database_config
-
-
-class BaseRepository:
-    def __init__(self):
-        self.config = get_database_config()
-        self.conn = None
-        self.cur = None
-
-    def connect(self):
-        try:
-            dsn = cx_Oracle.makedsn(
-                host=self.config.host,
-                port=self.config.port,
-                service_name=self.config.service_name,
-            )
-            self.conn = cx_Oracle.connect(
-                user=self.config.user, password=self.config.password, dsn=dsn
-            )
-            self.cur = self.conn.cursor()
-        except Exception as e:
-            print(f&amp;quot;Error connecting to database: {e}&amp;quot;)
-            raise
-
-    def disconnect(self):
-        if self.cur:
-            self.cur.close()
-        if self.conn:
-            self.conn.close()
-
-    def execute_query(self, query: str, params: Dict[str, Any] = None) -&amp;gt; List[Dict]:
-        try:
-            self.connect()
-            self.cur.execute(query, params or {})
-            columns = [col[0] for col in self.cur.description]
-            return [dict(zip(columns, row)) for row in self.cur.fetchall()]
-        finally:
-            self.disconnect()&lt;/file&gt;&lt;file path=&quot;db/repositories/movies.py&quot;&gt;from typing import Optional, Dict
-from backend.src.db.repositories.base import BaseRepository
-
-
-class MoviesRepository(BaseRepository):
-
-    def search_films(self, criteria: dict) -&amp;gt; Dict:
-        &amp;quot;&amp;quot;&amp;quot;
-        Recherche des films selon plusieurs critères
-        Retourne un format compatible avec MoviesPaginatedResponse
-        &amp;quot;&amp;quot;&amp;quot;
-        try:
-            self.connect()
-
-            conditions = []
-            params = {}
-
-            # Recherche par titre
-            if criteria.get(&amp;quot;TITRE&amp;quot;):
-                conditions.append(&amp;quot;UPPER(F.TITRE) LIKE UPPER(:titre)&amp;quot;)
-                params[&amp;quot;titre&amp;quot;] = f&amp;quot;%{criteria[&amp;apos;TITRE&amp;apos;]}%&amp;quot;
-
-            # Recherche par année
-            if criteria.get(&amp;quot;ANNEE_MIN&amp;quot;):
-                conditions.append(&amp;quot;F.ANNEE &amp;gt;= :annee_min&amp;quot;)
-                params[&amp;quot;annee_min&amp;quot;] = criteria[&amp;quot;ANNEE_MIN&amp;quot;]
-            if criteria.get(&amp;quot;ANNEE_MAX&amp;quot;):
-                conditions.append(&amp;quot;F.ANNEE &amp;lt;= :annee_max&amp;quot;)
-                params[&amp;quot;annee_max&amp;quot;] = criteria[&amp;quot;ANNEE_MAX&amp;quot;]
-
-            # Recherche par langue
-            if criteria.get(&amp;quot;LANGUE&amp;quot;):
-                conditions.append(&amp;quot;UPPER(F.LANGUE) = UPPER(:langue)&amp;quot;)
-                params[&amp;quot;langue&amp;quot;] = criteria[&amp;quot;LANGUE&amp;quot;]
-
-            # Recherche par durée
-            if criteria.get(&amp;quot;DUREE_MIN&amp;quot;):
-                conditions.append(&amp;quot;F.DUREE &amp;gt;= :duree_min&amp;quot;)
-                params[&amp;quot;duree_min&amp;quot;] = criteria[&amp;quot;DUREE_MIN&amp;quot;]
-            if criteria.get(&amp;quot;DUREE_MAX&amp;quot;):
-                conditions.append(&amp;quot;F.DUREE &amp;lt;= :duree_max&amp;quot;)
-                params[&amp;quot;duree_max&amp;quot;] = criteria[&amp;quot;DUREE_MAX&amp;quot;]
-
-            # Recherche dans le résumé
-            if criteria.get(&amp;quot;RESUME&amp;quot;):
-                conditions.append(&amp;quot;UPPER(F.RESUME) LIKE UPPER(:resume)&amp;quot;)
-                params[&amp;quot;resume&amp;quot;] = f&amp;quot;%{criteria[&amp;apos;RESUME&amp;apos;]}%&amp;quot;
-
-            # Genres à inclure
-            if criteria.get(&amp;quot;GENRES_INCLUS&amp;quot;):
-                genres_inclus = criteria[&amp;quot;GENRES_INCLUS&amp;quot;]
-                if isinstance(genres_inclus, str):
-                    genres_inclus = [genres_inclus]
-                for i, genre in enumerate(genres_inclus):
-                    param_name = f&amp;quot;genre_inclus_{i}&amp;quot;
-                    conditions.append(
-                        f&amp;quot;&amp;quot;&amp;quot;
-                        EXISTS (
-                            SELECT 1 FROM FILM_GENRE FG
-                            JOIN GENRES G ON FG.ID_GENRE = G.ID
-                            WHERE FG.ID_FILM = F.ID 
-                            AND UPPER(G.NOM) = UPPER(:{param_name})
-                        )
-                    &amp;quot;&amp;quot;&amp;quot;
-                    )
-                    params[param_name] = genre
-
-            # Genres à exclure
-            if criteria.get(&amp;quot;GENRES_EXCLUS&amp;quot;):
-                genres_exclus = criteria[&amp;quot;GENRES_EXCLUS&amp;quot;]
-                if isinstance(genres_exclus, str):
-                    genres_exclus = [genres_exclus]
-                for i, genre in enumerate(genres_exclus):
-                    param_name = f&amp;quot;genre_exclus_{i}&amp;quot;
-                    conditions.append(
-                        f&amp;quot;&amp;quot;&amp;quot;
-                        NOT EXISTS (
-                            SELECT 1 FROM FILM_GENRE FG
-                            JOIN GENRES G ON FG.ID_GENRE = G.ID
-                            WHERE FG.ID_FILM = F.ID 
-                            AND UPPER(G.NOM) = UPPER(:{param_name})
-                        )
-                    &amp;quot;&amp;quot;&amp;quot;
-                    )
-                    params[param_name] = genre
-
-            # Combine all conditions
-            where_clause = &amp;quot; AND &amp;quot;.join(conditions) if conditions else &amp;quot;1=1&amp;quot;
-
-            # Count total records
-            count_query = f&amp;quot;&amp;quot;&amp;quot;
-                SELECT COUNT(DISTINCT F.ID) 
-                FROM FILMS F 
-                WHERE {where_clause}
-            &amp;quot;&amp;quot;&amp;quot;
-            self.cur.execute(count_query, params)
-            total_count = self.cur.fetchone()[0]
-
-            # Pagination parameters
-            page = criteria.get(&amp;quot;page&amp;quot;, 1)
-            per_page = criteria.get(&amp;quot;limit&amp;quot;, 10)
-            offset = (page - 1) * per_page
-
-            # Main query with pagination
-            main_query = f&amp;quot;&amp;quot;&amp;quot;
-                SELECT * FROM (
-                    SELECT a.*, ROWNUM rnum FROM (
-                        SELECT DISTINCT 
-                            F.ID,
-                            F.TITRE,
-                            F.ANNEE,
-                            F.RESUME,
-                            F.POSTER_URL
-                        FROM FILMS F
-                        WHERE {where_clause}
-                        ORDER BY F.TITRE
-                    ) a WHERE ROWNUM &amp;lt;= :upper_limit
-                ) WHERE rnum &amp;gt; :lower_limit
-            &amp;quot;&amp;quot;&amp;quot;
-
-            params[&amp;quot;upper_limit&amp;quot;] = offset + per_page
-            params[&amp;quot;lower_limit&amp;quot;] = offset
-
-            # Execute main query
-            self.cur.execute(main_query, params)
-
-            # Process results
-            results = []
-            for row in self.cur.fetchall():
-                movie = {
-                    &amp;quot;ID&amp;quot;: row[0],
-                    &amp;quot;TITRE&amp;quot;: row[1],
-                    &amp;quot;ANNEE&amp;quot;: row[2],
-                    &amp;quot;RESUME&amp;quot;: str(row[3]) if row[3] else None,
-                    &amp;quot;POSTER_URL&amp;quot;: row[4],
-                }
-                results.append(movie)
-
-            # Calculate total pages
-            total_pages = (total_count + per_page - 1) // per_page
-
-            return {
-                &amp;quot;items&amp;quot;: results,
-                &amp;quot;total&amp;quot;: total_count,
-                &amp;quot;page&amp;quot;: page,
-                &amp;quot;per_page&amp;quot;: per_page,
-                &amp;quot;total_pages&amp;quot;: total_pages,
-            }
-
-        except Exception as e:
-            print(f&amp;quot;Error searching films: {e}&amp;quot;)
-            raise
-        finally:
-            self.disconnect()
-
-    def get_film_by_id(self, film_id: int) -&amp;gt; Optional[Dict]:
-        &amp;quot;&amp;quot;&amp;quot;
-        Récupère les détails d&amp;apos;un film par son ID
-        &amp;quot;&amp;quot;&amp;quot;
-        try:
-            self.connect()
-            # Requête principale pour les informations de base du film
-            query = &amp;quot;&amp;quot;&amp;quot;
-                SELECT 
-                    F.ID,
-                    F.TITRE,
-                    F.ANNEE,
-                    F.LANGUE,
-                    F.DUREE,
-                    F.RESUME,
-                    F.POSTER_URL,
-                    F.ID_REALISATEUR
-                FROM FILMS F
-                WHERE F.ID = :film_id
-            &amp;quot;&amp;quot;&amp;quot;
-
-            self.cur.execute(query, {&amp;quot;film_id&amp;quot;: film_id})
-            result = self.cur.fetchone()
-
-            if not result:
-                return None
-
-            # Création du dictionnaire de base
-            film_dict = {
-                &amp;quot;ID&amp;quot;: result[0],
-                &amp;quot;TITRE&amp;quot;: result[1],
-                &amp;quot;ANNEE&amp;quot;: result[2],
-                &amp;quot;LANGUE&amp;quot;: result[3],
-                &amp;quot;DUREE&amp;quot;: result[4],
-                &amp;quot;RESUME&amp;quot;: str(result[5]),
-                &amp;quot;POSTER_URL&amp;quot;: result[6],
-                &amp;quot;ID_REALISATEUR&amp;quot;: result[7],
-            }
-
-            # Requête séparée pour les genres
-            genres_query = &amp;quot;&amp;quot;&amp;quot;
-                SELECT G.NOM
-                FROM FILM_GENRE FG
-                JOIN GENRES G ON FG.ID_GENRE = G.ID
-                WHERE FG.ID_FILM = :film_id
-            &amp;quot;&amp;quot;&amp;quot;
-            self.cur.execute(genres_query, {&amp;quot;film_id&amp;quot;: film_id})
-            film_dict[&amp;quot;GENRES&amp;quot;] = [row[0] for row in self.cur.fetchall()]
-
-            # Requête séparée pour les pays
-            pays_query = &amp;quot;&amp;quot;&amp;quot;
-                SELECT P.NOM
-                FROM FILM_PAYS FP
-                JOIN PAYS P ON FP.ID_PAYS = P.ID
-                WHERE FP.ID_FILM = :film_id
-            &amp;quot;&amp;quot;&amp;quot;
-            self.cur.execute(pays_query, {&amp;quot;film_id&amp;quot;: film_id})
-            film_dict[&amp;quot;PAYS&amp;quot;] = [row[0] for row in self.cur.fetchall()]
-
-            # Requête séparée pour les scénaristes
-            scenaristes_query = &amp;quot;&amp;quot;&amp;quot;
-                SELECT S.NOM
-                FROM FILM_SCENARISTES FS
-                JOIN SCENARISTES S ON FS.ID_SCENARISTE = S.ID
-                WHERE FS.ID_FILM = :film_id
-            &amp;quot;&amp;quot;&amp;quot;
-            self.cur.execute(scenaristes_query, {&amp;quot;film_id&amp;quot;: film_id})
-            film_dict[&amp;quot;SCENARISTES&amp;quot;] = [row[0] for row in self.cur.fetchall()]
-
-            # Requête séparée pour les acteurs et leurs rôles
-            actors_query = &amp;quot;&amp;quot;&amp;quot;
-                SELECT 
-                    P.ID,
-                    P.NOM,
-                    R.PERSONNAGE
-                FROM ROLES R
-                JOIN PERSONNES P ON R.ID_ACTEUR = P.ID
-                WHERE R.ID_FILM = :film_id
-            &amp;quot;&amp;quot;&amp;quot;
-
-            self.cur.execute(actors_query, {&amp;quot;film_id&amp;quot;: film_id})
-            film_dict[&amp;quot;ACTEURS&amp;quot;] = [
-                {&amp;quot;id&amp;quot;: row[0], &amp;quot;nom&amp;quot;: row[1], &amp;quot;role&amp;quot;: row[2]}
-                for row in self.cur.fetchall()
-            ]
-
-            # Requête pour récupérer les bandes annonces
-            trailers_query = &amp;quot;&amp;quot;&amp;quot;
-                SELECT URL
-                FROM ANNONCES
-                WHERE ID_FILM = :film_id
-                ORDER BY ID
-            &amp;quot;&amp;quot;&amp;quot;
-            self.cur.execute(trailers_query, {&amp;quot;film_id&amp;quot;: film_id})
-            film_dict[&amp;quot;ANNONCES&amp;quot;] = [row[0] for row in self.cur.fetchall()]
-
-            return film_dict
-
-        except Exception as e:
-            print(f&amp;quot;Error getting film by id: {e}&amp;quot;)
-            raise
-        finally:
-            self.disconnect()&lt;/file&gt;&lt;file path=&quot;db/repositories/users.py&quot;&gt;from typing import Optional, Dict
-from backend.src.db.repositories.base import BaseRepository
-from backend.src.models.domain.user import User
-
-
-class UserRepository(BaseRepository):
-    def get_by_email(self, email: str) -&amp;gt; Optional[Dict]:
-        query = &amp;quot;&amp;quot;&amp;quot;
-            SELECT NOM_FAMILLE, PRENOM, COURRIEL, TEL, DATE_ANNIVERSAIRE, ADRESSE, VILLE, PROVINCE, CODE_POSTAL, FORFAIT FROM CLIENTS 
-            WHERE COURRIEL = :email
-        &amp;quot;&amp;quot;&amp;quot;
-        results = self.execute_query(query, {&amp;quot;email&amp;quot;: email})
-        print(results)
-        return results[0] if results else None
-
-    def get_by_email_password(self, email: str) -&amp;gt; Optional[Dict]:
-        query = &amp;quot;&amp;quot;&amp;quot;
-            SELECT NOM_FAMILLE, PRENOM, MOT_DE_PASSE 
-            FROM CLIENTS 
-            WHERE COURRIEL = :email
-        &amp;quot;&amp;quot;&amp;quot;
-        results = self.execute_query(query, {&amp;quot;email&amp;quot;: email})
-
-        return results[0] if results else None
-
-    def create(self, user: User) -&amp;gt; bool:
-        try:
-            self.connect()
-            self.cur.execute(
-                &amp;quot;&amp;quot;&amp;quot;
-                INSERT INTO CLIENTS (
-                    ID, COURRIEL, MOT_DE_PASSE, NOM_FAMILLE, 
-                    PRENOM, TEL, DATE_ANNIVERSAIRE, ADRESSE, 
-                    VILLE, PROVINCE, CODE_POSTAL, FORFAIT
-                ) VALUES (
-                    :id, :email, :password, :lastname,
-                    :firstname, :tel, :birthdate, :address,
-                    :city, :province, :postal_code, :plan
-                )
-            &amp;quot;&amp;quot;&amp;quot;,
-                {
-                    &amp;quot;id&amp;quot;: self.generate_id(),
-                    &amp;quot;email&amp;quot;: user.courriel,
-                    &amp;quot;password&amp;quot;: user.mot_de_passe,
-                    &amp;quot;lastname&amp;quot;: user.nom_famille,
-                    &amp;quot;firstname&amp;quot;: user.prenom,
-                    &amp;quot;tel&amp;quot;: user.tel,
-                    &amp;quot;birthdate&amp;quot;: user.date_anniversaire,
-                    &amp;quot;address&amp;quot;: user.adresse,
-                    &amp;quot;city&amp;quot;: user.ville,
-                    &amp;quot;province&amp;quot;: user.province,
-                    &amp;quot;postal_code&amp;quot;: user.code_postal,
-                    &amp;quot;plan&amp;quot;: user.forfait,
-                },
-            )
-            self.conn.commit()
-            return True
-        except Exception as e:
-            print(f&amp;quot;Error creating user: {e}&amp;quot;)
-            return False
-        finally:
-            self.disconnect()
-
-    def generate_id(self) -&amp;gt; int:
-        query = &amp;quot;&amp;quot;&amp;quot;
-            SELECT MAX(ID) FROM CLIENTS
-        &amp;quot;&amp;quot;&amp;quot;
-        results = self.execute_query(query)
-        return results[0][&amp;quot;MAX(ID)&amp;quot;] + 1&lt;/file&gt;&lt;file path=&quot;models/domain/user.py&quot;&gt;from dataclasses import dataclass
-from datetime import date
-from typing import Optional
-
-
-@dataclass
-class User:
-    nom_famille: str
-    prenom: str
-    courriel: str
-    mot_de_passe: Optional[str] = None
-    tel: Optional[str] = None
-    date_anniversaire: Optional[date] = None
-    adresse: Optional[str] = None
-    ville: Optional[str] = None
-    province: Optional[str] = None
-    code_postal: Optional[str] = None
-    forfait: Optional[str] = None&lt;/file&gt;&lt;file path=&quot;models/schemas/movie.py&quot;&gt;from pydantic import BaseModel, Field
-from typing import Optional, List
-from datetime import date
-
-
-class MovieResponse(BaseModel):
-    &amp;quot;&amp;quot;&amp;quot;Modèle simplifié pour l&amp;apos;affichage basique d&amp;apos;un film&amp;quot;&amp;quot;&amp;quot;
-
-    ID: Optional[int] = Field(None, description=&amp;quot;Identifiant unique du film&amp;quot;)
-    TITRE: str = Field(..., description=&amp;quot;Titre du film&amp;quot;)
-    ANNEE: Optional[int] = Field(None, ge=1888, le=2025, description=&amp;quot;Année de sortie&amp;quot;)
-    RESUME: Optional[str] = Field(None, description=&amp;quot;Synopsis du film&amp;quot;)
-    POSTER_URL: Optional[str] = Field(None, description=&amp;quot;URL de l&amp;apos;affiche du film&amp;quot;)
-
-    class Config:
-        from_attributes = True
-        schema_extra = {
-            &amp;quot;example&amp;quot;: {
-                &amp;quot;TITRE&amp;quot;: &amp;quot;Matrix&amp;quot;,
-                &amp;quot;ANNEE&amp;quot;: 1999,
-                &amp;quot;RESUME&amp;quot;: &amp;quot;Un programmeur découvre que le monde est une simulation...&amp;quot;,
-                &amp;quot;POSTER_URL&amp;quot;: &amp;quot;http://example.com/matrix.jpg&amp;quot;,
-            }
-        }
-
-
-class MovieBase(BaseModel):
-    &amp;quot;&amp;quot;&amp;quot;Modèle complet d&amp;apos;un film avec toutes ses informations&amp;quot;&amp;quot;&amp;quot;
-
-    ID: Optional[int] = Field(None, description=&amp;quot;Identifiant unique du film&amp;quot;)
-    TITRE: str = Field(..., description=&amp;quot;Titre du film&amp;quot;)
-    ANNEE: Optional[int] = Field(None, ge=1888, le=2025, description=&amp;quot;Année de sortie&amp;quot;)
-    LANGUE: Optional[str] = Field(None, description=&amp;quot;Langue originale du film&amp;quot;)
-    DUREE: Optional[int] = Field(None, gt=0, description=&amp;quot;Durée en minutes&amp;quot;)
-    RESUME: Optional[str] = Field(None, description=&amp;quot;Synopsis du film&amp;quot;)
-    ID_REALISATEUR: Optional[int] = Field(None, description=&amp;quot;ID du réalisateur&amp;quot;)
-    POSTER_URL: Optional[str] = Field(None, description=&amp;quot;URL de l&amp;apos;affiche du film&amp;quot;)
-
-    # Relations (informations des tables jointes)
-    GENRES: Optional[List[str]] = Field(default=[], description=&amp;quot;Liste des genres&amp;quot;)
-    PAYS: Optional[List[str]] = Field(default=[], description=&amp;quot;Pays de production&amp;quot;)
-    SCENARISTES: Optional[List[str]] = Field(
-        default=[], description=&amp;quot;Liste des scénaristes&amp;quot;
-    )
-    ACTEURS: Optional[List[dict]] = Field(
-        default=[],
-        description=&amp;quot;Liste des acteurs et leurs rôles&amp;quot;,
-        example=[{&amp;quot;id&amp;quot;: 1, &amp;quot;nom&amp;quot;: &amp;quot;Keanu Reeves&amp;quot;, &amp;quot;role&amp;quot;: &amp;quot;Neo&amp;quot;}],
-    )
-    ANNONCES: Optional[List[str]] = Field(
-        default=[], description=&amp;quot;URLs des bandes annonces&amp;quot;
-    )
-
-    class Config:
-        from_attributes = True
-        schema_extra = {
-            &amp;quot;example&amp;quot;: {
-                &amp;quot;ID&amp;quot;: 1,
-                &amp;quot;TITRE&amp;quot;: &amp;quot;Matrix&amp;quot;,
-                &amp;quot;ANNEE&amp;quot;: 1999,
-                &amp;quot;LANGUE&amp;quot;: &amp;quot;Anglais&amp;quot;,
-                &amp;quot;DUREE&amp;quot;: 136,
-                &amp;quot;RESUME&amp;quot;: &amp;quot;Un programmeur découvre que le monde est une simulation...&amp;quot;,
-                &amp;quot;ID_REALISATEUR&amp;quot;: 1,
-                &amp;quot;POSTER_URL&amp;quot;: &amp;quot;http://example.com/matrix.jpg&amp;quot;,
-                &amp;quot;GENRES&amp;quot;: [&amp;quot;Science Fiction&amp;quot;, &amp;quot;Action&amp;quot;],
-                &amp;quot;PAYS&amp;quot;: [&amp;quot;États-Unis&amp;quot;],
-                &amp;quot;SCENARISTES&amp;quot;: [&amp;quot;Lana Wachowski&amp;quot;, &amp;quot;Lilly Wachowski&amp;quot;],
-                &amp;quot;ACTEURS&amp;quot;: [
-                    {&amp;quot;id&amp;quot;: 1, &amp;quot;nom&amp;quot;: &amp;quot;Keanu Reeves&amp;quot;, &amp;quot;role&amp;quot;: &amp;quot;Neo&amp;quot;},
-                    {&amp;quot;id&amp;quot;: 2, &amp;quot;nom&amp;quot;: &amp;quot;Laurence Fishburne&amp;quot;, &amp;quot;role&amp;quot;: &amp;quot;Morpheus&amp;quot;},
-                ],
-                &amp;quot;BANDE_ANNONCE&amp;quot;: [&amp;quot;http://example.com/matrix-trailer.mp4&amp;quot;],
-            }
-        }
-
-
-class MoviesPaginatedResponse(BaseModel):
-    &amp;quot;&amp;quot;&amp;quot;Réponse paginée contenant une liste de films&amp;quot;&amp;quot;&amp;quot;
-
-    items: List[MovieResponse] = Field(..., description=&amp;quot;Liste des films&amp;quot;)
-    total: int = Field(..., description=&amp;quot;Nombre total de films&amp;quot;)
-    page: int = Field(..., ge=1, description=&amp;quot;Page actuelle&amp;quot;)
-    per_page: int = Field(..., gt=0, description=&amp;quot;Nombre d&amp;apos;éléments par page&amp;quot;)
-    total_pages: int = Field(..., ge=0, description=&amp;quot;Nombre total de pages&amp;quot;)
-
-    class Config:
-        schema_extra = {
-            &amp;quot;example&amp;quot;: {
-                &amp;quot;items&amp;quot;: [
-                    {
-                        &amp;quot;TITRE&amp;quot;: &amp;quot;Matrix&amp;quot;,
-                        &amp;quot;ANNEE&amp;quot;: 1999,
-                        &amp;quot;RESUME&amp;quot;: &amp;quot;Un programmeur découvre que le monde est une simulation...&amp;quot;,
-                        &amp;quot;POSTER_URL&amp;quot;: &amp;quot;http://example.com/matrix.jpg&amp;quot;,
-                    }
-                ],
-                &amp;quot;total&amp;quot;: 100,
-                &amp;quot;page&amp;quot;: 1,
-                &amp;quot;per_page&amp;quot;: 10,
-                &amp;quot;total_pages&amp;quot;: 10,
-            }
-        }
-
-
-class MovieRequest(BaseModel):
-    # Champs correspondant aux colonnes de la table FILMS
-    TITRE: Optional[str] = Field(None, description=&amp;quot;Titre complet ou partiel du film&amp;quot;)
-    ANNEE: Optional[int] = Field(None, ge=1888, le=2025, description=&amp;quot;Année de sortie&amp;quot;)
-
-    LANGUE: Optional[str] = Field(None, description=&amp;quot;Langue du film&amp;quot;)
-    DUREE_MIN: Optional[int] = Field(None, gt=0, description=&amp;quot;Durée en minutes minimum&amp;quot;)
-    DUREE_MAX: Optional[int] = Field(None, gt=0, description=&amp;quot;Durée en minutes maximum&amp;quot;)
-    RESUME: Optional[str] = Field(
-        None, description=&amp;quot;Texte à rechercher dans le synopsis&amp;quot;
-    )
-    POSTER_URL: Optional[str] = Field(None, description=&amp;quot;URL de l&amp;apos;affiche du film&amp;quot;)
-
-    # Champs pour les relations (tables de jonction)
-    ID_REALISATEUR: Optional[int] = Field(None, description=&amp;quot;ID du réalisateur&amp;quot;)
-    GENRES_INCLUS: Optional[List[str]] = Field(
-        default=[], description=&amp;quot;Liste des genres inclus&amp;quot;
-    )
-    GENRES_EXCLUS: Optional[List[str]] = Field(
-        default=[], description=&amp;quot;Liste des genres exclus&amp;quot;
-    )
-    PAYS: Optional[List[str]] = Field(
-        default=[], description=&amp;quot;Liste des pays de production&amp;quot;
-    )
-
-    # Champs pour la pagination
-    page: int = Field(default=1, ge=1, description=&amp;quot;Numéro de la page&amp;quot;)
-    limit: int = Field(
-        default=10, ge=1, le=100, description=&amp;quot;Nombre d&amp;apos;éléments par page&amp;quot;
-    )
-
-    class Config:
-        # Permet d&amp;apos;utiliser les noms exacts des colonnes SQL
-        allow_population_by_field_name = True
-
-        # Exemple pour la documentation
-        schema_extra = {
-            &amp;quot;example&amp;quot;: {
-                &amp;quot;TITRE&amp;quot;: &amp;quot;Matrix&amp;quot;,
-                &amp;quot;ANNEE&amp;quot;: 1999,
-                &amp;quot;LANGUE&amp;quot;: &amp;quot;Anglais&amp;quot;,
-                &amp;quot;DUREE_MIN&amp;quot;: 120,
-                &amp;quot;DUREE_MAX&amp;quot;: 150,
-                &amp;quot;RESUME&amp;quot;: &amp;quot;intelligence artificielle&amp;quot;,
-                &amp;quot;GENRES_INCLUS&amp;quot;: [&amp;quot;Science Fiction&amp;quot;],
-                &amp;quot;GENRES_EXCLUS&amp;quot;: [&amp;quot;Horreur&amp;quot;],
-                &amp;quot;PAYS&amp;quot;: [&amp;quot;États-Unis&amp;quot;],
-                &amp;quot;page&amp;quot;: 1,
-                &amp;quot;limit&amp;quot;: 10,
-            }
-        }&lt;/file&gt;&lt;file path=&quot;models/schemas/user.py&quot;&gt;from pydantic import BaseModel, Field
-from typing import Optional, List
-from datetime import date
-
-
-class ClientBase(BaseModel):
-    nom_famille: str = Field(..., max_length=50)
-    prenom: str = Field(..., max_length=50)
-    courriel: str = Field(..., max_length=100)
-    tel: Optional[str] = Field(None, max_length=20)
-    date_anniversaire: Optional[date] = None
-    adresse: Optional[str] = Field(None, max_length=200)
-    ville: Optional[str] = Field(None, max_length=100)
-    province: Optional[str] = Field(None, max_length=2)
-    code_postal: Optional[str] = Field(None, max_length=7)
-    forfait: Optional[str] = Field(None, max_length=1)
-
-
-class ClientLogin(BaseModel):
-    courriel: str
-    mot_de_passe: str = Field(..., max_length=100)
-
-
-class ClientResponse(BaseModel):
-    nom_famille: str
-    prenom: str
-    courriel: str
-    tel: Optional[str]
-    date_anniversaire: Optional[date]
-    adresse: Optional[str]
-    ville: Optional[str]
-    province: Optional[str]
-    code_postal: Optional[str]
-    forfait: Optional[str]
-
-
-class ClientCreate(BaseModel):
-    nom_famille: str
-    prenom: str
-    courriel: str
-    mot_de_passe: str
-    tel: Optional[str]
-    date_anniversaire: Optional[date]
-    adresse: Optional[str]
-    ville: Optional[str]
-    province: Optional[str]
-    code_postal: Optional[str]
-    forfait: Optional[str]
-
-class ClientCreateResponse(BaseModel):
-    nom_famille: str
-    prenom: str
-    courriel: str
-    mot_de_passe: str
-    tel: Optional[str]
-    date_anniversaire: Optional[date]
-    adresse: Optional[str]
-    ville: Optional[str]
-    province: Optional[str]
-    code_postal: Optional[str]
-    forfait: Optional[str]
-
-
-class TokenResponse(BaseModel):
-    token: str&lt;/file&gt;&lt;file path=&quot;services/cache.py&quot;&gt;from datetime import datetime, timedelta
-from typing import Dict, Any, Optional
-
-
-class CacheService:
-    def __init__(self):
-        # Structure simple: { &amp;quot;clé&amp;quot;: {&amp;quot;data&amp;quot;: données, &amp;quot;expiry&amp;quot;: date_expiration} }
-        self.cache = {}
-
-    def get(self, key: str) -&amp;gt; Optional[Any]:
-        &amp;quot;&amp;quot;&amp;quot;Récupère une donnée du cache&amp;quot;&amp;quot;&amp;quot;
-        if key in self.cache:
-            # Vérifie si la donnée n&amp;apos;a pas expiré
-            if datetime.now() &amp;lt; self.cache[key][&amp;quot;expiry&amp;quot;]:
-                return self.cache[key][&amp;quot;data&amp;quot;]
-            del self.cache[key]
-        return None
-
-    def set(self, key: str, data: Any, minutes: int = 30):
-        &amp;quot;&amp;quot;&amp;quot;Stocke une donnée dans le cache pour X minutes&amp;quot;&amp;quot;&amp;quot;
-        self.cache[key] = {
-            &amp;quot;data&amp;quot;: data,
-            &amp;quot;expiry&amp;quot;: datetime.now() + timedelta(minutes=minutes),
-        }
-
-    def delete(self, key: str):
-        &amp;quot;&amp;quot;&amp;quot;Supprime une donnée du cache&amp;quot;&amp;quot;&amp;quot;
-        if key in self.cache:
-            del self.cache[key]
-
-    def clear(self):
-        &amp;quot;&amp;quot;&amp;quot;Vide tout le cache&amp;quot;&amp;quot;&amp;quot;
-        self.cache.clear()&lt;/file&gt;&lt;file path=&quot;services/movies.py&quot;&gt;# backend/src/services/user.py
-from typing import Tuple, Dict, Optional, List
-from backend.src.db.repositories.movies import MoviesRepository
-from backend.src.services.cache import CacheService
-
-
-class MovieService:
-    def __init__(self):
-        self.repository = MoviesRepository()
-        self.cache = CacheService()
-
-    def get_movie(self, movie_id: int) -&amp;gt; Optional[Dict]:
-        cache_key = f&amp;quot;movie_{movie_id}&amp;quot;
-        if cached := self.cache.get(cache_key):
-            return cached
-
-        sql_result = self.repository.get_film_by_id(movie_id)
-        if sql_result:
-            self.cache.set(cache_key, sql_result, 30)
-        return sql_result
-
-    def _create_cache_key(self, properties: Dict) -&amp;gt; str:
-        parameter_hashable = {}
-        for key, value in properties.items():
-            if isinstance(value, list):
-                parameter_hashable[key] = tuple(sorted(value))
-            else:
-                parameter_hashable[key] = value
-        params_string = str((sorted(parameter_hashable.items())))
-        return f&amp;quot;film_search{hash(params_string)}&amp;quot;
-
-    def search_movies(self, properties: Dict) -&amp;gt; List[Dict]:
-        search_params = properties.dict()
-        cache_key = self._create_cache_key(search_params)
-        cache_result = self.cache.get(cache_key)
-        if cache_result:
-            return cache_result
-        result = self.repository.search_films(properties.dict())
-        if not result:
-            return []
-        self.cache.set(cache_key, result, 30)
-
-        return result&lt;/file&gt;&lt;file path=&quot;services/users.py&quot;&gt;# backend/src/services/user.py
-from typing import Tuple, Dict, Optional
-from backend.src.db.repositories.users import UserRepository
-from backend.src.services.cache import CacheService
-
-
-class UserService:
-    def __init__(self):
-        self.repository = UserRepository()
-        self.cache = CacheService()
-
-    def authenticate(self, email: str, password: str) -&amp;gt; Tuple[Dict, bool]:
-        client = self.repository.get_by_email_password(email)
-        if client and client[&amp;quot;MOT_DE_PASSE&amp;quot;] == password:
-            return client, True
-        return None, False
-
-    def get_profile(self, email: str) -&amp;gt; Optional[Dict]:
-        cache_key = f&amp;quot;client_{email}&amp;quot;
-        if cached := self.cache.get(cache_key):
-            return cached
-
-        sql_result = self.repository.get_by_email(email)
-        result = self.sql_to_ClientBase(sql_result) if sql_result else None
-        if result:
-            self.cache.set(cache_key, result, 30)
-        return result
-
-    def sql_to_ClientBase(self, sql_result: Dict) -&amp;gt; Dict:
-        return {
-            &amp;quot;nom_famille&amp;quot;: sql_result[&amp;quot;NOM_FAMILLE&amp;quot;],
-            &amp;quot;prenom&amp;quot;: sql_result[&amp;quot;PRENOM&amp;quot;],
-            &amp;quot;courriel&amp;quot;: sql_result[&amp;quot;COURRIEL&amp;quot;],
-            &amp;quot;tel&amp;quot;: sql_result[&amp;quot;TEL&amp;quot;],
-            &amp;quot;date_anniversaire&amp;quot;: sql_result[&amp;quot;DATE_ANNIVERSAIRE&amp;quot;],
-            &amp;quot;adresse&amp;quot;: sql_result[&amp;quot;ADRESSE&amp;quot;],
-            &amp;quot;ville&amp;quot;: sql_result[&amp;quot;VILLE&amp;quot;],
-            &amp;quot;province&amp;quot;: sql_result[&amp;quot;PROVINCE&amp;quot;],
-            &amp;quot;code_postal&amp;quot;: sql_result[&amp;quot;CODE_POSTAL&amp;quot;],
-            &amp;quot;forfait&amp;quot;: sql_result[&amp;quot;FORFAIT&amp;quot;],
-        }
-    def register_client(self, user) -&amp;gt; bool:
-        return self.repository.create(user)&lt;/file&gt;&lt;file path=&quot;.dockerignore&quot;&gt;__pycache__
-*.pyc
-*.pyo
-*.pyd
-.Python
-pip-log.txt
-pip-delete-this-directory.txt
-.tox
-.coverage
-.coverage.*
-.cache
-nosetests.xml
-coverage.xml
-*.cover
-*.log
-.pytest_cache
-.venv
-env/
-venv/
-ENV/&lt;/file&gt;&lt;file path=&quot;Dockerfile&quot;&gt;# Utiliser une image Python officielle
-FROM python:3.11-slim
-
-# Installer les dépendances système nécessaires
-RUN apt-get update &amp;amp;&amp;amp; apt-get install -y \
-    libaio1 \
-    gcc \
-    wget \
-    unzip \
-    &amp;amp;&amp;amp; rm -rf /var/lib/apt/lists/*
-
-# Créer le répertoire pour le client Oracle
-RUN mkdir -p /opt/oracle
-WORKDIR /opt/oracle
-
-# Télécharger et installer le client Oracle Instant Client
-RUN wget https://download.oracle.com/otn_software/linux/instantclient/218000/instantclient-basic-linux.x64-21.8.0.0.0dbru.zip \
-    &amp;amp;&amp;amp; unzip instantclient-basic-linux.x64-21.8.0.0.0dbru.zip \
-    &amp;amp;&amp;amp; rm instantclient-basic-linux.x64-21.8.0.0.0dbru.zip \
-    &amp;amp;&amp;amp; sh -c &amp;quot;echo /opt/oracle/instantclient_21_8 &amp;gt; /etc/ld.so.conf.d/oracle-instantclient.conf&amp;quot; \
-    &amp;amp;&amp;amp; ldconfig
-
-# Définir les variables d&amp;apos;environnement pour Oracle
-ENV ORACLE_HOME=/opt/oracle/instantclient_21_8
-ENV LD_LIBRARY_PATH=/opt/oracle/instantclient_21_8:$LD_LIBRARY_PATH
-ENV PATH=/opt/oracle/instantclient_21_8:$PATH
-
-# Créer et définir le répertoire de travail
-WORKDIR /app
-
-# Copier les fichiers de requirements
-COPY requirements.txt .
-
-# Installer les dépendances Python
-RUN pip install --no-cache-dir -r requirements.txt
-
-# Copier le reste des fichiers de l&amp;apos;application
-COPY . .
-
-# Exposer le port sur lequel FastAPI va tourner
-EXPOSE 8000
-
-# Commande pour démarrer l&amp;apos;application
-CMD [&amp;quot;uvicorn&amp;quot;, &amp;quot;main:app&amp;quot;, &amp;quot;--host&amp;quot;, &amp;quot;0.0.0.0&amp;quot;, &amp;quot;--port&amp;quot;, &amp;quot;8000&amp;quot;, &amp;quot;--reload&amp;quot;]&lt;/file&gt;&lt;file path=&quot;main.py&quot;&gt;from fastapi import FastAPI
-from fastapi.middleware.cors import CORSMiddleware
-from core.config import get_app_config
-from api.routes import auth, movies, users
-
-
-def create_app() -&amp;gt; FastAPI:
-    config = get_app_config()
-
-    app = FastAPI(
-        title=&amp;quot;Film Location API&amp;quot;,
-        description=&amp;quot;API pour la location de films&amp;quot;,
-        version=&amp;quot;1.0.0&amp;quot;,
-    )
-
-    # Configuration CORS
-    app.add_middleware(
-        CORSMiddleware,
-        allow_origins=[&amp;quot;*&amp;quot;],
-        allow_credentials=True,
-        allow_methods=[&amp;quot;*&amp;quot;],
-        allow_headers=[&amp;quot;*&amp;quot;],
-    )
-
-    # Inclusion des routers
-    app.include_router(auth.router, prefix=&amp;quot;/auth&amp;quot;, tags=[&amp;quot;Authentication&amp;quot;])
-
-    app.include_router(movies.router, prefix=&amp;quot;/movies&amp;quot;, tags=[&amp;quot;Movies&amp;quot;])
-
-    app.include_router(users.router, prefix=&amp;quot;/users&amp;quot;, tags=[&amp;quot;Users&amp;quot;])
-
-    @app.get(&amp;quot;/health&amp;quot;)
-    async def health_check():
-        return {&amp;quot;status&amp;quot;: &amp;quot;healthy&amp;quot;}
-
-    return app
-
-
-app = create_app()&lt;/file&gt;&lt;file path=&quot;requirements.txt&quot;&gt;fastapi&amp;gt;=0.68.0,&amp;lt;0.69.0
-uvicorn&amp;gt;=0.15.0,&amp;lt;0.16.0
-cx-Oracle&amp;gt;=8.3.0
-python-dotenv&amp;gt;=0.19.0
-pydantic&amp;gt;=1.8.0,&amp;lt;2.0.0
-python-jose[cryptography]&amp;gt;=3.3.0
-passlib[bcrypt]&amp;gt;=1.7.4
-Pyjwt&amp;gt;=2.1.0&lt;/file&gt;&lt;/files&gt;&lt;/repomix&gt;</file><file path="backend/src/requirements.txt">fastapi&gt;=0.68.0,&lt;0.69.0
-uvicorn&gt;=0.15.0,&lt;0.16.0
-cx-Oracle&gt;=8.3.0
-python-dotenv&gt;=0.19.0
-pydantic&gt;=1.8.0,&lt;2.0.0
-python-jose[cryptography]&gt;=3.3.0
-passlib[bcrypt]&gt;=1.7.4
-Pyjwt&gt;=2.1.0</file><file path="backend/.env.exemple">ORACLE_USER=
-ORACLE_PASSWORD=
-ORACLE_HOST=bdgti660.ens.ad.etsmtl.ca
-ORACLE_PORT=1521
-ORACLE_SERVICE=orclpdb.ens.ad.etsmtl.ca
-SECRET_KEY = &quot;&quot;
-ALGORITHM = &quot;HS256&quot;</file><file path="backend/.gitignore">venv/
-.venv/
-.tasks
-repomix-output.xml
-repomix-output.*
-
-
----
-
-# Byte-compiled / optimized / DLL files
-__pycache__/
-*.py[cod]
-*$py.class
-
-# C extensions
-*.so
-
-# Distribution / packaging
-.Python
-build/
-develop-eggs/
-dist/
-downloads/
-eggs/
-.eggs/
-lib/
-lib64/
-parts/
-sdist/
-var/
-wheels/
-share/python-wheels/
-*.egg-info/
-.installed.cfg
-*.egg
-MANIFEST
-
-# PyInstaller
-#  Usually these files are written by a python script from a template
-#  before PyInstaller builds the exe, so as to inject date/other infos into it.
-*.manifest
-*.spec
-
-# Installer logs
-pip-log.txt
-pip-delete-this-directory.txt
-
-# Unit test / coverage reports
-htmlcov/
-.tox/
-.nox/
-.coverage
-.coverage.*
-.cache
-nosetests.xml
-coverage.xml
-*.cover
-*.py,cover
-.hypothesis/
-.pytest_cache/
-cover/
-
-# Translations
-*.mo
-*.pot
-
-# Django stuff:
-*.log
-local_settings.py
-db.sqlite3
-db.sqlite3-journal
-
-# Flask stuff:
-instance/
-.webassets-cache
-
-# Scrapy stuff:
-.scrapy
-
-# Sphinx documentation
-docs/_build/
-
-# PyBuilder
-.pybuilder/
-target/
-
-# Jupyter Notebook
-.ipynb_checkpoints
-
-# IPython
-profile_default/
-ipython_config.py
-
-# pyenv
-#   For a library or package, you might want to ignore these files since the code is
-#   intended to run in multiple environments; otherwise, check them in:
-# .python-version
-
-# pipenv
-#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
-#   However, in case of collaboration, if having platform-specific dependencies or dependencies
-#   having no cross-platform support, pipenv may install dependencies that don&apos;t work, or not
-#   install all needed dependencies.
-#Pipfile.lock
-
-# UV
-#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
-#   This is especially recommended for binary packages to ensure reproducibility, and is more
-#   commonly ignored for libraries.
-#uv.lock
-
-# poetry
-#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
-#   This is especially recommended for binary packages to ensure reproducibility, and is more
-#   commonly ignored for libraries.
-#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
-#poetry.lock
-
-# pdm
-#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
-#pdm.lock
-#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
-#   in version control.
-#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
-.pdm.toml
-.pdm-python
-.pdm-build/
-
-# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
-__pypackages__/
-
-# Celery stuff
-celerybeat-schedule
-celerybeat.pid
-
-# SageMath parsed files
-*.sage.py
-
-# Environments
-.env
-.venv
-env/
-venv/
-ENV/
-env.bak/
-venv.bak/
-
-# Spyder project settings
-.spyderproject
-.spyproject
-
-# Rope project settings
-.ropeproject
-
-# mkdocs documentation
-/site
-
-# mypy
-.mypy_cache/
-.dmypy.json
-dmypy.json
-
-# Pyre type checker
-.pyre/
-
-# pytype static type analyzer
-.pytype/
-
-# Cython debug symbols
-cython_debug/
-
-# PyCharm
-#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
-#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
-#  and can be added to the global gitignore or merged into this file.  For a more nuclear
-#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
-#.idea/
-
-# Ruff stuff:
-.ruff_cache/
-
-# PyPI configuration file
-.pypirc</file><file path="backend/README.md">## How to run
-1. source venv
-```bash
-source venv/bin/activate
-```
-2. set env variables
-3. Run with unicorn
-```bash
-uvicorn API:app --reload
-```
-
----
-&gt; **Note:** If any issues with package,
-```bash
-python3 -m venv .venv
-source .venv/bin/activate
-pip install -r requirements.txt
-```</file><file path="frontend/hooks/use-modal-store.ts">import { create } from &quot;zustand&quot;;
-import { Movie } from &quot;../types&quot;;
-
-export type ModalType = &quot;movieModal&quot;;
-
-interface ModalStore {
-  type: ModalType | null;
-  data: Movie | null;
-  isOpen: boolean;
-  onOpen: (type: ModalType, data?: Movie) =&gt; void;
-  onClose: () =&gt; void;
-}
-
-export const useModal = create&lt;ModalStore&gt;((set) =&gt; ({
-  type: null,
-  data: null,
-  isOpen: false,
-  onOpen: (type, data) =&gt; set({ isOpen: true, type, data }),
-  onClose: () =&gt; set({ type: null, isOpen: false, data: null }),
-}));</file><file path="frontend/hooks/use-profile-store.ts">import { create } from &quot;zustand&quot;;
-import { persist } from &quot;zustand/middleware&quot;;
-import { User } from &quot;../types&quot;;
-
-
-interface UserStore {
-  user: User | null;
-  getUser: () =&gt; User | null;
-  setUser: (user: User) =&gt; void;
-}
-
-export const useProfileStore = create&lt;UserStore&gt;()(
-  persist(
-    (set, get) =&gt; ({
-      user: null,
-      getUser: () =&gt; get().user,
-      setUser: (user) =&gt; set({ user }),
-    }),
-    { name: &quot;profile&quot; },
-  ),
-);</file><file path="frontend/public/vite.svg">&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; aria-hidden=&quot;true&quot; role=&quot;img&quot; class=&quot;iconify iconify--logos&quot; width=&quot;31.88&quot; height=&quot;32&quot; preserveAspectRatio=&quot;xMidYMid meet&quot; viewBox=&quot;0 0 256 257&quot;&gt;&lt;defs&gt;&lt;linearGradient id=&quot;IconifyId1813088fe1fbc01fb466&quot; x1=&quot;-.828%&quot; x2=&quot;57.636%&quot; y1=&quot;7.652%&quot; y2=&quot;78.411%&quot;&gt;&lt;stop offset=&quot;0%&quot; stop-color=&quot;#41D1FF&quot;&gt;&lt;/stop&gt;&lt;stop offset=&quot;100%&quot; stop-color=&quot;#BD34FE&quot;&gt;&lt;/stop&gt;&lt;/linearGradient&gt;&lt;linearGradient id=&quot;IconifyId1813088fe1fbc01fb467&quot; x1=&quot;43.376%&quot; x2=&quot;50.316%&quot; y1=&quot;2.242%&quot; y2=&quot;89.03%&quot;&gt;&lt;stop offset=&quot;0%&quot; stop-color=&quot;#FFEA83&quot;&gt;&lt;/stop&gt;&lt;stop offset=&quot;8.333%&quot; stop-color=&quot;#FFDD35&quot;&gt;&lt;/stop&gt;&lt;stop offset=&quot;100%&quot; stop-color=&quot;#FFA800&quot;&gt;&lt;/stop&gt;&lt;/linearGradient&gt;&lt;/defs&gt;&lt;path fill=&quot;url(#IconifyId1813088fe1fbc01fb466)&quot; d=&quot;M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z&quot;&gt;&lt;/path&gt;&lt;path fill=&quot;url(#IconifyId1813088fe1fbc01fb467)&quot; d=&quot;M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;</file><file path="frontend/src/assets/react.svg">&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot; aria-hidden=&quot;true&quot; role=&quot;img&quot; class=&quot;iconify iconify--logos&quot; width=&quot;35.93&quot; height=&quot;32&quot; preserveAspectRatio=&quot;xMidYMid meet&quot; viewBox=&quot;0 0 256 228&quot;&gt;&lt;path fill=&quot;#00D8FF&quot; d=&quot;M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;</file><file path="frontend/src/components/ui/button.tsx">import * as React from &quot;react&quot;
-import { Slot } from &quot;@radix-ui/react-slot&quot;
-import { cva, type VariantProps } from &quot;class-variance-authority&quot;
-
-import { cn } from &quot;@/lib/utils&quot;
-
-const buttonVariants = cva(
-  &quot;inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&amp;_svg]:pointer-events-none [&amp;_svg]:size-4 [&amp;_svg]:shrink-0&quot;,
-  {
-    variants: {
-      variant: {
-        default: &quot;bg-primary text-primary-foreground hover:bg-primary/90&quot;,
-        destructive:
-          &quot;bg-destructive text-destructive-foreground hover:bg-destructive/90&quot;,
-        outline:
-          &quot;border border-input bg-background hover:bg-accent hover:text-accent-foreground&quot;,
-        secondary:
-          &quot;bg-secondary text-secondary-foreground hover:bg-secondary/80&quot;,
-        ghost: &quot;hover:bg-accent hover:text-accent-foreground&quot;,
-        link: &quot;text-primary underline-offset-4 hover:underline&quot;,
-      },
-      size: {
-        default: &quot;h-10 px-4 py-2&quot;,
-        sm: &quot;h-9 rounded-md px-3&quot;,
-        lg: &quot;h-11 rounded-md px-8&quot;,
-        icon: &quot;h-10 w-10&quot;,
-      },
-    },
-    defaultVariants: {
-      variant: &quot;default&quot;,
-      size: &quot;default&quot;,
-    },
-  }
-)
-
-export interface ButtonProps
-  extends React.ButtonHTMLAttributes&lt;HTMLButtonElement&gt;,
-    VariantProps&lt;typeof buttonVariants&gt; {
-  asChild?: boolean
-}
-
-const Button = React.forwardRef&lt;HTMLButtonElement, ButtonProps&gt;(
-  ({ className, variant, size, asChild = false, ...props }, ref) =&gt; {
-    const Comp = asChild ? Slot : &quot;button&quot;
-    return (
-      &lt;Comp
-        className={cn(buttonVariants({ variant, size, className }))}
-        ref={ref}
-        {...props}
-      /&gt;
-    )
-  }
-)
-Button.displayName = &quot;Button&quot;
-
-export { Button, buttonVariants }</file><file path="frontend/src/components/ui/card.tsx">import * as React from &quot;react&quot;
-
-import { cn } from &quot;@/lib/utils&quot;
-
-const Card = React.forwardRef&lt;
-  HTMLDivElement,
-  React.HTMLAttributes&lt;HTMLDivElement&gt;
-&gt;(({ className, ...props }, ref) =&gt; (
-  &lt;div
-    ref={ref}
-    className={cn(
-      &quot;rounded-lg border bg-card text-card-foreground shadow-sm&quot;,
-      className
-    )}
-    {...props}
-  /&gt;
-))
-Card.displayName = &quot;Card&quot;
-
-const CardHeader = React.forwardRef&lt;
-  HTMLDivElement,
-  React.HTMLAttributes&lt;HTMLDivElement&gt;
-&gt;(({ className, ...props }, ref) =&gt; (
-  &lt;div
-    ref={ref}
-    className={cn(&quot;flex flex-col space-y-1.5 p-6&quot;, className)}
-    {...props}
-  /&gt;
-))
-CardHeader.displayName = &quot;CardHeader&quot;
-
-const CardTitle = React.forwardRef&lt;
-  HTMLDivElement,
-  React.HTMLAttributes&lt;HTMLDivElement&gt;
-&gt;(({ className, ...props }, ref) =&gt; (
-  &lt;div
-    ref={ref}
-    className={cn(
-      &quot;text-2xl font-semibold leading-none tracking-tight&quot;,
-      className
-    )}
-    {...props}
-  /&gt;
-))
-CardTitle.displayName = &quot;CardTitle&quot;
-
-const CardDescription = React.forwardRef&lt;
-  HTMLDivElement,
-  React.HTMLAttributes&lt;HTMLDivElement&gt;
-&gt;(({ className, ...props }, ref) =&gt; (
-  &lt;div
-    ref={ref}
-    className={cn(&quot;text-sm text-muted-foreground&quot;, className)}
-    {...props}
-  /&gt;
-))
-CardDescription.displayName = &quot;CardDescription&quot;
-
-const CardContent = React.forwardRef&lt;
-  HTMLDivElement,
-  React.HTMLAttributes&lt;HTMLDivElement&gt;
-&gt;(({ className, ...props }, ref) =&gt; (
-  &lt;div ref={ref} className={cn(&quot;p-6 pt-0&quot;, className)} {...props} /&gt;
-))
-CardContent.displayName = &quot;CardContent&quot;
-
-const CardFooter = React.forwardRef&lt;
-  HTMLDivElement,
-  React.HTMLAttributes&lt;HTMLDivElement&gt;
-&gt;(({ className, ...props }, ref) =&gt; (
-  &lt;div
-    ref={ref}
-    className={cn(&quot;flex items-center p-6 pt-0&quot;, className)}
-    {...props}
-  /&gt;
-))
-CardFooter.displayName = &quot;CardFooter&quot;
-
-export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }</file><file path="frontend/src/components/ui/dialog.tsx">import * as React from &quot;react&quot;
-import * as DialogPrimitive from &quot;@radix-ui/react-dialog&quot;
-import { X } from &quot;lucide-react&quot;
-
-import { cn } from &quot;@/lib/utils&quot;
-
-const Dialog = DialogPrimitive.Root
-
-const DialogTrigger = DialogPrimitive.Trigger
-
-const DialogPortal = DialogPrimitive.Portal
-
-const DialogClose = DialogPrimitive.Close
-
-const DialogOverlay = React.forwardRef&lt;
-  React.ElementRef&lt;typeof DialogPrimitive.Overlay&gt;,
-  React.ComponentPropsWithoutRef&lt;typeof DialogPrimitive.Overlay&gt;
-&gt;(({ className, ...props }, ref) =&gt; (
-  &lt;DialogPrimitive.Overlay
-    ref={ref}
-    className={cn(
-      &quot;fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0&quot;,
-      className
-    )}
-    {...props}
-  /&gt;
-))
-DialogOverlay.displayName = DialogPrimitive.Overlay.displayName
-
-const DialogContent = React.forwardRef&lt;
-  React.ElementRef&lt;typeof DialogPrimitive.Content&gt;,
-  React.ComponentPropsWithoutRef&lt;typeof DialogPrimitive.Content&gt;
-&gt;(({ className, children, ...props }, ref) =&gt; (
-  &lt;DialogPortal&gt;
-    &lt;DialogOverlay /&gt;
-    &lt;DialogPrimitive.Content
-      ref={ref}
-      className={cn(
-        &quot;fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg&quot;,
-        className
-      )}
-      {...props}
-    &gt;
-      {children}
-      &lt;DialogPrimitive.Close className=&quot;absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground&quot;&gt;
-        &lt;X className=&quot;h-4 w-4&quot; /&gt;
-        &lt;span className=&quot;sr-only&quot;&gt;Close&lt;/span&gt;
-      &lt;/DialogPrimitive.Close&gt;
-    &lt;/DialogPrimitive.Content&gt;
-  &lt;/DialogPortal&gt;
-))
-DialogContent.displayName = DialogPrimitive.Content.displayName
-
-const DialogHeader = ({
-  className,
-  ...props
-}: React.HTMLAttributes&lt;HTMLDivElement&gt;) =&gt; (
-  &lt;div
-    className={cn(
-      &quot;flex flex-col space-y-1.5 text-center sm:text-left&quot;,
-      className
-    )}
-    {...props}
-  /&gt;
-)
-DialogHeader.displayName = &quot;DialogHeader&quot;
-
-const DialogFooter = ({
-  className,
-  ...props
-}: React.HTMLAttributes&lt;HTMLDivElement&gt;) =&gt; (
-  &lt;div
-    className={cn(
-      &quot;flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2&quot;,
-      className
-    )}
-    {...props}
-  /&gt;
-)
-DialogFooter.displayName = &quot;DialogFooter&quot;
-
-const DialogTitle = React.forwardRef&lt;
-  React.ElementRef&lt;typeof DialogPrimitive.Title&gt;,
-  React.ComponentPropsWithoutRef&lt;typeof DialogPrimitive.Title&gt;
-&gt;(({ className, ...props }, ref) =&gt; (
-  &lt;DialogPrimitive.Title
-    ref={ref}
-    className={cn(
-      &quot;text-lg font-semibold leading-none tracking-tight&quot;,
-      className
-    )}
-    {...props}
-  /&gt;
-))
-DialogTitle.displayName = DialogPrimitive.Title.displayName
-
-const DialogDescription = React.forwardRef&lt;
-  React.ElementRef&lt;typeof DialogPrimitive.Description&gt;,
-  React.ComponentPropsWithoutRef&lt;typeof DialogPrimitive.Description&gt;
-&gt;(({ className, ...props }, ref) =&gt; (
-  &lt;DialogPrimitive.Description
-    ref={ref}
-    className={cn(&quot;text-sm text-muted-foreground&quot;, className)}
-    {...props}
-  /&gt;
-))
-DialogDescription.displayName = DialogPrimitive.Description.displayName
-
-export {
-  Dialog,
-  DialogPortal,
-  DialogOverlay,
-  DialogClose,
-  DialogTrigger,
-  DialogContent,
-  DialogHeader,
-  DialogFooter,
-  DialogTitle,
-  DialogDescription,
-}</file><file path="frontend/src/components/ui/input.tsx">import * as React from &quot;react&quot;
-
-import { cn } from &quot;@/lib/utils&quot;
-
-const Input = React.forwardRef&lt;HTMLInputElement, React.ComponentProps&lt;&quot;input&quot;&gt;&gt;(
-  ({ className, type, ...props }, ref) =&gt; {
-    return (
-      &lt;input
-        type={type}
-        className={cn(
-          &quot;flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm&quot;,
-          className
-        )}
-        ref={ref}
-        {...props}
-      /&gt;
-    )
-  }
-)
-Input.displayName = &quot;Input&quot;
-
-export { Input }</file><file path="frontend/src/components/ui/label.tsx">import * as React from &quot;react&quot;
-import * as LabelPrimitive from &quot;@radix-ui/react-label&quot;
-import { cva, type VariantProps } from &quot;class-variance-authority&quot;
-
-import { cn } from &quot;@/lib/utils&quot;
-
-const labelVariants = cva(
-  &quot;text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70&quot;
-)
-
-const Label = React.forwardRef&lt;
-  React.ElementRef&lt;typeof LabelPrimitive.Root&gt;,
-  React.ComponentPropsWithoutRef&lt;typeof LabelPrimitive.Root&gt; &amp;
-    VariantProps&lt;typeof labelVariants&gt;
-&gt;(({ className, ...props }, ref) =&gt; (
-  &lt;LabelPrimitive.Root
-    ref={ref}
-    className={cn(labelVariants(), className)}
-    {...props}
-  /&gt;
-))
-Label.displayName = LabelPrimitive.Root.displayName
-
-export { Label }</file><file path="frontend/src/components/ui/scroll-area.tsx">import * as React from &quot;react&quot;
-import * as ScrollAreaPrimitive from &quot;@radix-ui/react-scroll-area&quot;
-
-import { cn } from &quot;@/lib/utils&quot;
-
-const ScrollArea = React.forwardRef&lt;
-  React.ElementRef&lt;typeof ScrollAreaPrimitive.Root&gt;,
-  React.ComponentPropsWithoutRef&lt;typeof ScrollAreaPrimitive.Root&gt;
-&gt;(({ className, children, ...props }, ref) =&gt; (
-  &lt;ScrollAreaPrimitive.Root
-    ref={ref}
-    className={cn(&quot;relative overflow-hidden&quot;, className)}
-    {...props}
-  &gt;
-    &lt;ScrollAreaPrimitive.Viewport className=&quot;h-full w-full rounded-[inherit]&quot;&gt;
-      {children}
-    &lt;/ScrollAreaPrimitive.Viewport&gt;
-    &lt;ScrollBar /&gt;
-    &lt;ScrollAreaPrimitive.Corner /&gt;
-  &lt;/ScrollAreaPrimitive.Root&gt;
-))
-ScrollArea.displayName = ScrollAreaPrimitive.Root.displayName
-
-const ScrollBar = React.forwardRef&lt;
-  React.ElementRef&lt;typeof ScrollAreaPrimitive.ScrollAreaScrollbar&gt;,
-  React.ComponentPropsWithoutRef&lt;typeof ScrollAreaPrimitive.ScrollAreaScrollbar&gt;
-&gt;(({ className, orientation = &quot;vertical&quot;, ...props }, ref) =&gt; (
-  &lt;ScrollAreaPrimitive.ScrollAreaScrollbar
-    ref={ref}
-    orientation={orientation}
-    className={cn(
-      &quot;flex touch-none select-none transition-colors&quot;,
-      orientation === &quot;vertical&quot; &amp;&amp;
-        &quot;h-full w-2.5 border-l border-l-transparent p-[1px]&quot;,
-      orientation === &quot;horizontal&quot; &amp;&amp;
-        &quot;h-2.5 flex-col border-t border-t-transparent p-[1px]&quot;,
-      className
-    )}
-    {...props}
-  &gt;
-    &lt;ScrollAreaPrimitive.ScrollAreaThumb className=&quot;relative flex-1 rounded-full bg-border&quot; /&gt;
-  &lt;/ScrollAreaPrimitive.ScrollAreaScrollbar&gt;
-))
-ScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName
-
-export { ScrollArea, ScrollBar }</file><file path="frontend/src/components/ui/slider.tsx">import * as React from &quot;react&quot;
-import * as SliderPrimitive from &quot;@radix-ui/react-slider&quot;
-
-import { cn } from &quot;@/lib/utils&quot;
-
-const Slider = React.forwardRef&lt;
-  React.ElementRef&lt;typeof SliderPrimitive.Root&gt;,
-  React.ComponentPropsWithoutRef&lt;typeof SliderPrimitive.Root&gt;
-&gt;(({ className, ...props }, ref) =&gt; (
-  &lt;SliderPrimitive.Root
-    ref={ref}
-    className={cn(
-      &quot;relative flex w-full touch-none select-none items-center&quot;,
-      className
-    )}
-    {...props}
-  &gt;
-    &lt;SliderPrimitive.Track className=&quot;relative h-2 w-full grow overflow-hidden rounded-full bg-secondary&quot;&gt;
-      &lt;SliderPrimitive.Range className=&quot;absolute h-full bg-primary&quot; /&gt;
-    &lt;/SliderPrimitive.Track&gt;
-    &lt;SliderPrimitive.Thumb className=&quot;block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50&quot; /&gt;
-  &lt;/SliderPrimitive.Root&gt;
-))
-Slider.displayName = SliderPrimitive.Root.displayName
-
-export { Slider }</file><file path="frontend/src/components/ui/tabs.tsx">import * as React from &quot;react&quot;
-import * as TabsPrimitive from &quot;@radix-ui/react-tabs&quot;
-
-import { cn } from &quot;@/lib/utils&quot;
-
-const Tabs = TabsPrimitive.Root
-
-const TabsList = React.forwardRef&lt;
-  React.ElementRef&lt;typeof TabsPrimitive.List&gt;,
-  React.ComponentPropsWithoutRef&lt;typeof TabsPrimitive.List&gt;
-&gt;(({ className, ...props }, ref) =&gt; (
-  &lt;TabsPrimitive.List
-    ref={ref}
-    className={cn(
-      &quot;inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground&quot;,
-      className
-    )}
-    {...props}
-  /&gt;
-))
-TabsList.displayName = TabsPrimitive.List.displayName
-
-const TabsTrigger = React.forwardRef&lt;
-  React.ElementRef&lt;typeof TabsPrimitive.Trigger&gt;,
-  React.ComponentPropsWithoutRef&lt;typeof TabsPrimitive.Trigger&gt;
-&gt;(({ className, ...props }, ref) =&gt; (
-  &lt;TabsPrimitive.Trigger
-    ref={ref}
-    className={cn(
-      &quot;inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm&quot;,
-      className
-    )}
-    {...props}
-  /&gt;
-))
-TabsTrigger.displayName = TabsPrimitive.Trigger.displayName
-
-const TabsContent = React.forwardRef&lt;
-  React.ElementRef&lt;typeof TabsPrimitive.Content&gt;,
-  React.ComponentPropsWithoutRef&lt;typeof TabsPrimitive.Content&gt;
-&gt;(({ className, ...props }, ref) =&gt; (
-  &lt;TabsPrimitive.Content
-    ref={ref}
-    className={cn(
-      &quot;mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2&quot;,
-      className
-    )}
-    {...props}
-  /&gt;
-))
-TabsContent.displayName = TabsPrimitive.Content.displayName
-
-export { Tabs, TabsList, TabsTrigger, TabsContent }</file><file path="frontend/src/components/Dashboard.tsx">import type React from &quot;react&quot;;
-import { debounce } from &quot;lodash&quot;;
-import axios from &quot;axios&quot;;
-import { useEffect, useState, useCallback } from &quot;react&quot;;
-import { useNavigate } from &quot;react-router-dom&quot;;
-import MovieSuggestions from &quot;./MovieSuggestions&quot;;
-import { Button } from &quot;./ui/button&quot;;
-import { Input } from &quot;./ui/input&quot;;
-import { Label } from &quot;./ui/label&quot;;
-import { Slider } from &quot;./ui/slider&quot;;
-import Header from &quot;./Header&quot;;
-import MovieCard from &quot;./MovieCard&quot;;
-import { useProfileStore } from &quot;../../hooks/use-profile-store&quot;;
-import { MovieDetails } from &quot;../../types&quot;;
-import { Card, CardContent, CardHeader, CardTitle } from &quot;./ui/card&quot;;
-
-
-const Dashboard: React.FC = () =&gt; {
-  const BACKEND_URL = import.meta.env.VITE_BACKEND_URL;
-  const { user } = useProfileStore();
-  const navigate = useNavigate();
-
-  const [searchTerm, setSearchTerm] = useState(&quot;&quot;);
-  const [debouncedSearchTerm, setDebouncedSearchTerm] = useState(&quot;&quot;);
-  const [suggestions, setSuggestions] = useState&lt;string[]&gt;([]);
-  const [yearRange, setYearRange] = useState([1900, 2025]);
-  const [durationRange, setDurationRange] = useState([0, 240]);
-  const [selectedGenres, setSelectedGenres] = useState&lt;string[]&gt;([]);
-  const [excludedGenres, setExcludedGenres] = useState&lt;string[]&gt;([]);
-  const [movies, setMovies] = useState&lt;MovieDetails[]&gt;([]);
-  const [genres, setGenres] = useState&lt;string[]&gt;([]);
-
-  useEffect(() =&gt; {
-    if (!user) {
-      navigate(&quot;/&quot;);
-    }
-
-    fetchGenres();
-  }, [user]);
-
-  useEffect(() =&gt; {
-    if (!debouncedSearchTerm) {
-      return;
-    }
-
-    getSuggestions();
-  }, [debouncedSearchTerm]);
-
-
-  const fetchGenres = async () =&gt; {
-    try {
-      const response = await axios.get(`${BACKEND_URL}/movies/all-genres`);
-      setGenres(response.data);
-    } catch (error: any) {
-      console.error(error);
-    }
-  };
-
-  const getSuggestions = async () =&gt; {
-    try {
-      const token = localStorage.getItem(&quot;authToken&quot;);
-      const response = await axios.get(
-        `${BACKEND_URL}/movies/suggestions/${debouncedSearchTerm}`,
-        {
-          headers: {
-            Authorization: `Bearer ${token}`,
-          },
-        },
-      );
-
-      setSuggestions(response.data);
-    } catch (error: any) {
-      console.error(error);
-    }
-  };
-
-  useEffect(() =&gt; {
-    console.log(&quot;Search term changed:&quot;, searchTerm);
-    debounceSetSearch(searchTerm);
-  }, [searchTerm]);
-
-  const debounceSetSearch = useCallback(
-    debounce((value: string) =&gt; {
-      console.log(&quot;Debounced value:&quot;, value);
-      setDebouncedSearchTerm(value);
-    }, 300),
-    [],
-  );
-
-  const handleSearch = (e: React.FormEvent) =&gt; {
-    e.preventDefault();
-    console.log(&quot;Searching for:&quot;, searchTerm);
-  };
-
-  const handleYearRangeChange = (value: number[]) =&gt; {
-    setYearRange(value);
-  };
-
-  const handleDurationRangeChange = (value: number[]) =&gt; {
-    setDurationRange(value);
-  };
-
-  const toggleGenre = (genre: string, list: &quot;include&quot; | &quot;exclude&quot;) =&gt; {
-    if (list === &quot;include&quot;) {
-      setSelectedGenres((prev) =&gt;
-        prev.includes(genre)
-          ? prev.filter((g) =&gt; g !== genre)
-          : [...prev, genre],
-      );
-    } else {
-      setExcludedGenres((prev) =&gt;
-        prev.includes(genre)
-          ? prev.filter((g) =&gt; g !== genre)
-          : [...prev, genre],
-      );
-    }
-  };
-
-  const openTrailer = (movieId: number) =&gt; {
-    console.log(&quot;Opening trailer for movie ID:&quot;, movieId);
-  };
-
-  if (!user) {
-    navigate(&quot;/&quot;);
-  }
-
-  return (
-    &lt;div className=&quot;bg-background min-h-screen w-screen&quot;&gt;
-      &lt;Header title=&quot;Dashboard&quot; /&gt;
-      &lt;div className=&quot;container mx-auto px-4 py-8&quot;&gt;
-        &lt;div className=&quot;flex gap-8&quot;&gt;
-          &lt;Card className=&quot;basis-3/4&quot;&gt;
-            &lt;CardHeader&gt;
-              &lt;CardTitle&gt;Advanced Search&lt;/CardTitle&gt;
-            &lt;/CardHeader&gt;
-            &lt;CardContent&gt;
-              &lt;form onSubmit={handleSearch} className=&quot;space-y-6&quot;&gt;
-                &lt;div className=&quot;flex gap-2 relative&quot;&gt;
-                  {&quot; &quot;}
-                  &lt;Input
-                    placeholder=&quot;Search movies...&quot;
-                    value={searchTerm}
-                    onChange={(e) =&gt; setSearchTerm(e.target.value)}
-                    className=&quot;flex-1&quot;
-                  /&gt;
-                  &lt;Button type=&quot;submit&quot;&gt;Search&lt;/Button&gt;
-                  {debouncedSearchTerm.length !== 0 &amp;&amp; &lt;MovieSuggestions
-                    suggestions={suggestions}
-                    onSelect={(suggestion) =&gt; {
-                      setSearchTerm(suggestion);
-                      setSuggestions([]);
-                    }}
-                    visible={suggestions.length &gt; 0}
-                  /&gt;}
-                &lt;/div&gt;
-
-                &lt;div className=&quot;space-y-2&quot;&gt;
-                  &lt;Label&gt;
-                    Year Range ({yearRange[0]} - {yearRange[1]})
-                  &lt;/Label&gt;
-                  &lt;Slider
-                    min={1900}
-                    max={2025}
-                    step={1}
-                    value={yearRange}
-                    onValueChange={handleYearRangeChange}
-                    className=&quot;my-4&quot;
-                  /&gt;
-                &lt;/div&gt;
-
-                &lt;div className=&quot;space-y-2&quot;&gt;
-                  &lt;Label&gt;
-                    Duration ({durationRange[0]} - {durationRange[1]} minutes)
-                  &lt;/Label&gt;
-                  &lt;Slider
-                    min={0}
-                    max={240}
-                    step={5}
-                    value={durationRange}
-                    onValueChange={handleDurationRangeChange}
-                    className=&quot;my-4&quot;
-                  /&gt;
-                &lt;/div&gt;
-
-                &lt;div className=&quot;space-y-2&quot;&gt;
-                  &lt;Label&gt;Include Genres&lt;/Label&gt;
-                  &lt;div className=&quot;flex flex-wrap gap-2&quot;&gt;
-                    {genres.map((genre) =&gt; (
-                      &lt;Button
-                        key={genre}
-                        variant={
-                          selectedGenres.includes(genre) ? &quot;default&quot; : &quot;outline&quot;
-                        }
-                        size=&quot;sm&quot;
-                        onClick={() =&gt; toggleGenre(genre, &quot;include&quot;)}
-                        type=&quot;button&quot;
-                      &gt;
-                        {genre}
-                      &lt;/Button&gt;
-                    ))}
-                  &lt;/div&gt;
-                &lt;/div&gt;
-
-                &lt;div className=&quot;space-y-2&quot;&gt;
-                  &lt;Label&gt;Exclude Genres&lt;/Label&gt;
-                  &lt;div className=&quot;flex flex-wrap gap-2&quot;&gt;
-                    {excludedGenres.length === 0 ? (
-                      &lt;span className=&quot;text-gray-400&quot;&gt;No genres excluded&lt;/span&gt;
-                    ) :
-                    excludedGenres.map(
-                      (genre) =&gt; (
-                        &lt;Button
-                          key={genre}
-                          variant={
-                            excludedGenres.includes(genre)
-                              ? &quot;destructive&quot;
-                              : &quot;outline&quot;
-                          }
-                          size=&quot;sm&quot;
-                          onClick={() =&gt; toggleGenre(genre, &quot;exclude&quot;)}
-                          type=&quot;button&quot;
-                        &gt;
-                          {genre}
-                        &lt;/Button&gt;
-                      ),
-                    )}
-                  &lt;/div&gt;
-                &lt;/div&gt;
-              &lt;/form&gt;
-            &lt;/CardContent&gt;
-          &lt;/Card&gt;
-
-          &lt;Card className=&quot;basis-1/4&quot;&gt;
-            &lt;CardHeader&gt;
-              &lt;CardTitle&gt;People Search&lt;/CardTitle&gt;
-            &lt;/CardHeader&gt;
-            &lt;CardContent&gt;
-              &lt;Input placeholder=&quot;Search directors, actors...&quot; /&gt;
-            &lt;/CardContent&gt;
-          &lt;/Card&gt;
-        &lt;/div&gt;
-
-        &lt;div className=&quot;mt-8 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6&quot;&gt;
-          {/* movies? mockMovies.map((movie) =&gt; (
-            &lt;MovieCard key={movie.id} movie={movie} openTrailer={openTrailer} /&gt;
-          )) */}
-        &lt;/div&gt;
-      &lt;/div&gt;
-    &lt;/div&gt;
-  );
-};
-
-export default Dashboard;</file><file path="frontend/src/components/Header.tsx">import type React from &quot;react&quot;;
-import { Button } from &quot;./ui/button&quot;;
-import { User, Film } from &quot;lucide-react&quot;;
-import { useNavigate } from &quot;react-router-dom&quot;;
-
-type HeaderProps = {
-  title: string;
-};
-const Header: React.FC&lt;HeaderProps&gt; = ({ title }) =&gt; {
-  const navigate = useNavigate();
-
-  return (
-    &lt;header className=&quot;border-b bg-card&quot;&gt;
-      &lt;div className=&quot;container mx-auto px-4 py-4&quot;&gt;
-        &lt;div className=&quot;flex justify-between items-center&quot;&gt;
-          &lt;h1 className=&quot;text-2xl font-bold&quot;&gt;{title}&lt;/h1&gt;
-          &lt;a href=&quot;#&quot; className=&quot;flex items-center gap-2 hover:text-primary&quot;&gt;
-            &lt;Film className=&quot;h-5 w-5&quot; /&gt;
-            &lt;span className=&quot;text-xl font-semibold&quot;&gt;iTunes&lt;/span&gt;
-          &lt;/a&gt;
-          &lt;div className=&quot;flex items-center gap-4&quot;&gt;
-            &lt;span className=&quot;text-sm text-muted-foreground&quot;&gt;Credits: 100&lt;/span&gt;
-            &lt;Button variant=&quot;outline&quot; size=&quot;sm&quot; onClick={ () =&gt; (navigate(&quot;/profile&quot;)) }&gt;
-              &lt;User className=&quot;w-4 h-4 mr-2&quot; /&gt;
-              Profile
-            &lt;/Button&gt;
-          &lt;/div&gt;
-        &lt;/div&gt;
-      &lt;/div&gt;
-    &lt;/header&gt;
-  );
-};
-
-export default Header;</file><file path="frontend/src/components/LandingPage.tsx">import { useState } from &quot;react&quot;;
-import { Button } from &quot;./ui/button&quot;;
-import { Film } from &quot;lucide-react&quot;;
-import { Input } from &quot;./ui/input&quot;;
-import axios from &quot;axios&quot;;
-import { useNavigate } from &quot;react-router-dom&quot;;
-import SignInModal from &quot;./../Modal/sign-in-modal&quot;;
-import { useProfileStore } from &quot;../../hooks/use-profile-store&quot;;
-import { useModal } from &quot;../../hooks/use-modal-store&quot;;
-
-const LandingPage = () =&gt; {
-  const BACKEND_URL = import.meta.env.VITE_BACKEND_URL;
-  const navigate = useNavigate();
-  const { setUser } = useProfileStore();
-  const { onOpen } = useModal();
-
-  const [showModal, setShowModal] = useState(false);
-  const [error, setError] = useState&lt;string&gt;(&quot;&quot;);
-
-  const fecthUserInformation = async () =&gt; {
-    try {
-      const token = localStorage.getItem(&quot;authToken&quot;);
-      const response = await axios.get(`${BACKEND_URL}/users/myaccount`, {
-        headers: {
-          Authorization: `Bearer ${token}`,
-        },
-      });
-
-      setUser(response.data);
-
-    } catch (error: any) {
-      console.error(error);
-    }
-  };
-
-  const handleSearchClick = (e: React.FormEvent) =&gt; {
-    e.preventDefault();
-    setShowModal(true);
-  };
-
-  const handleSignInClick = async (formData: {
-    courriel: string;
-    mot_de_passe: string;
-  }) =&gt; {
-    try {
-      const response = await axios.post(`${BACKEND_URL}/auth/login`, formData, {
-        headers: {
-          &quot;Content-Type&quot;: &quot;application/json&quot;,
-        },
-      });
-
-      const token = response.data.token;
-      localStorage.setItem(&quot;authToken&quot;, token);
-
-      await fecthUserInformation();
-
-      navigate(&quot;/dashboard&quot;);
-      setShowModal(false);
-    } catch (error: any) {
-      if (error.response.status === 401) {
-        setError(&quot;Email ou mot de passe incorrect&quot;);
-      } else {
-        console.error(error);
-      }
-    }
-  };
-
-  return (
-    &lt;div className=&quot;w-screen flex flex-col items-center h-screen justify-center&quot;&gt;
-      &lt;a
-        className=&quot;flex items-center justify-center fixed top-0 pt-10&quot;
-        href=&quot;#&quot;
-      &gt;
-        &lt;Film className=&quot;h-6 w-6&quot; /&gt;
-        &lt;span className=&quot;text-2xl font-bold&quot;&gt;iTunes&lt;/span&gt;
-      &lt;/a&gt;
-      &lt;div className=&quot;flex flex-col items-center space-y-4 text-center mt-20 pb-32&quot;&gt;
-        &lt;div className=&quot;space-y-2&quot;&gt;
-          &lt;h1 className=&quot;text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl lg:text-6xl/none&quot;&gt;
-            Trouvez Votre Film Préféré
-          &lt;/h1&gt;
-          &lt;p className=&quot;max-w-[700px] text-gray-500 md:text-xl dark:text-gray-400&quot;&gt;
-            Explorez et découvrez des milliers de films. La soirée cinéma
-            parfaite est à portée de clic.
-          &lt;/p&gt;
-        &lt;/div&gt;
-        &lt;div className=&quot;w-full max-w-sm space-y-2&quot;&gt;
-          &lt;form className=&quot;flex space-x-2&quot; onSubmit={handleSearchClick}&gt;
-            &lt;Input
-              className=&quot;max-w-lg flex-1&quot;
-              placeholder=&quot;Recherchez un film...&quot;
-              type=&quot;text&quot;
-            /&gt;
-            &lt;Button type=&quot;submit&quot;&gt;Rechercher&lt;/Button&gt;
-          &lt;/form&gt;
-        &lt;/div&gt;
-      &lt;/div&gt;
-      &lt;SignInModal
-        isOpen={showModal}
-        onClose={() =&gt; setShowModal(false)}
-        onSignIn={handleSignInClick}
-        error={error}
-      /&gt;
-    &lt;/div&gt;
-  );
-};
-
-export default LandingPage;</file><file path="frontend/src/components/MovieCard.tsx">import type React from &quot;react&quot;;
-import { Button } from &quot;./ui/button&quot;;
-import { Card, CardContent } from &quot;./ui/card&quot;;
-import { Play } from &quot;lucide-react&quot;;
-
-interface Movie {
-  id: number;
-  title: string;
-  year: number;
-  genre: string;
-  duration: number;
-  poster: string;
-}
-
-interface MovieCardProps {
-  movie: Movie;
-  openTrailer: (movieId: number) =&gt; void;
-}
-
-const MovieCard: React.FC&lt;MovieCardProps&gt; = ({ movie, openTrailer }) =&gt; {
-  return (
-    &lt;Card key={movie.id} className=&quot;overflow-hidden&quot;&gt;
-      &lt;CardContent className=&quot;p-0&quot;&gt;
-        &lt;div className=&quot;aspect-[2/3] relative&quot;&gt;
-          &lt;img
-            src={movie.poster || &quot;/placeholder.svg&quot;}
-            alt={movie.title}
-            className=&quot;object-cover absolute inset-0 w-full h-full&quot;
-          /&gt;
-        &lt;/div&gt;
-        &lt;div className=&quot;p-4 space-y-4&quot;&gt;
-          &lt;div&gt;
-            &lt;h3 className=&quot;font-semibold text-lg leading-tight&quot;&gt;
-              {movie.title}
-            &lt;/h3&gt;
-            &lt;p className=&quot;text-sm text-muted-foreground&quot;&gt;
-              {movie.year} • {movie.genre} • {movie.duration} min
-            &lt;/p&gt;
-          &lt;/div&gt;
-          &lt;Button
-            size=&quot;sm&quot;
-            variant=&quot;outline&quot;
-            className=&quot;w-full&quot;
-            onClick={() =&gt; openTrailer(movie.id)}
-          &gt;
-            &lt;Play className=&quot;w-4 h-4 mr-2&quot; /&gt;
-            Watch Trailer
-          &lt;/Button&gt;
-        &lt;/div&gt;
-      &lt;/CardContent&gt;
-    &lt;/Card&gt;
-  );
-};
-
-export default MovieCard;</file><file path="frontend/src/components/MovieSuggestions.tsx">import { Card } from &quot;../components/ui/card&quot;;
-
-type MovieSuggestionsProps = {
-  suggestions: string[];
-  onSelect: (suggestion: string) =&gt; void;
-  visible: boolean;
-};
-
-const MovieSuggestions = ({
-  suggestions,
-  onSelect,
-  visible,
-}: MovieSuggestionsProps) =&gt; {
-  if (!visible || suggestions.length === 0) return null;
-
-  return (
-    &lt;Card className=&quot;absolute top-full left-0 right-0 mt-1 max-h-60 overflow-y-auto z-50 bg-white border border-input&quot;&gt;
-      &lt;div className=&quot;w-full&quot;&gt;
-        {suggestions.map((suggestion, index) =&gt; (
-          &lt;button
-            key={index}
-            onClick={() =&gt; onSelect(suggestion)}
-            className=&quot;w-full text-left px-3 py-2 hover:bg-accent hover:text-accent-foreground rounded-sm text-sm bg-white&quot;
-          &gt;
-            {suggestion}
-          &lt;/button&gt;
-        ))}
-      &lt;/div&gt;
-    &lt;/Card&gt;
-  );
-};
-
-export default MovieSuggestions;</file><file path="frontend/src/components/Navbar.tsx">import { Film } from &quot;lucide-react&quot;;
-
-const NarBar = () =&gt; {
-  return (
-    &lt;header className=&quot;fixed top-0 px-4 lg:px-6 h-14 flex items-center w-screen m-2 justify-center&quot;&gt;
-      &lt;a className=&quot;flex items-center justify-center&quot; href=&quot;#&quot;&gt;
-        &lt;Film className=&quot;h-6 w-6&quot; /&gt;
-        &lt;span className=&quot;ml-2 text-2xl font-bold&quot;&gt;iTunes&lt;/span&gt;
-      &lt;/a&gt;
-    &lt;/header&gt;
-  );
-};
-
-export default NarBar;</file><file path="frontend/src/components/TestPage.tsx">import { useState } from &quot;react&quot;;
-import tomHankImage from &quot;../../src/assets/tom-hanks.jpg&quot;;
-import {
-  Card,
-  CardContent,
-  CardDescription,
-  CardFooter,
-  CardHeader,
-  CardTitle,
-} from &quot;./ui/card&quot;;
-
-const TestPage = () =&gt; {
-  const [isModalOpen, setIsModalOpen] = useState(false);
-
-  const openModal = () =&gt; setIsModalOpen(true);
-  const closeModal = () =&gt; setIsModalOpen(false);
-
-  return (
-    &lt;div className=&quot;w-screen h-screen flex justify-center flex-1 bg-blue-400 items-center&quot;&gt;
-      &lt;button onClick={openModal} className=&quot;bg-white p-2 rounded&quot;&gt;Open Profile&lt;/button&gt;
-      {isModalOpen &amp;&amp; (
-        &lt;div className=&quot;fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center&quot;&gt;
-          &lt;div className=&quot;bg-white p-4 rounded w-[300px]&quot;&gt;
-            &lt;Card&gt;
-              &lt;CardHeader&gt;
-                &lt;CardTitle&gt;User Profile&lt;/CardTitle&gt;
-              &lt;/CardHeader&gt;
-              &lt;CardContent&gt;
-                &lt;img src={tomHankImage} alt=&quot;Tom Hanks&quot; className=&quot;w-full h-auto rounded&quot; /&gt;
-                &lt;CardDescription&gt;
-                  &lt;p&gt;Name: Tom Hanks&lt;/p&gt;
-                  &lt;p&gt;Email: tom.hanks@example.com&lt;/p&gt;
-                &lt;/CardDescription&gt;
-              &lt;/CardContent&gt;
-              &lt;CardFooter&gt;
-                &lt;button onClick={closeModal} className=&quot;bg-red-500 p-2 rounded text-white&quot;&gt;Close&lt;/button&gt;
-              &lt;/CardFooter&gt;
-            &lt;/Card&gt;
-          &lt;/div&gt;
-        &lt;/div&gt;
-      )}
-    &lt;/div&gt;
-  );
-};
-
-export default TestPage;</file><file path="frontend/src/components/UserProfile.tsx">import { Card, CardContent, CardHeader, CardTitle } from &quot;../components/ui/card.tsx&quot;;
-import { Tabs, TabsContent, TabsList, TabsTrigger } from &quot;../components/ui/tabs&quot;;
-import { useProfileStore } from &apos;../../hooks/use-profile-store&apos;;
-import Header from &quot;./Header&quot;;
-import { 
-  User as UserIcon, 
-  Mail, 
-  CreditCard, 
-  Phone, 
-  MapPin, 
-  Calendar,
-  Package
-} from &apos;lucide-react&apos;;
-
-const ProfilePage = () =&gt; {
-  const { user } = useProfileStore();
-
-  if (!user) {
-    return (
-      &lt;div className=&quot;flex items-center justify-center min-h-screen&quot;&gt;
-        &lt;p className=&quot;text-lg text-muted-foreground&quot;&gt;Loading profile...&lt;/p&gt;
-      &lt;/div&gt;
-    );
-  }
-
-  return (
-    &lt;div className=&quot;bg-background min-h-screen w-screen&quot;&gt;
-      &lt;Header title=&quot;Profile&quot;/&gt;
-      &lt;div className=&quot;container mx-auto px-4 py-8 pt-24&quot;&gt;
-        &lt;Tabs defaultValue=&quot;personal&quot; className=&quot;max-w-4xl mx-auto&quot;&gt;
-          &lt;TabsList className=&quot;grid w-full grid-cols-2&quot;&gt;
-            &lt;TabsTrigger className=&quot;bg-gray-200&quot; value=&quot;personal&quot;&gt;Personal Information&lt;/TabsTrigger&gt;
-            &lt;TabsTrigger className=&quot;bg-gray-200&quot; value=&quot;subscription&quot;&gt;Subscription &amp; Credits&lt;/TabsTrigger&gt;
-          &lt;/TabsList&gt;
-          
-          &lt;TabsContent value=&quot;personal&quot;&gt;
-            &lt;Card&gt;
-              &lt;CardHeader&gt;
-                &lt;CardTitle className=&quot;text-2xl font-bold flex items-center gap-2&quot;&gt;
-                  &lt;UserIcon className=&quot;w-6 h-6&quot; /&gt;
-                  Personal Information
-                &lt;/CardTitle&gt;
-              &lt;/CardHeader&gt;
-              &lt;CardContent className=&quot;space-y-6&quot;&gt;
-                &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;
-                  &lt;div className=&quot;space-y-2&quot;&gt;
-                    &lt;label className=&quot;text-sm font-medium text-muted-foreground&quot;&gt;Full Name&lt;/label&gt;
-                    &lt;p className=&quot;text-lg font-medium&quot;&gt;{`${user.prenom} ${user.nom_famille}`}&lt;/p&gt;
-                  &lt;/div&gt;
-                  &lt;div className=&quot;space-y-2&quot;&gt;
-                    &lt;label className=&quot;text-sm font-medium text-muted-foreground&quot;&gt;Email&lt;/label&gt;
-                    &lt;div className=&quot;flex items-center gap-2&quot;&gt;
-                      &lt;Mail className=&quot;w-4 h-4 text-primary&quot; /&gt;
-                      &lt;p className=&quot;text-lg&quot;&gt;{user.courriel}&lt;/p&gt;
-                    &lt;/div&gt;
-                  &lt;/div&gt;
-                  {user.tel &amp;&amp; (
-                    &lt;div className=&quot;space-y-2&quot;&gt;
-                      &lt;label className=&quot;text-sm font-medium text-muted-foreground&quot;&gt;Phone&lt;/label&gt;
-                      &lt;div className=&quot;flex items-center gap-2&quot;&gt;
-                        &lt;Phone className=&quot;w-4 h-4 text-primary&quot; /&gt;
-                        &lt;p className=&quot;text-lg&quot;&gt;{user.tel}&lt;/p&gt;
-                      &lt;/div&gt;
-                    &lt;/div&gt;
-                  )}
-                  {user.date_anniversaire &amp;&amp; (
-                    &lt;div className=&quot;space-y-2&quot;&gt;
-                      &lt;label className=&quot;text-sm font-medium text-muted-foreground&quot;&gt;Birthday&lt;/label&gt;
-                      &lt;div className=&quot;flex items-center gap-2&quot;&gt;
-                        &lt;Calendar className=&quot;w-4 h-4 text-primary&quot; /&gt;
-                        &lt;p className=&quot;text-lg&quot;&gt;
-                          {new Date(user.date_anniversaire).toLocaleDateString()}
-                        &lt;/p&gt;
-                      &lt;/div&gt;
-                    &lt;/div&gt;
-                  )}
-                &lt;/div&gt;
-
-                {(user.adresse || user.ville || user.province || user.code_postal) &amp;&amp; (
-                  &lt;div className=&quot;pt-6 border-t&quot;&gt;
-                    &lt;h3 className=&quot;text-lg font-semibold mb-4 flex items-center gap-2&quot;&gt;
-                      &lt;MapPin className=&quot;w-5 h-5&quot; /&gt;
-                      Address Information
-                    &lt;/h3&gt;
-                    &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;
-                      {user.adresse &amp;&amp; (
-                        &lt;div className=&quot;space-y-2&quot;&gt;
-                          &lt;label className=&quot;text-sm font-medium text-muted-foreground&quot;&gt;Street Address&lt;/label&gt;
-                          &lt;p className=&quot;text-lg&quot;&gt;{user.adresse}&lt;/p&gt;
-                        &lt;/div&gt;
-                      )}
-                      {user.ville &amp;&amp; (
-                        &lt;div className=&quot;space-y-2&quot;&gt;
-                          &lt;label className=&quot;text-sm font-medium text-muted-foreground&quot;&gt;City&lt;/label&gt;
-                          &lt;p className=&quot;text-lg&quot;&gt;{user.ville}&lt;/p&gt;
-                        &lt;/div&gt;
-                      )}
-                      {user.province &amp;&amp; (
-                        &lt;div className=&quot;space-y-2&quot;&gt;
-                          &lt;label className=&quot;text-sm font-medium text-muted-foreground&quot;&gt;Province&lt;/label&gt;
-                          &lt;p className=&quot;text-lg&quot;&gt;{user.province}&lt;/p&gt;
-                        &lt;/div&gt;
-                      )}
-                      {user.code_postal &amp;&amp; (
-                        &lt;div className=&quot;space-y-2&quot;&gt;
-                          &lt;label className=&quot;text-sm font-medium text-muted-foreground&quot;&gt;Postal Code&lt;/label&gt;
-                          &lt;p className=&quot;text-lg&quot;&gt;{user.code_postal}&lt;/p&gt;
-                        &lt;/div&gt;
-                      )}
-                    &lt;/div&gt;
-                  &lt;/div&gt;
-                )}
-              &lt;/CardContent&gt;
-            &lt;/Card&gt;
-          &lt;/TabsContent&gt;
-
-          &lt;TabsContent value=&quot;subscription&quot;&gt;
-            &lt;Card&gt;
-              &lt;CardHeader&gt;
-                &lt;CardTitle className=&quot;text-2xl font-bold flex items-center gap-2&quot;&gt;
-                  &lt;Package className=&quot;w-6 h-6&quot; /&gt;
-                  Subscription Details
-                &lt;/CardTitle&gt;
-              &lt;/CardHeader&gt;
-              &lt;CardContent className=&quot;space-y-6&quot;&gt;
-                &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;
-                  {user.forfait &amp;&amp; (
-                    &lt;div className=&quot;p-6 bg-primary/5 rounded-lg&quot;&gt;
-                      &lt;h3 className=&quot;text-lg font-semibold mb-2 flex items-center gap-2&quot;&gt;
-                        &lt;Package className=&quot;w-5 h-5 text-primary&quot; /&gt;
-                        Current Plan
-                      &lt;/h3&gt;
-                      &lt;p className=&quot;text-3xl font-bold text-primary&quot;&gt;
-                        {user.forfait === &apos;A&apos; ? &apos;Premium&apos; : 
-                         user.forfait === &apos;B&apos; ? &apos;Standard&apos; : 
-                         user.forfait === &apos;C&apos; ? &apos;Basic&apos; : &apos;Free&apos;}
-                      &lt;/p&gt;
-                    &lt;/div&gt;
-                  )}
-                  
-                  &lt;div className=&quot;p-6 bg-primary/5 rounded-lg&quot;&gt;
-                    &lt;h3 className=&quot;text-lg font-semibold mb-2 flex items-center gap-2&quot;&gt;
-                      &lt;CreditCard className=&quot;w-5 h-5 text-primary&quot; /&gt;
-                      Available Credits
-                    &lt;/h3&gt;
-                    &lt;p className=&quot;text-3xl font-bold text-primary&quot;&gt;
-                      {user.credits || 0} credits
-                    &lt;/p&gt;
-                  &lt;/div&gt;
-                &lt;/div&gt;
-              &lt;/CardContent&gt;
-            &lt;/Card&gt;
-          &lt;/TabsContent&gt;
-        &lt;/Tabs&gt;
-      &lt;/div&gt;
-    &lt;/div&gt;
-  );
-};
-
-export default ProfilePage;</file><file path="frontend/src/lib/utils.ts">import { clsx, type ClassValue } from &quot;clsx&quot;
-import { twMerge } from &quot;tailwind-merge&quot;
-
-export function cn(...inputs: ClassValue[]) {
-  return twMerge(clsx(inputs))
-}</file><file path="frontend/src/Modal/movie-information-modal.tsx">import {
-  Dialog,
-  DialogContent,
-  DialogHeader,
-  DialogTitle,
-  DialogDescription,
-} from &quot;../components/ui/dialog&quot;;
-import { ScrollArea } from &quot;../components/ui/scroll-area&quot;;
-import { Clock, Calendar, Globe } from &quot;lucide-react&quot;;
-import { useModal } from &quot;../../hooks/use-modal-store&quot;
-
-const MovieModal = () =&gt; {
-
-  const { isOpen, onClose, type, data: movie } = useModal();
-  const isModalOpen = isOpen &amp;&amp; type === &quot;movieModal&quot;;
-
-  if (!isModalOpen) return null;
-  if (!movie) return null;
-
-
-  return (
-    &lt;Dialog open={isModalOpen} onOpenChange={onClose}&gt;
-      &lt;DialogContent className=&quot;max-w-3xl max-h-[90vh] overflow-hidden&quot;&gt;
-        &lt;DialogHeader&gt;
-          &lt;DialogTitle className=&quot;text-2xl font-bold&quot;&gt;
-            {movie.TITRE}
-          &lt;/DialogTitle&gt;
-          &lt;DialogDescription&gt;
-            &lt;div className=&quot;flex items-center gap-2 text-gray-500&quot;&gt;
-              &lt;Calendar className=&quot;w-4 h-4&quot; /&gt;
-              &lt;span&gt;{movie.ANNEE}&lt;/span&gt;
-              &lt;Clock className=&quot;w-4 h-4 ml-4&quot; /&gt;
-              &lt;span&gt;{movie.DUREE} min&lt;/span&gt;
-              &lt;Globe className=&quot;w-4 h-4 ml-4&quot; /&gt;
-              &lt;span&gt;{movie.LANGUE}&lt;/span&gt;
-            &lt;/div&gt;
-          &lt;/DialogDescription&gt;
-        &lt;/DialogHeader&gt;
-
-        &lt;div className=&quot;grid grid-cols-1 md:grid-cols-2 gap-6&quot;&gt;
-          {/* Poster */}
-          &lt;div className=&quot;relative aspect-[2/3] rounded-lg overflow-hidden bg-gray-100&quot;&gt;
-            {movie.POSTER_URL ? (
-              &lt;img 
-                src={movie.POSTER_URL} 
-                alt={movie.TITRE}
-                className=&quot;object-cover w-full h-full&quot;
-              /&gt;
-            ) : (
-              &lt;div className=&quot;flex items-center justify-center w-full h-full text-gray-400&quot;&gt;
-                No poster available
-              &lt;/div&gt;
-            )}
-          &lt;/div&gt;
-
-          {/* Details */}
-          &lt;ScrollArea className=&quot;h-[60vh]&quot;&gt;
-            &lt;div className=&quot;space-y-6 pr-4&quot;&gt;
-              {/* Synopsis */}
-              &lt;div&gt;
-                &lt;h3 className=&quot;text-lg font-semibold mb-2&quot;&gt;Synopsis&lt;/h3&gt;
-                &lt;p className=&quot;text-gray-600&quot;&gt;
-                  {movie.RESUME || &quot;No synopsis available.&quot;}
-                &lt;/p&gt;
-              &lt;/div&gt;
-
-              {/* Additional Details */}
-              &lt;div&gt;
-                &lt;h3 className=&quot;text-lg font-semibold mb-2&quot;&gt;Additional Details&lt;/h3&gt;
-                &lt;dl className=&quot;space-y-2&quot;&gt;
-                  &lt;div&gt;
-                    &lt;dt className=&quot;text-sm font-medium text-gray-500&quot;&gt;Director ID&lt;/dt&gt;
-                    &lt;dd className=&quot;text-gray-700&quot;&gt;{movie.ID_REALISATEUR || &quot;Not available&quot;}&lt;/dd&gt;
-                  &lt;/div&gt;
-                  &lt;div&gt;
-                    &lt;dt className=&quot;text-sm font-medium text-gray-500&quot;&gt;Movie ID&lt;/dt&gt;
-                    &lt;dd className=&quot;text-gray-700&quot;&gt;{movie.ID}&lt;/dd&gt;
-                  &lt;/div&gt;
-                &lt;/dl&gt;
-              &lt;/div&gt;
-            &lt;/div&gt;
-          &lt;/ScrollArea&gt;
-        &lt;/div&gt;
-      &lt;/DialogContent&gt;
-    &lt;/Dialog&gt;
-  );
-};
-
-export default MovieModal;</file><file path="frontend/src/Modal/sign-in-modal.tsx">import { useState } from &quot;react&quot;;
-import {
-  Dialog,
-  DialogContent,
-  DialogDescription,
-  DialogHeader,
-  DialogTitle,
-  DialogFooter,
-} from &quot;../components/ui/dialog&quot;;
-import { Button } from &quot;../components/ui/button&quot;;
-import { Input } from &quot;../components/ui/input&quot;;
-import { Label } from &quot;../components/ui/label&quot;;
-import { EyeIcon, EyeOffIcon } from &quot;lucide-react&quot;;
-
-type userData = {
-  courriel: string;
-  mot_de_passe: string;
-};
-
-interface SignInModalProps {
-  isOpen: boolean;
-  onClose: () =&gt; void;
-  onSignIn: (formData: userData) =&gt; void;
-  error: string;
-}
-
-const SignInModal = ({
-  isOpen,
-  onClose,
-  onSignIn,
-  error,
-}: SignInModalProps) =&gt; {
-  const [showPassword, setShowPassword] = useState(false);
-  const [formData, setFormData] = useState&lt;userData&gt;({
-    courriel: &quot;&quot;,
-    mot_de_passe: &quot;&quot;,
-  });
-
-  const handleSubmit = (e: React.FormEvent) =&gt; {
-    e.preventDefault();
-
-    onSignIn(formData);
-  };
-
-  return (
-    &lt;Dialog open={isOpen} onOpenChange={onClose}&gt;
-      &lt;DialogContent className=&quot;sm:max-w-[425px] [&amp;&gt;button]:hover:bg-transparent [&amp;&gt;button]:focus:bg-transparent [&amp;&gt;button]:active:bg-transparent&quot;&gt;
-        &lt;DialogHeader&gt;
-          &lt;DialogTitle className=&quot;text-2xl font-bold text-center&quot;&gt;
-            Connexion
-          &lt;/DialogTitle&gt;
-          &lt;DialogDescription className=&quot;text-center text-muted-foreground&quot;&gt;
-            Connectez vous a votre profil pour accéder au service
-          &lt;/DialogDescription&gt;
-        &lt;/DialogHeader&gt;
-        &lt;form onSubmit={handleSubmit}&gt;
-          &lt;div className=&quot;grid gap-6 py-4&quot;&gt;
-            &lt;div className=&quot;grid gap-2&quot;&gt;
-              &lt;Label htmlFor=&quot;email&quot;&gt;Email&lt;/Label&gt;
-              &lt;Input
-                id=&quot;email&quot;
-                type=&quot;email&quot;
-                placeholder=&quot;exemple@courriel.com&quot;
-                value={formData.courriel}
-                onChange={(e) =&gt;
-                  setFormData({ ...formData, courriel: e.target.value })
-                }
-              /&gt;
-            &lt;/div&gt;
-            &lt;div className=&quot;grid gap-2&quot;&gt;
-              &lt;Label htmlFor=&quot;password&quot;&gt;Mot de passe&lt;/Label&gt;
-              &lt;div className=&quot;relative&quot;&gt;
-                &lt;Input
-                  id=&quot;password&quot;
-                  type={showPassword ? &quot;text&quot; : &quot;password&quot;}
-                  placeholder=&quot;Mot de passe&quot;
-                  value={formData.mot_de_passe}
-                  onChange={(e) =&gt;
-                    setFormData({ ...formData, mot_de_passe: e.target.value })
-                  }
-                /&gt;
-                &lt;Button
-                  type=&quot;button&quot;
-                  variant=&quot;ghost&quot;
-                  size=&quot;icon&quot;
-                  className=&quot;absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent&quot;
-                  onClick={() =&gt; setShowPassword(!showPassword)}
-                &gt;
-                  {showPassword ? (
-                    &lt;EyeOffIcon className=&quot;h-4 w-4 text-muted-foreground&quot; /&gt;
-                  ) : (
-                    &lt;EyeIcon className=&quot;h-4 w-4 text-muted-foreground&quot; /&gt;
-                  )}
-                &lt;/Button&gt;
-              &lt;/div&gt;
-            &lt;/div&gt;
-          &lt;/div&gt;
-          {error &amp;&amp; (
-            &lt;div className=&quot;text-red-500 text-sm text-center mt-2 p-2&quot;&gt;{error}&lt;/div&gt;
-          )}
-          &lt;DialogFooter&gt;
-            &lt;div className=&quot;py-2 w-full&quot;&gt;
-              &lt;Button type=&quot;submit&quot; className=&quot;w-full&quot;&gt;
-                Connexion
-              &lt;/Button&gt;
-            &lt;/div&gt;
-          &lt;/DialogFooter&gt;
-        &lt;/form&gt;
-      &lt;/DialogContent&gt;
-    &lt;/Dialog&gt;
-  );
-};
-
-export default SignInModal;</file><file path="frontend/src/Modal/user-profile-modal.tsx">import { useState } from &quot;react&quot;;
-import tomHankImage from &quot;../../assets/tom-hanks.jpg&quot;;
-import {
-  Dialog,
-  DialogContent,
-  DialogDescription,
-  DialogFooter,
-  DialogHeader,
-  DialogTitle,
-} from &quot;../components/ui/dialog&quot;;
-
-const UserProfile = () =&gt; {
-  const [isDialogOpen, setIsDialogOpen] = useState(false);
-
-  const openDialog = () =&gt; setIsDialogOpen(true);
-  const closeDialog = () =&gt; setIsDialogOpen(false);
-
-  return (
-    &lt;div className=&quot;w-screen h-screen flex justify-center items-center&quot;&gt;
-      &lt;button onClick={openDialog} className=&quot;bg-blue-500 p-2 rounded text-white&quot;&gt;
-        Open Profile
-      &lt;/button&gt;
-      {isDialogOpen &amp;&amp; (
-        &lt;Dialog onClose={closeDialog}&gt;
-          &lt;DialogContent&gt;
-            &lt;DialogHeader&gt;
-              &lt;DialogTitle&gt;User Profile&lt;/DialogTitle&gt;
-            &lt;/DialogHeader&gt;
-            &lt;DialogContent&gt;
-              &lt;img src={tomHankImage} alt=&quot;Tom Hanks&quot; className=&quot;w-full h-auto rounded mb-4&quot; /&gt;
-              &lt;DialogDescription&gt;
-                &lt;p&gt;Name: Tom Hanks&lt;/p&gt;
-                &lt;p&gt;Email: tom.hanks@example.com&lt;/p&gt;
-              &lt;/DialogDescription&gt;
-            &lt;/DialogContent&gt;
-            &lt;DialogFooter&gt;
-              &lt;button onClick={closeDialog} className=&quot;bg-red-500 p-2 rounded text-white&quot;&gt;
-                Close
-              &lt;/button&gt;
-            &lt;/DialogFooter&gt;
-          &lt;/DialogContent&gt;
-        &lt;/Dialog&gt;
-      )}
-    &lt;/div&gt;
-  );
-};
-
-export default UserProfile;</file><file path="frontend/src/App.css">.logo {
-  height: 6em;
-  padding: 1.5em;
-  will-change: filter;
-  transition: filter 300ms;
-}
-.logo:hover {
-  filter: drop-shadow(0 0 2em #646cffaa);
-}
-.logo.react:hover {
-  filter: drop-shadow(0 0 2em #61dafbaa);
-}
-
-@keyframes logo-spin {
-  from {
-    transform: rotate(0deg);
-  }
-  to {
-    transform: rotate(360deg);
-  }
-}
-
-@media (prefers-reduced-motion: no-preference) {
-  a:nth-of-type(2) .logo {
-    animation: logo-spin infinite 20s linear;
-  }
-}
-
-.card {
-  padding: 2em;
-}
-
-.read-the-docs {
-  color: #888;
-}</file><file path="frontend/src/App.tsx">import &quot;./App.css&quot;;
-import { BrowserRouter as Router, Route, Routes } from &quot;react-router-dom&quot;;
-import LandingPage from &quot;./components/LandingPage&quot;;
-import TestPage from &quot;./components/TestPage&quot;;
-import Dashboard from &quot;./components/Dashboard&quot;;
-import UserProfilePage from &quot;./components/UserProfile&quot;;
-
-function App() {
-  return (
-    &lt;Router&gt;
-      &lt;div className=&quot;min-h-screen bg-background&quot;&gt;
-        &lt;Routes&gt;
-          &lt;Route path=&quot;/&quot; element={&lt;LandingPage /&gt;} /&gt;
-          &lt;Route path=&quot;/test&quot; element={&lt;TestPage /&gt;} /&gt;
-          &lt;Route path=&quot;/Dashboard&quot; element={&lt;Dashboard /&gt;} /&gt;
-          &lt;Route path=&quot;/profile&quot; element={&lt;UserProfilePage /&gt;} /&gt;
-        &lt;/Routes&gt;
-      &lt;/div&gt;
-    &lt;/Router&gt;
-  );
-}
-
-export default App;</file><file path="frontend/src/index.css">@tailwind base;
-@tailwind components;
-@tailwind utilities;
-
-html, body, root {
-  padding: 0;
-  margin: 0;
-}
-
-:root {
-  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
-  line-height: 1.5;
-  font-weight: 400;
-
-  color-scheme: light dark;
-  color: rgba(255, 255, 255, 0.87);
-  background-color: #242424;
-
-  font-synthesis: none;
-  text-rendering: optimizeLegibility;
-  -webkit-font-smoothing: antialiased;
-  -moz-osx-font-smoothing: grayscale;
-}
-
-a {
-  font-weight: 500;
-  color: #646cff;
-  text-decoration: inherit;
-}
-a:hover {
-  color: #535bf2;
-}
-
-body {
-  margin: 0;
-  display: flex;
-  place-items: center;
-  min-width: 320px;
-  min-height: 100vh;
-  padding: 0;
-}
-
-h1 {
-  font-size: 3.2em;
-  line-height: 1.1;
-}
-
-button {
-  border-radius: 8px;
-  border: 1px solid transparent;
-  padding: 0.6em 1.2em;
-  font-size: 1em;
-  font-weight: 500;
-  font-family: inherit;
-  background-color: #1a1a1a;
-  cursor: pointer;
-  transition: border-color 0.25s;
-}
-button:hover {
-  border-color: #646cff;
-}
-button:focus,
-button:focus-visible {
-  outline: 4px auto -webkit-focus-ring-color;
-}
-
-@media (prefers-color-scheme: light) {
-  :root {
-    color: #213547;
-    background-color: #ffffff;
-  }
-  a:hover {
-    color: #747bff;
-  }
-  button {
-    background-color: #f9f9f9;
-  }
-}
-
-@layer base {
-  :root {
-    --background: 0 0% 100%;
-    --foreground: 0 0% 3.9%;
-    --card: 0 0% 100%;
-    --card-foreground: 0 0% 3.9%;
-    --popover: 0 0% 100%;
-    --popover-foreground: 0 0% 3.9%;
-    --primary: 0 0% 9%;
-    --primary-foreground: 0 0% 98%;
-    --secondary: 0 0% 96.1%;
-    --secondary-foreground: 0 0% 9%;
-    --muted: 0 0% 96.1%;
-    --muted-foreground: 0 0% 45.1%;
-    --accent: 0 0% 96.1%;
-    --accent-foreground: 0 0% 9%;
-    --destructive: 0 84.2% 60.2%;
-    --destructive-foreground: 0 0% 98%;
-    --border: 0 0% 89.8%;
-    --input: 0 0% 89.8%;
-    --ring: 0 0% 3.9%;
-    --chart-1: 12 76% 61%;
-    --chart-2: 173 58% 39%;
-    --chart-3: 197 37% 24%;
-    --chart-4: 43 74% 66%;
-    --chart-5: 27 87% 67%;
-    --radius: 0.5rem;
-  }
-  .dark {
-    --background: 0 0% 3.9%;
-    --foreground: 0 0% 98%;
-    --card: 0 0% 3.9%;
-    --card-foreground: 0 0% 98%;
-    --popover: 0 0% 3.9%;
-    --popover-foreground: 0 0% 98%;
-    --primary: 0 0% 98%;
-    --primary-foreground: 0 0% 9%;
-    --secondary: 0 0% 14.9%;
-    --secondary-foreground: 0 0% 98%;
-    --muted: 0 0% 14.9%;
-    --muted-foreground: 0 0% 63.9%;
-    --accent: 0 0% 14.9%;
-    --accent-foreground: 0 0% 98%;
-    --destructive: 0 62.8% 30.6%;
-    --destructive-foreground: 0 0% 98%;
-    --border: 0 0% 14.9%;
-    --input: 0 0% 14.9%;
-    --ring: 0 0% 83.1%;
-    --chart-1: 220 70% 50%;
-    --chart-2: 160 60% 45%;
-    --chart-3: 30 80% 55%;
-    --chart-4: 280 65% 60%;
-    --chart-5: 340 75% 55%;
-  }
-}
-
-@layer base {
-  * {
-    @apply border-border;
-  }
-  body {
-    @apply bg-background text-foreground;
-  }
-}
-
-
-
-@layer base {
-  * {
-    @apply border-border outline-ring/50;
-  }
-  body {
-    @apply bg-background text-foreground;
-  }
-}</file><file path="frontend/src/main.tsx">import { StrictMode } from &apos;react&apos;
-import { createRoot } from &apos;react-dom/client&apos;
-import &apos;./index.css&apos;
-import App from &apos;./App.tsx&apos;
-
-createRoot(document.getElementById(&apos;root&apos;)!).render(
-  &lt;StrictMode&gt;
-    &lt;App /&gt;
-  &lt;/StrictMode&gt;,
-)</file><file path="frontend/src/vite-env.d.ts">/// &lt;reference types=&quot;vite/client&quot; /&gt;</file><file path="frontend/.env">VITE_BACKEND_URL=http://localhost:8000</file><file path="frontend/.gitignore"># Logs
-logs
-*.log
-npm-debug.log*
-yarn-debug.log*
-yarn-error.log*
-pnpm-debug.log*
-lerna-debug.log*
-
-node_modules
-dist
-dist-ssr
-*.local
-
-# Editor directories and files
-.vscode/*
-!.vscode/extensions.json
-.idea
-.DS_Store
-*.suo
-*.ntvs*
-*.njsproj
-*.sln
-*.sw?</file><file path="frontend/components.json">{
-  &quot;$schema&quot;: &quot;https://ui.shadcn.com/schema.json&quot;,
-  &quot;style&quot;: &quot;default&quot;,
-  &quot;rsc&quot;: false,
-  &quot;tsx&quot;: true,
-  &quot;tailwind&quot;: {
-    &quot;config&quot;: &quot;tailwind.config.js&quot;,
-    &quot;css&quot;: &quot;src/index.css&quot;,
-    &quot;baseColor&quot;: &quot;neutral&quot;,
-    &quot;cssVariables&quot;: true,
-    &quot;prefix&quot;: &quot;&quot;
-  },
-  &quot;aliases&quot;: {
-    &quot;components&quot;: &quot;@/components&quot;,
-    &quot;utils&quot;: &quot;@/lib/utils&quot;,
-    &quot;ui&quot;: &quot;@/components/ui&quot;,
-    &quot;lib&quot;: &quot;@/lib&quot;,
-    &quot;hooks&quot;: &quot;@/hooks&quot;
-  },
-  &quot;iconLibrary&quot;: &quot;lucide&quot;
-}</file><file path="frontend/eslint.config.js">import js from &apos;@eslint/js&apos;
-import globals from &apos;globals&apos;
-import reactHooks from &apos;eslint-plugin-react-hooks&apos;
-import reactRefresh from &apos;eslint-plugin-react-refresh&apos;
-import tseslint from &apos;typescript-eslint&apos;
-
-export default tseslint.config(
-  { ignores: [&apos;dist&apos;] },
-  {
-    extends: [js.configs.recommended, ...tseslint.configs.recommended],
-    files: [&apos;**/*.{ts,tsx}&apos;],
-    languageOptions: {
-      ecmaVersion: 2020,
-      globals: globals.browser,
-    },
-    plugins: {
-      &apos;react-hooks&apos;: reactHooks,
-      &apos;react-refresh&apos;: reactRefresh,
-    },
-    rules: {
-      ...reactHooks.configs.recommended.rules,
-      &apos;react-refresh/only-export-components&apos;: [
-        &apos;warn&apos;,
-        { allowConstantExport: true },
-      ],
-    },
-  },
-)</file><file path="frontend/index.html">&lt;!doctype html&gt;
-&lt;html lang=&quot;en&quot;&gt;
-  &lt;head&gt;
-    &lt;meta charset=&quot;UTF-8&quot; /&gt;
-    &lt;link rel=&quot;icon&quot; type=&quot;image/svg+xml&quot; href=&quot;/vite.svg&quot; /&gt;
-    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;
-    &lt;title&gt;Vite + React + TS&lt;/title&gt;
-  &lt;/head&gt;
-  &lt;body&gt;
-    &lt;div id=&quot;root&quot;&gt;&lt;/div&gt;
-    &lt;script type=&quot;module&quot; src=&quot;/src/main.tsx&quot;&gt;&lt;/script&gt;
-  &lt;/body&gt;
-&lt;/html&gt;</file><file path="frontend/package.json">{
-  &quot;name&quot;: &quot;gti660&quot;,
-  &quot;private&quot;: true,
-  &quot;version&quot;: &quot;0.0.0&quot;,
-  &quot;type&quot;: &quot;module&quot;,
-  &quot;scripts&quot;: {
-    &quot;dev&quot;: &quot;vite&quot;,
-    &quot;build&quot;: &quot;tsc -b &amp;&amp; vite build&quot;,
-    &quot;lint&quot;: &quot;eslint .&quot;,
-    &quot;preview&quot;: &quot;vite preview&quot;
-  },
-  &quot;dependencies&quot;: {
-    &quot;@radix-ui/react-dialog&quot;: &quot;^1.1.6&quot;,
-    &quot;@radix-ui/react-label&quot;: &quot;^2.1.2&quot;,
-    &quot;@radix-ui/react-scroll-area&quot;: &quot;^1.2.3&quot;,
-    &quot;@radix-ui/react-slider&quot;: &quot;^1.2.3&quot;,
-    &quot;@radix-ui/react-slot&quot;: &quot;^1.1.1&quot;,
-    &quot;@radix-ui/react-tabs&quot;: &quot;^1.1.3&quot;,
-    &quot;axios&quot;: &quot;^1.7.9&quot;,
-    &quot;class-variance-authority&quot;: &quot;^0.7.1&quot;,
-    &quot;clsx&quot;: &quot;^2.1.1&quot;,
-    &quot;crypto-js&quot;: &quot;^4.2.0&quot;,
-    &quot;cryptojs&quot;: &quot;^2.5.3&quot;,
-    &quot;loadash&quot;: &quot;^1.0.0&quot;,
-    &quot;lodash&quot;: &quot;^4.17.21&quot;,
-    &quot;lucide-react&quot;: &quot;^0.474.0&quot;,
-    &quot;md5&quot;: &quot;^2.3.0&quot;,
-    &quot;react&quot;: &quot;^18.3.1&quot;,
-    &quot;react-dom&quot;: &quot;^18.3.1&quot;,
-    &quot;react-router-dom&quot;: &quot;^7.1.5&quot;,
-    &quot;tailwind-merge&quot;: &quot;^3.0.1&quot;,
-    &quot;tailwindcss-animate&quot;: &quot;^1.0.7&quot;,
-    &quot;zod&quot;: &quot;^3.24.1&quot;,
-    &quot;zustand&quot;: &quot;^5.0.3&quot;
-  },
-  &quot;devDependencies&quot;: {
-    &quot;@eslint/js&quot;: &quot;^9.17.0&quot;,
-    &quot;@types/lodash&quot;: &quot;^4.17.15&quot;,
-    &quot;@types/md5&quot;: &quot;^2.3.5&quot;,
-    &quot;@types/node&quot;: &quot;^22.13.1&quot;,
-    &quot;@types/react&quot;: &quot;^18.3.18&quot;,
-    &quot;@types/react-dom&quot;: &quot;^18.3.5&quot;,
-    &quot;@vitejs/plugin-react&quot;: &quot;^4.3.4&quot;,
-    &quot;autoprefixer&quot;: &quot;^10.4.20&quot;,
-    &quot;eslint&quot;: &quot;^9.17.0&quot;,
-    &quot;eslint-plugin-react-hooks&quot;: &quot;^5.0.0&quot;,
-    &quot;eslint-plugin-react-refresh&quot;: &quot;^0.4.16&quot;,
-    &quot;globals&quot;: &quot;^15.14.0&quot;,
-    &quot;postcss&quot;: &quot;^8.5.1&quot;,
-    &quot;tailwindcss&quot;: &quot;3&quot;,
-    &quot;typescript&quot;: &quot;~5.6.2&quot;,
-    &quot;typescript-eslint&quot;: &quot;^8.18.2&quot;,
-    &quot;vite&quot;: &quot;^6.0.5&quot;
-  }
-}</file><file path="frontend/postcss.config.js">export default {
-  plugins: {
-    tailwindcss: {},
-    autoprefixer: {},
-  },
-}</file><file path="frontend/README.md"># React + TypeScript + Vite
-
-This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.
-
-Currently, two official plugins are available:
-
-- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
-- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh
-
-## Expanding the ESLint configuration
-
-If you are developing a production application, we recommend updating the configuration to enable type aware lint rules:
-
-- Configure the top-level `parserOptions` property like this:
-
-```js
-export default tseslint.config({
-  languageOptions: {
-    // other options...
-    parserOptions: {
-      project: [&apos;./tsconfig.node.json&apos;, &apos;./tsconfig.app.json&apos;],
-      tsconfigRootDir: import.meta.dirname,
-    },
-  },
-})
-```
-
-- Replace `tseslint.configs.recommended` to `tseslint.configs.recommendedTypeChecked` or `tseslint.configs.strictTypeChecked`
-- Optionally add `...tseslint.configs.stylisticTypeChecked`
-- Install [eslint-plugin-react](https://github.com/jsx-eslint/eslint-plugin-react) and update the config:
-
-```js
-// eslint.config.js
-import react from &apos;eslint-plugin-react&apos;
-
-export default tseslint.config({
-  // Set the react version
-  settings: { react: { version: &apos;18.3&apos; } },
-  plugins: {
-    // Add the react plugin
-    react,
-  },
-  rules: {
-    // other rules...
-    // Enable its recommended rules
-    ...react.configs.recommended.rules,
-    ...react.configs[&apos;jsx-runtime&apos;].rules,
-  },
-})
-```</file><file path="frontend/repomix-output.xml">&lt;repomix&gt;This file is a merged representation of the entire codebase, combining all repository files into a single document.
-Generated by Repomix on: 2025-02-20T22:36:03.388Z&lt;directory_structure&gt;hooks/
-  use-modal-store.ts
-public/
-  vite.svg
-src/
-  assets/
-    react.svg
-  components/
-    ui/
-      button.tsx
-      card.tsx
-      dialog.tsx
-      input.tsx
-      label.tsx
-      slider.tsx
-    Dashboard.tsx
-    Header.tsx
-    LandingPage.tsx
-    MovieCard.tsx
-    Navbar.tsx
-    SignIn.tsx
-    TestPage.tsx
-  lib/
-    utils.ts
-  Modal/
-    sign-in-modal.tsx
-  App.css
-  App.tsx
-  index.css
-  main.tsx
-  vite-env.d.ts
-.gitignore
-components.json
-eslint.config.js
-index.html
-package.json
-postcss.config.js
-README.md
-tailwind.config.js
-tsconfig.app.json
-tsconfig.json
-tsconfig.node.json
-vite.config.ts&lt;/directory_structure&gt;&lt;files&gt;This section contains the contents of the repository&amp;apos;s files.&lt;file path=&quot;hooks/use-modal-store.ts&quot;&gt;import { create } from &amp;apos;zustand&amp;apos;;
-
-const useModalStore = create((set) =&amp;gt; ({
-  
-}));&lt;/file&gt;&lt;file path=&quot;public/vite.svg&quot;&gt;&amp;lt;svg xmlns=&amp;quot;http://www.w3.org/2000/svg&amp;quot; xmlns:xlink=&amp;quot;http://www.w3.org/1999/xlink&amp;quot; aria-hidden=&amp;quot;true&amp;quot; role=&amp;quot;img&amp;quot; class=&amp;quot;iconify iconify--logos&amp;quot; width=&amp;quot;31.88&amp;quot; height=&amp;quot;32&amp;quot; preserveAspectRatio=&amp;quot;xMidYMid meet&amp;quot; viewBox=&amp;quot;0 0 256 257&amp;quot;&amp;gt;&amp;lt;defs&amp;gt;&amp;lt;linearGradient id=&amp;quot;IconifyId1813088fe1fbc01fb466&amp;quot; x1=&amp;quot;-.828%&amp;quot; x2=&amp;quot;57.636%&amp;quot; y1=&amp;quot;7.652%&amp;quot; y2=&amp;quot;78.411%&amp;quot;&amp;gt;&amp;lt;stop offset=&amp;quot;0%&amp;quot; stop-color=&amp;quot;#41D1FF&amp;quot;&amp;gt;&amp;lt;/stop&amp;gt;&amp;lt;stop offset=&amp;quot;100%&amp;quot; stop-color=&amp;quot;#BD34FE&amp;quot;&amp;gt;&amp;lt;/stop&amp;gt;&amp;lt;/linearGradient&amp;gt;&amp;lt;linearGradient id=&amp;quot;IconifyId1813088fe1fbc01fb467&amp;quot; x1=&amp;quot;43.376%&amp;quot; x2=&amp;quot;50.316%&amp;quot; y1=&amp;quot;2.242%&amp;quot; y2=&amp;quot;89.03%&amp;quot;&amp;gt;&amp;lt;stop offset=&amp;quot;0%&amp;quot; stop-color=&amp;quot;#FFEA83&amp;quot;&amp;gt;&amp;lt;/stop&amp;gt;&amp;lt;stop offset=&amp;quot;8.333%&amp;quot; stop-color=&amp;quot;#FFDD35&amp;quot;&amp;gt;&amp;lt;/stop&amp;gt;&amp;lt;stop offset=&amp;quot;100%&amp;quot; stop-color=&amp;quot;#FFA800&amp;quot;&amp;gt;&amp;lt;/stop&amp;gt;&amp;lt;/linearGradient&amp;gt;&amp;lt;/defs&amp;gt;&amp;lt;path fill=&amp;quot;url(#IconifyId1813088fe1fbc01fb466)&amp;quot; d=&amp;quot;M255.153 37.938L134.897 252.976c-2.483 4.44-8.862 4.466-11.382.048L.875 37.958c-2.746-4.814 1.371-10.646 6.827-9.67l120.385 21.517a6.537 6.537 0 0 0 2.322-.004l117.867-21.483c5.438-.991 9.574 4.796 6.877 9.62Z&amp;quot;&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;path fill=&amp;quot;url(#IconifyId1813088fe1fbc01fb467)&amp;quot; d=&amp;quot;M185.432.063L96.44 17.501a3.268 3.268 0 0 0-2.634 3.014l-5.474 92.456a3.268 3.268 0 0 0 3.997 3.378l24.777-5.718c2.318-.535 4.413 1.507 3.936 3.838l-7.361 36.047c-.495 2.426 1.782 4.5 4.151 3.78l15.304-4.649c2.372-.72 4.652 1.36 4.15 3.788l-11.698 56.621c-.732 3.542 3.979 5.473 5.943 2.437l1.313-2.028l72.516-144.72c1.215-2.423-.88-5.186-3.54-4.672l-25.505 4.922c-2.396.462-4.435-1.77-3.759-4.114l16.646-57.705c.677-2.35-1.37-4.583-3.769-4.113Z&amp;quot;&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;&lt;/file&gt;&lt;file path=&quot;src/assets/react.svg&quot;&gt;&amp;lt;svg xmlns=&amp;quot;http://www.w3.org/2000/svg&amp;quot; xmlns:xlink=&amp;quot;http://www.w3.org/1999/xlink&amp;quot; aria-hidden=&amp;quot;true&amp;quot; role=&amp;quot;img&amp;quot; class=&amp;quot;iconify iconify--logos&amp;quot; width=&amp;quot;35.93&amp;quot; height=&amp;quot;32&amp;quot; preserveAspectRatio=&amp;quot;xMidYMid meet&amp;quot; viewBox=&amp;quot;0 0 256 228&amp;quot;&amp;gt;&amp;lt;path fill=&amp;quot;#00D8FF&amp;quot; d=&amp;quot;M210.483 73.824a171.49 171.49 0 0 0-8.24-2.597c.465-1.9.893-3.777 1.273-5.621c6.238-30.281 2.16-54.676-11.769-62.708c-13.355-7.7-35.196.329-57.254 19.526a171.23 171.23 0 0 0-6.375 5.848a155.866 155.866 0 0 0-4.241-3.917C100.759 3.829 77.587-4.822 63.673 3.233C50.33 10.957 46.379 33.89 51.995 62.588a170.974 170.974 0 0 0 1.892 8.48c-3.28.932-6.445 1.924-9.474 2.98C17.309 83.498 0 98.307 0 113.668c0 15.865 18.582 31.778 46.812 41.427a145.52 145.52 0 0 0 6.921 2.165a167.467 167.467 0 0 0-2.01 9.138c-5.354 28.2-1.173 50.591 12.134 58.266c13.744 7.926 36.812-.22 59.273-19.855a145.567 145.567 0 0 0 5.342-4.923a168.064 168.064 0 0 0 6.92 6.314c21.758 18.722 43.246 26.282 56.54 18.586c13.731-7.949 18.194-32.003 12.4-61.268a145.016 145.016 0 0 0-1.535-6.842c1.62-.48 3.21-.974 4.76-1.488c29.348-9.723 48.443-25.443 48.443-41.52c0-15.417-17.868-30.326-45.517-39.844Zm-6.365 70.984c-1.4.463-2.836.91-4.3 1.345c-3.24-10.257-7.612-21.163-12.963-32.432c5.106-11 9.31-21.767 12.459-31.957c2.619.758 5.16 1.557 7.61 2.4c23.69 8.156 38.14 20.213 38.14 29.504c0 9.896-15.606 22.743-40.946 31.14Zm-10.514 20.834c2.562 12.94 2.927 24.64 1.23 33.787c-1.524 8.219-4.59 13.698-8.382 15.893c-8.067 4.67-25.32-1.4-43.927-17.412a156.726 156.726 0 0 1-6.437-5.87c7.214-7.889 14.423-17.06 21.459-27.246c12.376-1.098 24.068-2.894 34.671-5.345a134.17 134.17 0 0 1 1.386 6.193ZM87.276 214.515c-7.882 2.783-14.16 2.863-17.955.675c-8.075-4.657-11.432-22.636-6.853-46.752a156.923 156.923 0 0 1 1.869-8.499c10.486 2.32 22.093 3.988 34.498 4.994c7.084 9.967 14.501 19.128 21.976 27.15a134.668 134.668 0 0 1-4.877 4.492c-9.933 8.682-19.886 14.842-28.658 17.94ZM50.35 144.747c-12.483-4.267-22.792-9.812-29.858-15.863c-6.35-5.437-9.555-10.836-9.555-15.216c0-9.322 13.897-21.212 37.076-29.293c2.813-.98 5.757-1.905 8.812-2.773c3.204 10.42 7.406 21.315 12.477 32.332c-5.137 11.18-9.399 22.249-12.634 32.792a134.718 134.718 0 0 1-6.318-1.979Zm12.378-84.26c-4.811-24.587-1.616-43.134 6.425-47.789c8.564-4.958 27.502 2.111 47.463 19.835a144.318 144.318 0 0 1 3.841 3.545c-7.438 7.987-14.787 17.08-21.808 26.988c-12.04 1.116-23.565 2.908-34.161 5.309a160.342 160.342 0 0 1-1.76-7.887Zm110.427 27.268a347.8 347.8 0 0 0-7.785-12.803c8.168 1.033 15.994 2.404 23.343 4.08c-2.206 7.072-4.956 14.465-8.193 22.045a381.151 381.151 0 0 0-7.365-13.322Zm-45.032-43.861c5.044 5.465 10.096 11.566 15.065 18.186a322.04 322.04 0 0 0-30.257-.006c4.974-6.559 10.069-12.652 15.192-18.18ZM82.802 87.83a323.167 323.167 0 0 0-7.227 13.238c-3.184-7.553-5.909-14.98-8.134-22.152c7.304-1.634 15.093-2.97 23.209-3.984a321.524 321.524 0 0 0-7.848 12.897Zm8.081 65.352c-8.385-.936-16.291-2.203-23.593-3.793c2.26-7.3 5.045-14.885 8.298-22.6a321.187 321.187 0 0 0 7.257 13.246c2.594 4.48 5.28 8.868 8.038 13.147Zm37.542 31.03c-5.184-5.592-10.354-11.779-15.403-18.433c4.902.192 9.899.29 14.978.29c5.218 0 10.376-.117 15.453-.343c-4.985 6.774-10.018 12.97-15.028 18.486Zm52.198-57.817c3.422 7.8 6.306 15.345 8.596 22.52c-7.422 1.694-15.436 3.058-23.88 4.071a382.417 382.417 0 0 0 7.859-13.026a347.403 347.403 0 0 0 7.425-13.565Zm-16.898 8.101a358.557 358.557 0 0 1-12.281 19.815a329.4 329.4 0 0 1-23.444.823c-7.967 0-15.716-.248-23.178-.732a310.202 310.202 0 0 1-12.513-19.846h.001a307.41 307.41 0 0 1-10.923-20.627a310.278 310.278 0 0 1 10.89-20.637l-.001.001a307.318 307.318 0 0 1 12.413-19.761c7.613-.576 15.42-.876 23.31-.876H128c7.926 0 15.743.303 23.354.883a329.357 329.357 0 0 1 12.335 19.695a358.489 358.489 0 0 1 11.036 20.54a329.472 329.472 0 0 1-11 20.722Zm22.56-122.124c8.572 4.944 11.906 24.881 6.52 51.026c-.344 1.668-.73 3.367-1.15 5.09c-10.622-2.452-22.155-4.275-34.23-5.408c-7.034-10.017-14.323-19.124-21.64-27.008a160.789 160.789 0 0 1 5.888-5.4c18.9-16.447 36.564-22.941 44.612-18.3ZM128 90.808c12.625 0 22.86 10.235 22.86 22.86s-10.235 22.86-22.86 22.86s-22.86-10.235-22.86-22.86s10.235-22.86 22.86-22.86Z&amp;quot;&amp;gt;&amp;lt;/path&amp;gt;&amp;lt;/svg&amp;gt;&lt;/file&gt;&lt;file path=&quot;src/components/ui/button.tsx&quot;&gt;import * as React from &amp;quot;react&amp;quot;
-import { Slot } from &amp;quot;@radix-ui/react-slot&amp;quot;
-import { cva, type VariantProps } from &amp;quot;class-variance-authority&amp;quot;
-
-import { cn } from &amp;quot;@/lib/utils&amp;quot;
-
-const buttonVariants = cva(
-  &amp;quot;inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&amp;amp;_svg]:pointer-events-none [&amp;amp;_svg]:size-4 [&amp;amp;_svg]:shrink-0&amp;quot;,
-  {
-    variants: {
-      variant: {
-        default: &amp;quot;bg-primary text-primary-foreground hover:bg-primary/90&amp;quot;,
-        destructive:
-          &amp;quot;bg-destructive text-destructive-foreground hover:bg-destructive/90&amp;quot;,
-        outline:
-          &amp;quot;border border-input bg-background hover:bg-accent hover:text-accent-foreground&amp;quot;,
-        secondary:
-          &amp;quot;bg-secondary text-secondary-foreground hover:bg-secondary/80&amp;quot;,
-        ghost: &amp;quot;hover:bg-accent hover:text-accent-foreground&amp;quot;,
-        link: &amp;quot;text-primary underline-offset-4 hover:underline&amp;quot;,
-      },
-      size: {
-        default: &amp;quot;h-10 px-4 py-2&amp;quot;,
-        sm: &amp;quot;h-9 rounded-md px-3&amp;quot;,
-        lg: &amp;quot;h-11 rounded-md px-8&amp;quot;,
-        icon: &amp;quot;h-10 w-10&amp;quot;,
-      },
-    },
-    defaultVariants: {
-      variant: &amp;quot;default&amp;quot;,
-      size: &amp;quot;default&amp;quot;,
-    },
-  }
-)
-
-export interface ButtonProps
-  extends React.ButtonHTMLAttributes&amp;lt;HTMLButtonElement&amp;gt;,
-    VariantProps&amp;lt;typeof buttonVariants&amp;gt; {
-  asChild?: boolean
-}
-
-const Button = React.forwardRef&amp;lt;HTMLButtonElement, ButtonProps&amp;gt;(
-  ({ className, variant, size, asChild = false, ...props }, ref) =&amp;gt; {
-    const Comp = asChild ? Slot : &amp;quot;button&amp;quot;
-    return (
-      &amp;lt;Comp
-        className={cn(buttonVariants({ variant, size, className }))}
-        ref={ref}
-        {...props}
-      /&amp;gt;
-    )
-  }
-)
-Button.displayName = &amp;quot;Button&amp;quot;
-
-export { Button, buttonVariants }&lt;/file&gt;&lt;file path=&quot;src/components/ui/card.tsx&quot;&gt;import * as React from &amp;quot;react&amp;quot;
-
-import { cn } from &amp;quot;@/lib/utils&amp;quot;
-
-const Card = React.forwardRef&amp;lt;
-  HTMLDivElement,
-  React.HTMLAttributes&amp;lt;HTMLDivElement&amp;gt;
-&amp;gt;(({ className, ...props }, ref) =&amp;gt; (
-  &amp;lt;div
-    ref={ref}
-    className={cn(
-      &amp;quot;rounded-lg border bg-card text-card-foreground shadow-sm&amp;quot;,
-      className
-    )}
-    {...props}
-  /&amp;gt;
-))
-Card.displayName = &amp;quot;Card&amp;quot;
-
-const CardHeader = React.forwardRef&amp;lt;
-  HTMLDivElement,
-  React.HTMLAttributes&amp;lt;HTMLDivElement&amp;gt;
-&amp;gt;(({ className, ...props }, ref) =&amp;gt; (
-  &amp;lt;div
-    ref={ref}
-    className={cn(&amp;quot;flex flex-col space-y-1.5 p-6&amp;quot;, className)}
-    {...props}
-  /&amp;gt;
-))
-CardHeader.displayName = &amp;quot;CardHeader&amp;quot;
-
-const CardTitle = React.forwardRef&amp;lt;
-  HTMLDivElement,
-  React.HTMLAttributes&amp;lt;HTMLDivElement&amp;gt;
-&amp;gt;(({ className, ...props }, ref) =&amp;gt; (
-  &amp;lt;div
-    ref={ref}
-    className={cn(
-      &amp;quot;text-2xl font-semibold leading-none tracking-tight&amp;quot;,
-      className
-    )}
-    {...props}
-  /&amp;gt;
-))
-CardTitle.displayName = &amp;quot;CardTitle&amp;quot;
-
-const CardDescription = React.forwardRef&amp;lt;
-  HTMLDivElement,
-  React.HTMLAttributes&amp;lt;HTMLDivElement&amp;gt;
-&amp;gt;(({ className, ...props }, ref) =&amp;gt; (
-  &amp;lt;div
-    ref={ref}
-    className={cn(&amp;quot;text-sm text-muted-foreground&amp;quot;, className)}
-    {...props}
-  /&amp;gt;
-))
-CardDescription.displayName = &amp;quot;CardDescription&amp;quot;
-
-const CardContent = React.forwardRef&amp;lt;
-  HTMLDivElement,
-  React.HTMLAttributes&amp;lt;HTMLDivElement&amp;gt;
-&amp;gt;(({ className, ...props }, ref) =&amp;gt; (
-  &amp;lt;div ref={ref} className={cn(&amp;quot;p-6 pt-0&amp;quot;, className)} {...props} /&amp;gt;
-))
-CardContent.displayName = &amp;quot;CardContent&amp;quot;
-
-const CardFooter = React.forwardRef&amp;lt;
-  HTMLDivElement,
-  React.HTMLAttributes&amp;lt;HTMLDivElement&amp;gt;
-&amp;gt;(({ className, ...props }, ref) =&amp;gt; (
-  &amp;lt;div
-    ref={ref}
-    className={cn(&amp;quot;flex items-center p-6 pt-0&amp;quot;, className)}
-    {...props}
-  /&amp;gt;
-))
-CardFooter.displayName = &amp;quot;CardFooter&amp;quot;
-
-export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }&lt;/file&gt;&lt;file path=&quot;src/components/ui/dialog.tsx&quot;&gt;import * as React from &amp;quot;react&amp;quot;
-import * as DialogPrimitive from &amp;quot;@radix-ui/react-dialog&amp;quot;
-import { X } from &amp;quot;lucide-react&amp;quot;
-
-import { cn } from &amp;quot;@/lib/utils&amp;quot;
-
-const Dialog = DialogPrimitive.Root
-
-const DialogTrigger = DialogPrimitive.Trigger
-
-const DialogPortal = DialogPrimitive.Portal
-
-const DialogClose = DialogPrimitive.Close
-
-const DialogOverlay = React.forwardRef&amp;lt;
-  React.ElementRef&amp;lt;typeof DialogPrimitive.Overlay&amp;gt;,
-  React.ComponentPropsWithoutRef&amp;lt;typeof DialogPrimitive.Overlay&amp;gt;
-&amp;gt;(({ className, ...props }, ref) =&amp;gt; (
-  &amp;lt;DialogPrimitive.Overlay
-    ref={ref}
-    className={cn(
-      &amp;quot;fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0&amp;quot;,
-      className
-    )}
-    {...props}
-  /&amp;gt;
-))
-DialogOverlay.displayName = DialogPrimitive.Overlay.displayName
-
-const DialogContent = React.forwardRef&amp;lt;
-  React.ElementRef&amp;lt;typeof DialogPrimitive.Content&amp;gt;,
-  React.ComponentPropsWithoutRef&amp;lt;typeof DialogPrimitive.Content&amp;gt;
-&amp;gt;(({ className, children, ...props }, ref) =&amp;gt; (
-  &amp;lt;DialogPortal&amp;gt;
-    &amp;lt;DialogOverlay /&amp;gt;
-    &amp;lt;DialogPrimitive.Content
-      ref={ref}
-      className={cn(
-        &amp;quot;fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg&amp;quot;,
-        className
-      )}
-      {...props}
-    &amp;gt;
-      {children}
-      &amp;lt;DialogPrimitive.Close className=&amp;quot;absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground&amp;quot;&amp;gt;
-        &amp;lt;X className=&amp;quot;h-4 w-4&amp;quot; /&amp;gt;
-        &amp;lt;span className=&amp;quot;sr-only&amp;quot;&amp;gt;Close&amp;lt;/span&amp;gt;
-      &amp;lt;/DialogPrimitive.Close&amp;gt;
-    &amp;lt;/DialogPrimitive.Content&amp;gt;
-  &amp;lt;/DialogPortal&amp;gt;
-))
-DialogContent.displayName = DialogPrimitive.Content.displayName
-
-const DialogHeader = ({
-  className,
-  ...props
-}: React.HTMLAttributes&amp;lt;HTMLDivElement&amp;gt;) =&amp;gt; (
-  &amp;lt;div
-    className={cn(
-      &amp;quot;flex flex-col space-y-1.5 text-center sm:text-left&amp;quot;,
-      className
-    )}
-    {...props}
-  /&amp;gt;
-)
-DialogHeader.displayName = &amp;quot;DialogHeader&amp;quot;
-
-const DialogFooter = ({
-  className,
-  ...props
-}: React.HTMLAttributes&amp;lt;HTMLDivElement&amp;gt;) =&amp;gt; (
-  &amp;lt;div
-    className={cn(
-      &amp;quot;flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2&amp;quot;,
-      className
-    )}
-    {...props}
-  /&amp;gt;
-)
-DialogFooter.displayName = &amp;quot;DialogFooter&amp;quot;
-
-const DialogTitle = React.forwardRef&amp;lt;
-  React.ElementRef&amp;lt;typeof DialogPrimitive.Title&amp;gt;,
-  React.ComponentPropsWithoutRef&amp;lt;typeof DialogPrimitive.Title&amp;gt;
-&amp;gt;(({ className, ...props }, ref) =&amp;gt; (
-  &amp;lt;DialogPrimitive.Title
-    ref={ref}
-    className={cn(
-      &amp;quot;text-lg font-semibold leading-none tracking-tight&amp;quot;,
-      className
-    )}
-    {...props}
-  /&amp;gt;
-))
-DialogTitle.displayName = DialogPrimitive.Title.displayName
-
-const DialogDescription = React.forwardRef&amp;lt;
-  React.ElementRef&amp;lt;typeof DialogPrimitive.Description&amp;gt;,
-  React.ComponentPropsWithoutRef&amp;lt;typeof DialogPrimitive.Description&amp;gt;
-&amp;gt;(({ className, ...props }, ref) =&amp;gt; (
-  &amp;lt;DialogPrimitive.Description
-    ref={ref}
-    className={cn(&amp;quot;text-sm text-muted-foreground&amp;quot;, className)}
-    {...props}
-  /&amp;gt;
-))
-DialogDescription.displayName = DialogPrimitive.Description.displayName
-
-export {
-  Dialog,
-  DialogPortal,
-  DialogOverlay,
-  DialogClose,
-  DialogTrigger,
-  DialogContent,
-  DialogHeader,
-  DialogFooter,
-  DialogTitle,
-  DialogDescription,
-}&lt;/file&gt;&lt;file path=&quot;src/components/ui/input.tsx&quot;&gt;import * as React from &amp;quot;react&amp;quot;
-
-import { cn } from &amp;quot;@/lib/utils&amp;quot;
-
-const Input = React.forwardRef&amp;lt;HTMLInputElement, React.ComponentProps&amp;lt;&amp;quot;input&amp;quot;&amp;gt;&amp;gt;(
-  ({ className, type, ...props }, ref) =&amp;gt; {
-    return (
-      &amp;lt;input
-        type={type}
-        className={cn(
-          &amp;quot;flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm&amp;quot;,
-          className
-        )}
-        ref={ref}
-        {...props}
-      /&amp;gt;
-    )
-  }
-)
-Input.displayName = &amp;quot;Input&amp;quot;
-
-export { Input }&lt;/file&gt;&lt;file path=&quot;src/components/ui/label.tsx&quot;&gt;import * as React from &amp;quot;react&amp;quot;
-import * as LabelPrimitive from &amp;quot;@radix-ui/react-label&amp;quot;
-import { cva, type VariantProps } from &amp;quot;class-variance-authority&amp;quot;
-
-import { cn } from &amp;quot;@/lib/utils&amp;quot;
-
-const labelVariants = cva(
-  &amp;quot;text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70&amp;quot;
-)
-
-const Label = React.forwardRef&amp;lt;
-  React.ElementRef&amp;lt;typeof LabelPrimitive.Root&amp;gt;,
-  React.ComponentPropsWithoutRef&amp;lt;typeof LabelPrimitive.Root&amp;gt; &amp;amp;
-    VariantProps&amp;lt;typeof labelVariants&amp;gt;
-&amp;gt;(({ className, ...props }, ref) =&amp;gt; (
-  &amp;lt;LabelPrimitive.Root
-    ref={ref}
-    className={cn(labelVariants(), className)}
-    {...props}
-  /&amp;gt;
-))
-Label.displayName = LabelPrimitive.Root.displayName
-
-export { Label }&lt;/file&gt;&lt;file path=&quot;src/components/ui/slider.tsx&quot;&gt;import * as React from &amp;quot;react&amp;quot;
-import * as SliderPrimitive from &amp;quot;@radix-ui/react-slider&amp;quot;
-
-import { cn } from &amp;quot;@/lib/utils&amp;quot;
-
-const Slider = React.forwardRef&amp;lt;
-  React.ElementRef&amp;lt;typeof SliderPrimitive.Root&amp;gt;,
-  React.ComponentPropsWithoutRef&amp;lt;typeof SliderPrimitive.Root&amp;gt;
-&amp;gt;(({ className, ...props }, ref) =&amp;gt; (
-  &amp;lt;SliderPrimitive.Root
-    ref={ref}
-    className={cn(
-      &amp;quot;relative flex w-full touch-none select-none items-center&amp;quot;,
-      className
-    )}
-    {...props}
-  &amp;gt;
-    &amp;lt;SliderPrimitive.Track className=&amp;quot;relative h-2 w-full grow overflow-hidden rounded-full bg-secondary&amp;quot;&amp;gt;
-      &amp;lt;SliderPrimitive.Range className=&amp;quot;absolute h-full bg-primary&amp;quot; /&amp;gt;
-    &amp;lt;/SliderPrimitive.Track&amp;gt;
-    &amp;lt;SliderPrimitive.Thumb className=&amp;quot;block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50&amp;quot; /&amp;gt;
-  &amp;lt;/SliderPrimitive.Root&amp;gt;
-))
-Slider.displayName = SliderPrimitive.Root.displayName
-
-export { Slider }&lt;/file&gt;&lt;file path=&quot;src/components/Dashboard.tsx&quot;&gt;import type React from &amp;quot;react&amp;quot;;
-import { useLocation } from &amp;quot;react-router-dom&amp;quot;;
-import { useState } from &amp;quot;react&amp;quot;;
-import { Button } from &amp;quot;./ui/button&amp;quot;;
-import { Input } from &amp;quot;./ui/input&amp;quot;;
-import { Label } from &amp;quot;./ui/label&amp;quot;;
-import { Slider } from &amp;quot;./ui/slider&amp;quot;;
-import Header from &amp;quot;./Header&amp;quot;;
-import MovieCard from &amp;quot;./MovieCard&amp;quot;;
-import { Card, CardContent, CardHeader, CardTitle } from &amp;quot;./ui/card&amp;quot;;
-
-const mockMovies = [
-  {
-    id: 1,
-    title: &amp;quot;Inception&amp;quot;,
-    year: 2010,
-    genre: &amp;quot;Sci-Fi&amp;quot;,
-    duration: 148,
-    poster: &amp;quot;/placeholder.svg?height=400&amp;amp;width=300&amp;quot;,
-  },
-  {
-    id: 2,
-    title: &amp;quot;The Shawshank Redemption&amp;quot;,
-    year: 1994,
-    genre: &amp;quot;Drama&amp;quot;,
-    duration: 142,
-    poster: &amp;quot;/placeholder.svg?height=400&amp;amp;width=300&amp;quot;,
-  },
-  {
-    id: 3,
-    title: &amp;quot;The Dark Knight&amp;quot;,
-    year: 2008,
-    genre: &amp;quot;Action&amp;quot;,
-    duration: 152,
-    poster: &amp;quot;/placeholder.svg?height=400&amp;amp;width=300&amp;quot;,
-  },
-  {
-    id: 4,
-    title: &amp;quot;The Dark Knight&amp;quot;,
-    year: 2008,
-    genre: &amp;quot;Action&amp;quot;,
-    duration: 152,
-    poster: &amp;quot;/placeholder.svg?height=400&amp;amp;width=300&amp;quot;,
-  },
-];
-
-const Dashboard: React.FC = () =&amp;gt; {
-  const location = useLocation();
-  const userData = location.state?.userData;
-  const token = localStorage.getItem(&amp;quot;authToken&amp;quot;);
-
-  const [searchTerm, setSearchTerm] = useState(&amp;quot;&amp;quot;);
-  const [yearRange, setYearRange] = useState([1900, 2025]);
-  const [durationRange, setDurationRange] = useState([0, 240]);
-  const [selectedGenres, setSelectedGenres] = useState&amp;lt;string[]&amp;gt;([]);
-  const [excludedGenres, setExcludedGenres] = useState&amp;lt;string[]&amp;gt;([]);
-
-  const handleSearch = (e: React.FormEvent) =&amp;gt; {
-    e.preventDefault();
-    console.log(&amp;quot;Searching for:&amp;quot;, searchTerm);
-  };
-
-  const handleYearRangeChange = (value: number[]) =&amp;gt; {
-    setYearRange(value);
-  };
-
-  const handleDurationRangeChange = (value: number[]) =&amp;gt; {
-    setDurationRange(value);
-  };
-
-  const toggleGenre = (genre: string, list: &amp;quot;include&amp;quot; | &amp;quot;exclude&amp;quot;) =&amp;gt; {
-    if (list === &amp;quot;include&amp;quot;) {
-      setSelectedGenres((prev) =&amp;gt;
-        prev.includes(genre)
-          ? prev.filter((g) =&amp;gt; g !== genre)
-          : [...prev, genre],
-      );
-    } else {
-      setExcludedGenres((prev) =&amp;gt;
-        prev.includes(genre)
-          ? prev.filter((g) =&amp;gt; g !== genre)
-          : [...prev, genre],
-      );
-    }
-  };
-
-  const openTrailer = (movieId: number) =&amp;gt; {
-    console.log(&amp;quot;Opening trailer for movie ID:&amp;quot;, movieId);
-  };
-
-  return (
-    &amp;lt;div className=&amp;quot;bg-background min-h-screen w-screen&amp;quot;&amp;gt;
-      &amp;lt;Header /&amp;gt;
-      &amp;lt;div className=&amp;quot;container mx-auto px-4 py-8&amp;quot;&amp;gt;
-        &amp;lt;div className=&amp;quot;flex gap-8&amp;quot;&amp;gt;
-          &amp;lt;Card className=&amp;quot;basis-3/4&amp;quot;&amp;gt;
-            &amp;lt;CardHeader&amp;gt;
-              &amp;lt;CardTitle&amp;gt;Advanced Search&amp;lt;/CardTitle&amp;gt;
-            &amp;lt;/CardHeader&amp;gt;
-            &amp;lt;CardContent&amp;gt;
-              &amp;lt;form onSubmit={handleSearch} className=&amp;quot;space-y-6&amp;quot;&amp;gt;
-                &amp;lt;div className=&amp;quot;flex gap-2&amp;quot;&amp;gt;
-                  &amp;lt;Input
-                    placeholder=&amp;quot;Search movies...&amp;quot;
-                    value={searchTerm}
-                    onChange={(e: any) =&amp;gt; setSearchTerm(e.target.value)}
-                    className=&amp;quot;flex-1&amp;quot;
-                  /&amp;gt;
-                  &amp;lt;Button type=&amp;quot;submit&amp;quot;&amp;gt;Search&amp;lt;/Button&amp;gt;
-                &amp;lt;/div&amp;gt;
-
-                &amp;lt;div className=&amp;quot;space-y-2&amp;quot;&amp;gt;
-                  &amp;lt;Label&amp;gt;
-                    Year Range ({yearRange[0]} - {yearRange[1]})
-                  &amp;lt;/Label&amp;gt;
-                  &amp;lt;Slider
-                    min={1900}
-                    max={2025}
-                    step={1}
-                    value={yearRange}
-                    onValueChange={handleYearRangeChange}
-                    className=&amp;quot;my-4&amp;quot;
-                  /&amp;gt;
-                &amp;lt;/div&amp;gt;
-
-                &amp;lt;div className=&amp;quot;space-y-2&amp;quot;&amp;gt;
-                  &amp;lt;Label&amp;gt;
-                    Duration ({durationRange[0]} - {durationRange[1]} minutes)
-                  &amp;lt;/Label&amp;gt;
-                  &amp;lt;Slider
-                    min={0}
-                    max={240}
-                    step={5}
-                    value={durationRange}
-                    onValueChange={handleDurationRangeChange}
-                    className=&amp;quot;my-4&amp;quot;
-                  /&amp;gt;
-                &amp;lt;/div&amp;gt;
-
-                &amp;lt;div className=&amp;quot;space-y-2&amp;quot;&amp;gt;
-                  &amp;lt;Label&amp;gt;Include Genres&amp;lt;/Label&amp;gt;
-                  &amp;lt;div className=&amp;quot;flex flex-wrap gap-2&amp;quot;&amp;gt;
-                    {[&amp;quot;Action&amp;quot;, &amp;quot;Comedy&amp;quot;, &amp;quot;Drama&amp;quot;, &amp;quot;Sci-Fi&amp;quot;].map((genre) =&amp;gt; (
-                      &amp;lt;Button
-                        key={genre}
-                        variant={
-                          selectedGenres.includes(genre) ? &amp;quot;default&amp;quot; : &amp;quot;outline&amp;quot;
-                        }
-                        size=&amp;quot;sm&amp;quot;
-                        onClick={() =&amp;gt; toggleGenre(genre, &amp;quot;include&amp;quot;)}
-                        type=&amp;quot;button&amp;quot;
-                      &amp;gt;
-                        {genre}
-                      &amp;lt;/Button&amp;gt;
-                    ))}
-                  &amp;lt;/div&amp;gt;
-                &amp;lt;/div&amp;gt;
-
-                &amp;lt;div className=&amp;quot;space-y-2&amp;quot;&amp;gt;
-                  &amp;lt;Label&amp;gt;Exclude Genres&amp;lt;/Label&amp;gt;
-                  &amp;lt;div className=&amp;quot;flex flex-wrap gap-2&amp;quot;&amp;gt;
-                    {[&amp;quot;Horror&amp;quot;, &amp;quot;Romance&amp;quot;, &amp;quot;Thriller&amp;quot;, &amp;quot;Documentary&amp;quot;].map(
-                      (genre) =&amp;gt; (
-                        &amp;lt;Button
-                          key={genre}
-                          variant={
-                            excludedGenres.includes(genre)
-                              ? &amp;quot;destructive&amp;quot;
-                              : &amp;quot;outline&amp;quot;
-                          }
-                          size=&amp;quot;sm&amp;quot;
-                          onClick={() =&amp;gt; toggleGenre(genre, &amp;quot;exclude&amp;quot;)}
-                          type=&amp;quot;button&amp;quot;
-                        &amp;gt;
-                          {genre}
-                        &amp;lt;/Button&amp;gt;
-                      ),
-                    )}
-                  &amp;lt;/div&amp;gt;
-                &amp;lt;/div&amp;gt;
-              &amp;lt;/form&amp;gt;
-            &amp;lt;/CardContent&amp;gt;
-          &amp;lt;/Card&amp;gt;
-
-          &amp;lt;Card className=&amp;quot;basis-1/4&amp;quot;&amp;gt;
-            &amp;lt;CardHeader&amp;gt;
-              &amp;lt;CardTitle&amp;gt;People Search&amp;lt;/CardTitle&amp;gt;
-            &amp;lt;/CardHeader&amp;gt;
-            &amp;lt;CardContent&amp;gt;
-              &amp;lt;Input placeholder=&amp;quot;Search directors, actors...&amp;quot; /&amp;gt;
-            &amp;lt;/CardContent&amp;gt;
-          &amp;lt;/Card&amp;gt;
-        &amp;lt;/div&amp;gt;
-
-        &amp;lt;div className=&amp;quot;mt-8 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6&amp;quot;&amp;gt;
-          {mockMovies.map((movie) =&amp;gt; (
-            &amp;lt;MovieCard key={movie.id} movie={movie} openTrailer={openTrailer} /&amp;gt;
-          ))}
-        &amp;lt;/div&amp;gt;
-      &amp;lt;/div&amp;gt;
-    &amp;lt;/div&amp;gt;
-  )
-};
-
-export default Dashboard;&lt;/file&gt;&lt;file path=&quot;src/components/Header.tsx&quot;&gt;import type React from &amp;quot;react&amp;quot;
-import { Button } from &amp;quot;./ui/button&amp;quot;;
-import { User, Film } from &amp;quot;lucide-react&amp;quot;
-
-const Header: React.FC = () =&amp;gt; {
-  return (
-    &amp;lt;header className=&amp;quot;border-b bg-card&amp;quot;&amp;gt;
-      &amp;lt;div className=&amp;quot;container mx-auto px-4 py-4&amp;quot;&amp;gt;
-        &amp;lt;div className=&amp;quot;flex justify-between items-center&amp;quot;&amp;gt;
-          &amp;lt;h1 className=&amp;quot;text-2xl font-bold&amp;quot;&amp;gt;Dashboard&amp;lt;/h1&amp;gt;
-          &amp;lt;a href=&amp;quot;#&amp;quot; className=&amp;quot;flex items-center gap-2 hover:text-primary&amp;quot;&amp;gt;
-            &amp;lt;Film className=&amp;quot;h-5 w-5&amp;quot; /&amp;gt;
-            &amp;lt;span className=&amp;quot;text-xl font-semibold&amp;quot;&amp;gt;iTunes&amp;lt;/span&amp;gt;
-          &amp;lt;/a&amp;gt;
-          &amp;lt;div className=&amp;quot;flex items-center gap-4&amp;quot;&amp;gt;
-            &amp;lt;span className=&amp;quot;text-sm text-muted-foreground&amp;quot;&amp;gt;Credits: 100&amp;lt;/span&amp;gt;
-            &amp;lt;Button variant=&amp;quot;outline&amp;quot; size=&amp;quot;sm&amp;quot;&amp;gt;
-              &amp;lt;User className=&amp;quot;w-4 h-4 mr-2&amp;quot; /&amp;gt;
-              Profile
-            &amp;lt;/Button&amp;gt;
-          &amp;lt;/div&amp;gt;
-        &amp;lt;/div&amp;gt;
-      &amp;lt;/div&amp;gt;
-    &amp;lt;/header&amp;gt;
-  )
-}
-
-export default Header&lt;/file&gt;&lt;file path=&quot;src/components/LandingPage.tsx&quot;&gt;import { useState } from &amp;quot;react&amp;quot;;
-import { Button } from &amp;quot;./ui/button&amp;quot;;
-import { Film } from &amp;quot;lucide-react&amp;quot;;
-import { Input } from &amp;quot;./ui/input&amp;quot;;
-import axios from &amp;quot;axios&amp;quot;;
-import { useNavigate } from &amp;quot;react-router-dom&amp;quot;;
-import SignInModal from &amp;quot;./../Modal/sign-in-modal&amp;quot;;
-
-const LandingPage = () =&amp;gt; {
-  const BACKEND_URL = import.meta.env.VITE_BACKEND_URL;
-  const navigate = useNavigate();
-
-  const [showModal, setShowModal] = useState(false);
-  const [error, setError] = useState&amp;lt;string&amp;gt;(&amp;quot;&amp;quot;);
-
-  const handleSearchClick = (e: React.FormEvent) =&amp;gt; {
-    e.preventDefault();
-    setShowModal(true);
-  };
-
-  const handleSignInClick = async (formData: { email: string, mot_de_passe: string }) =&amp;gt; {
-    try {
-      console.log(formData);
-      const response = await axios.post(`${BACKEND_URL}/auth/login`, formData, {
-        headers: {
-          &amp;quot;Content-Type&amp;quot;: &amp;quot;application/json&amp;quot;,
-        },
-      });
-
-      const token = response.data.token;
-      localStorage.setItem(&amp;quot;authToken&amp;quot;, token);
-
-      navigate(&amp;quot;/dashboard&amp;quot;, { state: { userData: response.data } });
-      setShowModal(false);
-    } catch (error: any) {
-      if (error.response.status === 401) {
-        setError(&amp;quot;Email ou mot de passe incorrect&amp;quot;); 
-      } else {
-        console.error(error);
-      }
-    }
-  };
-
-  return (
-    &amp;lt;div className=&amp;quot;w-screen flex flex-col items-center&amp;quot;&amp;gt;
-      &amp;lt;a
-        className=&amp;quot;flex items-center justify-center fixed top-0 pt-10&amp;quot;
-        href=&amp;quot;#&amp;quot;
-      &amp;gt;
-        &amp;lt;Film className=&amp;quot;h-6 w-6&amp;quot; /&amp;gt;
-        &amp;lt;span className=&amp;quot;text-2xl font-bold&amp;quot;&amp;gt;iTunes&amp;lt;/span&amp;gt;
-      &amp;lt;/a&amp;gt;
-      &amp;lt;div className=&amp;quot;flex flex-col items-center space-y-4 text-center mt-20&amp;quot;&amp;gt;
-        &amp;lt;div className=&amp;quot;space-y-2&amp;quot;&amp;gt;
-          &amp;lt;h1 className=&amp;quot;text-3xl font-bold tracking-tighter sm:text-4xl md:text-5xl lg:text-6xl/none&amp;quot;&amp;gt;
-            Trouvez Votre Film Préféré
-          &amp;lt;/h1&amp;gt;
-          &amp;lt;p className=&amp;quot;max-w-[700px] text-gray-500 md:text-xl dark:text-gray-400&amp;quot;&amp;gt;
-            Explorez et découvrez des milliers de films. La soirée cinéma
-            parfaite est à portée de clic.
-          &amp;lt;/p&amp;gt;
-        &amp;lt;/div&amp;gt;
-        &amp;lt;div className=&amp;quot;w-full max-w-sm space-y-2&amp;quot;&amp;gt;
-          &amp;lt;form className=&amp;quot;flex space-x-2&amp;quot; onSubmit={handleSearchClick}&amp;gt;
-            &amp;lt;Input
-              className=&amp;quot;max-w-lg flex-1&amp;quot;
-              placeholder=&amp;quot;Recherchez un film...&amp;quot;
-              type=&amp;quot;text&amp;quot;
-            /&amp;gt;
-            &amp;lt;Button type=&amp;quot;submit&amp;quot;&amp;gt;Rechercher&amp;lt;/Button&amp;gt;
-          &amp;lt;/form&amp;gt;
-        &amp;lt;/div&amp;gt;
-      &amp;lt;/div&amp;gt;
-      &amp;lt;SignInModal
-        isOpen={showModal}
-        onClose={() =&amp;gt; setShowModal(false)}
-        onSignIn={handleSignInClick}
-        error={error}
-      /&amp;gt;
-    &amp;lt;/div&amp;gt;
-  );
-};
-
-export default LandingPage;&lt;/file&gt;&lt;file path=&quot;src/components/MovieCard.tsx&quot;&gt;import type React from &amp;quot;react&amp;quot;;
-import { Button } from &amp;quot;./ui/button&amp;quot;;
-import { Card, CardContent } from &amp;quot;./ui/card&amp;quot;;
-import { Play } from &amp;quot;lucide-react&amp;quot;;
-
-interface Movie {
-  id: number;
-  title: string;
-  year: number;
-  genre: string;
-  duration: number;
-  poster: string;
-}
-
-interface MovieCardProps {
-  movie: Movie;
-  openTrailer: (movieId: number) =&amp;gt; void;
-}
-
-const MovieCard: React.FC&amp;lt;MovieCardProps&amp;gt; = ({ movie, openTrailer }) =&amp;gt; {
-  return (
-    &amp;lt;Card key={movie.id} className=&amp;quot;overflow-hidden&amp;quot;&amp;gt;
-      &amp;lt;CardContent className=&amp;quot;p-0&amp;quot;&amp;gt;
-        &amp;lt;div className=&amp;quot;aspect-[2/3] relative&amp;quot;&amp;gt;
-          &amp;lt;img
-            src={movie.poster || &amp;quot;/placeholder.svg&amp;quot;}
-            alt={movie.title}
-            className=&amp;quot;object-cover absolute inset-0 w-full h-full&amp;quot;
-          /&amp;gt;
-        &amp;lt;/div&amp;gt;
-        &amp;lt;div className=&amp;quot;p-4 space-y-4&amp;quot;&amp;gt;
-          &amp;lt;div&amp;gt;
-            &amp;lt;h3 className=&amp;quot;font-semibold text-lg leading-tight&amp;quot;&amp;gt;
-              {movie.title}
-            &amp;lt;/h3&amp;gt;
-            &amp;lt;p className=&amp;quot;text-sm text-muted-foreground&amp;quot;&amp;gt;
-              {movie.year} • {movie.genre} • {movie.duration} min
-            &amp;lt;/p&amp;gt;
-          &amp;lt;/div&amp;gt;
-          &amp;lt;Button
-            size=&amp;quot;sm&amp;quot;
-            variant=&amp;quot;outline&amp;quot;
-            className=&amp;quot;w-full&amp;quot;
-            onClick={() =&amp;gt; openTrailer(movie.id)}
-          &amp;gt;
-            &amp;lt;Play className=&amp;quot;w-4 h-4 mr-2&amp;quot; /&amp;gt;
-            Watch Trailer
-          &amp;lt;/Button&amp;gt;
-        &amp;lt;/div&amp;gt;
-      &amp;lt;/CardContent&amp;gt;
-    &amp;lt;/Card&amp;gt;
-  );
-};
-
-export default MovieCard;&lt;/file&gt;&lt;file path=&quot;src/components/Navbar.tsx&quot;&gt;import { Film } from &amp;quot;lucide-react&amp;quot;;
-
-const NarBar = () =&amp;gt; {
-  return (
-    &amp;lt;header className=&amp;quot;fixed top-0 px-4 lg:px-6 h-14 flex items-center w-screen m-2 justify-center&amp;quot;&amp;gt;
-      &amp;lt;a className=&amp;quot;flex items-center justify-center&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;
-        &amp;lt;Film className=&amp;quot;h-6 w-6&amp;quot; /&amp;gt;
-        &amp;lt;span className=&amp;quot;ml-2 text-2xl font-bold&amp;quot;&amp;gt;iTunes&amp;lt;/span&amp;gt;
-      &amp;lt;/a&amp;gt;
-    &amp;lt;/header&amp;gt;
-  );
-};
-
-export default NarBar;&lt;/file&gt;&lt;file path=&quot;src/components/SignIn.tsx&quot;&gt;import { useState } from &amp;quot;react&amp;quot;;
-import {
-  Dialog,
-  DialogContent,
-  DialogDescription,
-  DialogHeader,
-  DialogTitle,
-  DialogTrigger,
-  DialogFooter,
-} from &amp;quot;./ui/dialog&amp;quot;;
-import { Button } from &amp;quot;./ui/button&amp;quot;;
-import { Input } from &amp;quot;./ui/input&amp;quot;;
-import { Label } from &amp;quot;./ui/label&amp;quot;;
-import { EyeIcon, EyeOffIcon } from &amp;quot;lucide-react&amp;quot;;
-
-const SignIn = () =&amp;gt; {
-  const [showPassword, setShowPassword] = useState(false);
-
-  return (
-    &amp;lt;Dialog&amp;gt;
-      &amp;lt;DialogTrigger asChild&amp;gt;
-        &amp;lt;Button variant=&amp;quot;outline&amp;quot;&amp;gt;Se connecter&amp;lt;/Button&amp;gt;
-      &amp;lt;/DialogTrigger&amp;gt;
-      &amp;lt;DialogContent className=&amp;quot;sm:max-w-[425px] [&amp;amp;&amp;gt;button]:hover:bg-transparent [&amp;amp;&amp;gt;button]:focus:bg-transparent [&amp;amp;&amp;gt;button]:active:bg-transparent&amp;quot;&amp;gt;
-        &amp;lt;DialogHeader&amp;gt;
-          &amp;lt;DialogTitle className=&amp;quot;text-2xl font-bold text-center&amp;quot;&amp;gt;
-            Connexion
-          &amp;lt;/DialogTitle&amp;gt;
-          &amp;lt;DialogDescription className=&amp;quot;text-center text-muted-foreground&amp;quot;&amp;gt;
-            Connectez vous a votre profil pour accéder au service
-          &amp;lt;/DialogDescription&amp;gt;
-        &amp;lt;/DialogHeader&amp;gt;
-        &amp;lt;form onSubmit={(e) =&amp;gt; e.preventDefault()}&amp;gt;
-          &amp;lt;div className=&amp;quot;grid gap-6 py-4&amp;quot;&amp;gt;
-            &amp;lt;div className=&amp;quot;grid gap-2&amp;quot;&amp;gt;
-              &amp;lt;Label htmlFor=&amp;quot;email&amp;quot;&amp;gt;Email&amp;lt;/Label&amp;gt;
-              &amp;lt;Input id=&amp;quot;email&amp;quot; type=&amp;quot;email&amp;quot; placeholder=&amp;quot;exemple@email.com&amp;quot; /&amp;gt;
-            &amp;lt;/div&amp;gt;
-            &amp;lt;div className=&amp;quot;grid gap-2&amp;quot;&amp;gt;
-              &amp;lt;Label htmlFor=&amp;quot;password&amp;quot;&amp;gt;Mot de passe&amp;lt;/Label&amp;gt;
-              &amp;lt;div className=&amp;quot;relative&amp;quot;&amp;gt;
-                &amp;lt;Input
-                  id=&amp;quot;password&amp;quot;
-                  type={showPassword ? &amp;quot;text&amp;quot; : &amp;quot;password&amp;quot;}
-                  placeholder=&amp;quot;Mot de passe&amp;quot;
-                /&amp;gt;
-                &amp;lt;Button
-                  type=&amp;quot;button&amp;quot;
-                  variant=&amp;quot;ghost&amp;quot;
-                  size=&amp;quot;icon&amp;quot;
-                  className=&amp;quot;absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent&amp;quot;
-                  onClick={() =&amp;gt; setShowPassword(!showPassword)}
-                &amp;gt;
-                  {showPassword ? (
-                    &amp;lt;EyeOffIcon className=&amp;quot;h-4 w-4 text-muted-foreground&amp;quot; /&amp;gt;
-                  ) : (
-                    &amp;lt;EyeIcon className=&amp;quot;h-4 w-4 text-muted-foreground&amp;quot; /&amp;gt;
-                  )}
-                &amp;lt;/Button&amp;gt;
-              &amp;lt;/div&amp;gt;
-            &amp;lt;/div&amp;gt;
-          &amp;lt;/div&amp;gt;
-          &amp;lt;DialogFooter&amp;gt;
-            &amp;lt;div className=&amp;quot;py-2 w-full&amp;quot;&amp;gt;
-              &amp;lt;Button type=&amp;quot;submit&amp;quot; className=&amp;quot;w-full&amp;quot;&amp;gt;
-                Connexion
-              &amp;lt;/Button&amp;gt;
-            &amp;lt;/div&amp;gt;
-          &amp;lt;/DialogFooter&amp;gt;
-        &amp;lt;/form&amp;gt;
-      &amp;lt;/DialogContent&amp;gt;
-    &amp;lt;/Dialog&amp;gt;
-  );
-};
-
-export default SignIn;&lt;/file&gt;&lt;file path=&quot;src/components/TestPage.tsx&quot;&gt;import tomHankImage from &amp;quot;../../src/assets/tom-hanks.jpg&amp;quot;;
-import {
-  Card,
-  CardContent,
-  CardDescription,
-  CardFooter,
-  CardHeader,
-  CardTitle,
-} from &amp;quot;./ui/card&amp;quot;;
-
-const TestPage = () =&amp;gt; {
-  return (
-    &amp;lt;div className=&amp;quot;w-full flex justify-center flex-1&amp;quot;&amp;gt;
-      &amp;lt;div className=&amp;quot;w-[350px] h-[400px] bg-red-400 relative&amp;quot;&amp;gt;
-        &amp;lt;div className=&amp;quot;w-full flex justify-center&amp;quot;&amp;gt;
-          &amp;lt;img
-            className=&amp;quot;h-52 w-96 object-cover rounded-lg&amp;quot;
-            src={tomHankImage}
-            alt=&amp;quot;Tom Hanks&amp;quot;
-          /&amp;gt;
-        &amp;lt;/div&amp;gt;
-        &amp;lt;Card className=&amp;quot;absolute top-72 left-0 w-full&amp;quot;&amp;gt;
-          &amp;lt;CardHeader&amp;gt;Hello&amp;lt;/CardHeader&amp;gt;
-        &amp;lt;/Card&amp;gt;
-      &amp;lt;/div&amp;gt;
-    &amp;lt;/div&amp;gt;
-  );
-};
-
-export default TestPage;&lt;/file&gt;&lt;file path=&quot;src/lib/utils.ts&quot;&gt;import { clsx, type ClassValue } from &amp;quot;clsx&amp;quot;
-import { twMerge } from &amp;quot;tailwind-merge&amp;quot;
-
-export function cn(...inputs: ClassValue[]) {
-  return twMerge(clsx(inputs))
-}&lt;/file&gt;&lt;file path=&quot;src/Modal/sign-in-modal.tsx&quot;&gt;import { useState } from &amp;quot;react&amp;quot;;
-import {
-  Dialog,
-  DialogContent,
-  DialogDescription,
-  DialogHeader,
-  DialogTitle,
-  DialogFooter,
-} from &amp;quot;../components/ui/dialog&amp;quot;;
-import { Button } from &amp;quot;../components/ui/button&amp;quot;;
-import { Input } from &amp;quot;../components/ui/input&amp;quot;;
-import { Label } from &amp;quot;../components/ui/label&amp;quot;;
-import { EyeIcon, EyeOffIcon } from &amp;quot;lucide-react&amp;quot;;
-import md5 from &amp;quot;md5&amp;quot;;
-
-type userData = {
-  email: string;
-  password: string;
-};
-
-type userDataWithHashedPassword = {
-  email: string;
-  mot_de_passe: string;
-};
-
-interface SignInModalProps {
-  isOpen: boolean;
-  onClose: () =&amp;gt; void;
-  onSignIn: (formData: userDataWithHashedPassword) =&amp;gt; void;
-  error: string;
-}
-
-const SignInModal = ({
-  isOpen,
-  onClose,
-  onSignIn,
-  error,
-}: SignInModalProps) =&amp;gt; {
-  const [showPassword, setShowPassword] = useState(false);
-  const [formData, setFormData] = useState&amp;lt;userData&amp;gt;({
-    email: &amp;quot;&amp;quot;,
-    password: &amp;quot;&amp;quot;,
-  });
-
-  const handleSubmit = (e: React.FormEvent) =&amp;gt; {
-    e.preventDefault();
-    const hashedPassword = md5(formData.password);
-
-    const formDataWithHashedPassword = {
-      email: formData.email,
-      mot_de_passe: hashedPassword,
-    };
-
-    onSignIn(formDataWithHashedPassword);
-  };
-
-  return (
-    &amp;lt;Dialog open={isOpen} onOpenChange={onClose}&amp;gt;
-      &amp;lt;DialogContent className=&amp;quot;sm:max-w-[425px] [&amp;amp;&amp;gt;button]:hover:bg-transparent [&amp;amp;&amp;gt;button]:focus:bg-transparent [&amp;amp;&amp;gt;button]:active:bg-transparent&amp;quot;&amp;gt;
-        &amp;lt;DialogHeader&amp;gt;
-          &amp;lt;DialogTitle className=&amp;quot;text-2xl font-bold text-center&amp;quot;&amp;gt;
-            Connexion
-          &amp;lt;/DialogTitle&amp;gt;
-          &amp;lt;DialogDescription className=&amp;quot;text-center text-muted-foreground&amp;quot;&amp;gt;
-            Connectez vous a votre profil pour accéder au service
-          &amp;lt;/DialogDescription&amp;gt;
-        &amp;lt;/DialogHeader&amp;gt;
-        &amp;lt;form onSubmit={handleSubmit}&amp;gt;
-          &amp;lt;div className=&amp;quot;grid gap-6 py-4&amp;quot;&amp;gt;
-            &amp;lt;div className=&amp;quot;grid gap-2&amp;quot;&amp;gt;
-              &amp;lt;Label htmlFor=&amp;quot;email&amp;quot;&amp;gt;Email&amp;lt;/Label&amp;gt;
-              &amp;lt;Input
-                id=&amp;quot;email&amp;quot;
-                type=&amp;quot;email&amp;quot;
-                placeholder=&amp;quot;exemple@email.com&amp;quot;
-                value={formData.email}
-                onChange={(e) =&amp;gt;
-                  setFormData({ ...formData, email: e.target.value })
-                }
-              /&amp;gt;
-            &amp;lt;/div&amp;gt;
-            &amp;lt;div className=&amp;quot;grid gap-2&amp;quot;&amp;gt;
-              &amp;lt;Label htmlFor=&amp;quot;password&amp;quot;&amp;gt;Mot de passe&amp;lt;/Label&amp;gt;
-              &amp;lt;div className=&amp;quot;relative&amp;quot;&amp;gt;
-                &amp;lt;Input
-                  id=&amp;quot;password&amp;quot;
-                  type={showPassword ? &amp;quot;text&amp;quot; : &amp;quot;password&amp;quot;}
-                  placeholder=&amp;quot;Mot de passe&amp;quot;
-                  value={formData.password}
-                  onChange={(e) =&amp;gt;
-                    setFormData({ ...formData, password: e.target.value })
-                  }
-                /&amp;gt;
-                &amp;lt;Button
-                  type=&amp;quot;button&amp;quot;
-                  variant=&amp;quot;ghost&amp;quot;
-                  size=&amp;quot;icon&amp;quot;
-                  className=&amp;quot;absolute right-0 top-0 h-full px-3 py-2 hover:bg-transparent&amp;quot;
-                  onClick={() =&amp;gt; setShowPassword(!showPassword)}
-                &amp;gt;
-                  {showPassword ? (
-                    &amp;lt;EyeOffIcon className=&amp;quot;h-4 w-4 text-muted-foreground&amp;quot; /&amp;gt;
-                  ) : (
-                    &amp;lt;EyeIcon className=&amp;quot;h-4 w-4 text-muted-foreground&amp;quot; /&amp;gt;
-                  )}
-                &amp;lt;/Button&amp;gt;
-              &amp;lt;/div&amp;gt;
-            &amp;lt;/div&amp;gt;
-          &amp;lt;/div&amp;gt;
-          {error &amp;amp;&amp;amp; (
-            &amp;lt;div className=&amp;quot;text-red-500 text-sm text-center mt-2 p-2&amp;quot;&amp;gt;{error}&amp;lt;/div&amp;gt;
-          )}
-          &amp;lt;DialogFooter&amp;gt;
-            &amp;lt;div className=&amp;quot;py-2 w-full&amp;quot;&amp;gt;
-              &amp;lt;Button type=&amp;quot;submit&amp;quot; className=&amp;quot;w-full&amp;quot;&amp;gt;
-                Connexion
-              &amp;lt;/Button&amp;gt;
-            &amp;lt;/div&amp;gt;
-          &amp;lt;/DialogFooter&amp;gt;
-        &amp;lt;/form&amp;gt;
-      &amp;lt;/DialogContent&amp;gt;
-    &amp;lt;/Dialog&amp;gt;
-  );
-};
-
-export default SignInModal;&lt;/file&gt;&lt;file path=&quot;src/App.css&quot;&gt;.logo {
-  height: 6em;
-  padding: 1.5em;
-  will-change: filter;
-  transition: filter 300ms;
-}
-.logo:hover {
-  filter: drop-shadow(0 0 2em #646cffaa);
-}
-.logo.react:hover {
-  filter: drop-shadow(0 0 2em #61dafbaa);
-}
-
-@keyframes logo-spin {
-  from {
-    transform: rotate(0deg);
-  }
-  to {
-    transform: rotate(360deg);
-  }
-}
-
-@media (prefers-reduced-motion: no-preference) {
-  a:nth-of-type(2) .logo {
-    animation: logo-spin infinite 20s linear;
-  }
-}
-
-.card {
-  padding: 2em;
-}
-
-.read-the-docs {
-  color: #888;
-}&lt;/file&gt;&lt;file path=&quot;src/App.tsx&quot;&gt;import &amp;quot;./App.css&amp;quot;;
-import { BrowserRouter as Router, Route, Routes } from &amp;quot;react-router-dom&amp;quot;;
-import LandingPage from &amp;quot;./components/LandingPage&amp;quot;;
-import TestPage from &amp;quot;./components/TestPage&amp;quot;;
-import Dashboard from &amp;quot;./components/Dashboard&amp;quot;;
-
-function App() {
-  return (
-    &amp;lt;Router&amp;gt;
-      &amp;lt;div className=&amp;quot;min-h-screen bg-background&amp;quot;&amp;gt;
-        &amp;lt;Routes&amp;gt;
-          &amp;lt;Route path=&amp;quot;/&amp;quot; element={&amp;lt;LandingPage /&amp;gt;} /&amp;gt;
-          &amp;lt;Route path=&amp;quot;/test&amp;quot; element={&amp;lt;TestPage /&amp;gt;} /&amp;gt;
-          &amp;lt;Route path=&amp;quot;/Dashboard&amp;quot; element={&amp;lt;Dashboard /&amp;gt;} /&amp;gt;
-        &amp;lt;/Routes&amp;gt;
-      &amp;lt;/div&amp;gt;
-    &amp;lt;/Router&amp;gt;
-  );
-}
-
-export default App;&lt;/file&gt;&lt;file path=&quot;src/index.css&quot;&gt;@tailwind base;
-@tailwind components;
-@tailwind utilities;
-
-html, body, root {
-  padding: 0;
-  margin: 0;
-}
-
-:root {
-  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
-  line-height: 1.5;
-  font-weight: 400;
-
-  color-scheme: light dark;
-  color: rgba(255, 255, 255, 0.87);
-  background-color: #242424;
-
-  font-synthesis: none;
-  text-rendering: optimizeLegibility;
-  -webkit-font-smoothing: antialiased;
-  -moz-osx-font-smoothing: grayscale;
-}
-
-a {
-  font-weight: 500;
-  color: #646cff;
-  text-decoration: inherit;
-}
-a:hover {
-  color: #535bf2;
-}
-
-body {
-  margin: 0;
-  display: flex;
-  place-items: center;
-  min-width: 320px;
-  min-height: 100vh;
-  padding: 0;
-}
-
-h1 {
-  font-size: 3.2em;
-  line-height: 1.1;
-}
-
-button {
-  border-radius: 8px;
-  border: 1px solid transparent;
-  padding: 0.6em 1.2em;
-  font-size: 1em;
-  font-weight: 500;
-  font-family: inherit;
-  background-color: #1a1a1a;
-  cursor: pointer;
-  transition: border-color 0.25s;
-}
-button:hover {
-  border-color: #646cff;
-}
-button:focus,
-button:focus-visible {
-  outline: 4px auto -webkit-focus-ring-color;
-}
-
-@media (prefers-color-scheme: light) {
-  :root {
-    color: #213547;
-    background-color: #ffffff;
-  }
-  a:hover {
-    color: #747bff;
-  }
-  button {
-    background-color: #f9f9f9;
-  }
-}
-
-@layer base {
-  :root {
-    --background: 0 0% 100%;
-    --foreground: 0 0% 3.9%;
-    --card: 0 0% 100%;
-    --card-foreground: 0 0% 3.9%;
-    --popover: 0 0% 100%;
-    --popover-foreground: 0 0% 3.9%;
-    --primary: 0 0% 9%;
-    --primary-foreground: 0 0% 98%;
-    --secondary: 0 0% 96.1%;
-    --secondary-foreground: 0 0% 9%;
-    --muted: 0 0% 96.1%;
-    --muted-foreground: 0 0% 45.1%;
-    --accent: 0 0% 96.1%;
-    --accent-foreground: 0 0% 9%;
-    --destructive: 0 84.2% 60.2%;
-    --destructive-foreground: 0 0% 98%;
-    --border: 0 0% 89.8%;
-    --input: 0 0% 89.8%;
-    --ring: 0 0% 3.9%;
-    --chart-1: 12 76% 61%;
-    --chart-2: 173 58% 39%;
-    --chart-3: 197 37% 24%;
-    --chart-4: 43 74% 66%;
-    --chart-5: 27 87% 67%;
-    --radius: 0.5rem;
-  }
-  .dark {
-    --background: 0 0% 3.9%;
-    --foreground: 0 0% 98%;
-    --card: 0 0% 3.9%;
-    --card-foreground: 0 0% 98%;
-    --popover: 0 0% 3.9%;
-    --popover-foreground: 0 0% 98%;
-    --primary: 0 0% 98%;
-    --primary-foreground: 0 0% 9%;
-    --secondary: 0 0% 14.9%;
-    --secondary-foreground: 0 0% 98%;
-    --muted: 0 0% 14.9%;
-    --muted-foreground: 0 0% 63.9%;
-    --accent: 0 0% 14.9%;
-    --accent-foreground: 0 0% 98%;
-    --destructive: 0 62.8% 30.6%;
-    --destructive-foreground: 0 0% 98%;
-    --border: 0 0% 14.9%;
-    --input: 0 0% 14.9%;
-    --ring: 0 0% 83.1%;
-    --chart-1: 220 70% 50%;
-    --chart-2: 160 60% 45%;
-    --chart-3: 30 80% 55%;
-    --chart-4: 280 65% 60%;
-    --chart-5: 340 75% 55%;
-  }
-}
-
-@layer base {
-  * {
-    @apply border-border;
-  }
-  body {
-    @apply bg-background text-foreground;
-  }
-}&lt;/file&gt;&lt;file path=&quot;src/main.tsx&quot;&gt;import { StrictMode } from &amp;apos;react&amp;apos;
-import { createRoot } from &amp;apos;react-dom/client&amp;apos;
-import &amp;apos;./index.css&amp;apos;
-import App from &amp;apos;./App.tsx&amp;apos;
-
-createRoot(document.getElementById(&amp;apos;root&amp;apos;)!).render(
-  &amp;lt;StrictMode&amp;gt;
-    &amp;lt;App /&amp;gt;
-  &amp;lt;/StrictMode&amp;gt;,
-)&lt;/file&gt;&lt;file path=&quot;src/vite-env.d.ts&quot;&gt;/// &amp;lt;reference types=&amp;quot;vite/client&amp;quot; /&amp;gt;&lt;/file&gt;&lt;file path=&quot;.gitignore&quot;&gt;# Logs
-logs
-*.log
-npm-debug.log*
-yarn-debug.log*
-yarn-error.log*
-pnpm-debug.log*
-lerna-debug.log*
-
-node_modules
-dist
-dist-ssr
-*.local
-
-# Editor directories and files
-.vscode/*
-!.vscode/extensions.json
-.idea
-.DS_Store
-*.suo
-*.ntvs*
-*.njsproj
-*.sln
-*.sw?&lt;/file&gt;&lt;file path=&quot;components.json&quot;&gt;{
-  &amp;quot;$schema&amp;quot;: &amp;quot;https://ui.shadcn.com/schema.json&amp;quot;,
-  &amp;quot;style&amp;quot;: &amp;quot;default&amp;quot;,
-  &amp;quot;rsc&amp;quot;: false,
-  &amp;quot;tsx&amp;quot;: true,
-  &amp;quot;tailwind&amp;quot;: {
-    &amp;quot;config&amp;quot;: &amp;quot;tailwind.config.js&amp;quot;,
-    &amp;quot;css&amp;quot;: &amp;quot;src/index.css&amp;quot;,
-    &amp;quot;baseColor&amp;quot;: &amp;quot;neutral&amp;quot;,
-    &amp;quot;cssVariables&amp;quot;: true,
-    &amp;quot;prefix&amp;quot;: &amp;quot;&amp;quot;
-  },
-  &amp;quot;aliases&amp;quot;: {
-    &amp;quot;components&amp;quot;: &amp;quot;@/components&amp;quot;,
-    &amp;quot;utils&amp;quot;: &amp;quot;@/lib/utils&amp;quot;,
-    &amp;quot;ui&amp;quot;: &amp;quot;@/components/ui&amp;quot;,
-    &amp;quot;lib&amp;quot;: &amp;quot;@/lib&amp;quot;,
-    &amp;quot;hooks&amp;quot;: &amp;quot;@/hooks&amp;quot;
-  },
-  &amp;quot;iconLibrary&amp;quot;: &amp;quot;lucide&amp;quot;
-}&lt;/file&gt;&lt;file path=&quot;eslint.config.js&quot;&gt;import js from &amp;apos;@eslint/js&amp;apos;
-import globals from &amp;apos;globals&amp;apos;
-import reactHooks from &amp;apos;eslint-plugin-react-hooks&amp;apos;
-import reactRefresh from &amp;apos;eslint-plugin-react-refresh&amp;apos;
-import tseslint from &amp;apos;typescript-eslint&amp;apos;
-
-export default tseslint.config(
-  { ignores: [&amp;apos;dist&amp;apos;] },
-  {
-    extends: [js.configs.recommended, ...tseslint.configs.recommended],
-    files: [&amp;apos;**/*.{ts,tsx}&amp;apos;],
-    languageOptions: {
-      ecmaVersion: 2020,
-      globals: globals.browser,
-    },
-    plugins: {
-      &amp;apos;react-hooks&amp;apos;: reactHooks,
-      &amp;apos;react-refresh&amp;apos;: reactRefresh,
-    },
-    rules: {
-      ...reactHooks.configs.recommended.rules,
-      &amp;apos;react-refresh/only-export-components&amp;apos;: [
-        &amp;apos;warn&amp;apos;,
-        { allowConstantExport: true },
-      ],
-    },
-  },
-)&lt;/file&gt;&lt;file path=&quot;index.html&quot;&gt;&amp;lt;!doctype html&amp;gt;
-&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
-  &amp;lt;head&amp;gt;
-    &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot; /&amp;gt;
-    &amp;lt;link rel=&amp;quot;icon&amp;quot; type=&amp;quot;image/svg+xml&amp;quot; href=&amp;quot;/vite.svg&amp;quot; /&amp;gt;
-    &amp;lt;meta name=&amp;quot;viewport&amp;quot; content=&amp;quot;width=device-width, initial-scale=1.0&amp;quot; /&amp;gt;
-    &amp;lt;title&amp;gt;Vite + React + TS&amp;lt;/title&amp;gt;
-  &amp;lt;/head&amp;gt;
-  &amp;lt;body&amp;gt;
-    &amp;lt;div id=&amp;quot;root&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
-    &amp;lt;script type=&amp;quot;module&amp;quot; src=&amp;quot;/src/main.tsx&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
-  &amp;lt;/body&amp;gt;
-&amp;lt;/html&amp;gt;&lt;/file&gt;&lt;file path=&quot;package.json&quot;&gt;{
-  &amp;quot;name&amp;quot;: &amp;quot;gti660&amp;quot;,
-  &amp;quot;private&amp;quot;: true,
-  &amp;quot;version&amp;quot;: &amp;quot;0.0.0&amp;quot;,
-  &amp;quot;type&amp;quot;: &amp;quot;module&amp;quot;,
-  &amp;quot;scripts&amp;quot;: {
-    &amp;quot;dev&amp;quot;: &amp;quot;vite&amp;quot;,
-    &amp;quot;build&amp;quot;: &amp;quot;tsc -b &amp;amp;&amp;amp; vite build&amp;quot;,
-    &amp;quot;lint&amp;quot;: &amp;quot;eslint .&amp;quot;,
-    &amp;quot;preview&amp;quot;: &amp;quot;vite preview&amp;quot;
-  },
-  &amp;quot;dependencies&amp;quot;: {
-    &amp;quot;@radix-ui/react-dialog&amp;quot;: &amp;quot;^1.1.6&amp;quot;,
-    &amp;quot;@radix-ui/react-label&amp;quot;: &amp;quot;^2.1.2&amp;quot;,
-    &amp;quot;@radix-ui/react-slider&amp;quot;: &amp;quot;^1.2.3&amp;quot;,
-    &amp;quot;@radix-ui/react-slot&amp;quot;: &amp;quot;^1.1.1&amp;quot;,
-    &amp;quot;axios&amp;quot;: &amp;quot;^1.7.9&amp;quot;,
-    &amp;quot;class-variance-authority&amp;quot;: &amp;quot;^0.7.1&amp;quot;,
-    &amp;quot;clsx&amp;quot;: &amp;quot;^2.1.1&amp;quot;,
-    &amp;quot;crypto-js&amp;quot;: &amp;quot;^4.2.0&amp;quot;,
-    &amp;quot;cryptojs&amp;quot;: &amp;quot;^2.5.3&amp;quot;,
-    &amp;quot;lucide-react&amp;quot;: &amp;quot;^0.474.0&amp;quot;,
-    &amp;quot;md5&amp;quot;: &amp;quot;^2.3.0&amp;quot;,
-    &amp;quot;react&amp;quot;: &amp;quot;^18.3.1&amp;quot;,
-    &amp;quot;react-dom&amp;quot;: &amp;quot;^18.3.1&amp;quot;,
-    &amp;quot;react-router-dom&amp;quot;: &amp;quot;^7.1.5&amp;quot;,
-    &amp;quot;tailwind-merge&amp;quot;: &amp;quot;^3.0.1&amp;quot;,
-    &amp;quot;tailwindcss-animate&amp;quot;: &amp;quot;^1.0.7&amp;quot;,
-    &amp;quot;zod&amp;quot;: &amp;quot;^3.24.1&amp;quot;,
-    &amp;quot;zustand&amp;quot;: &amp;quot;^5.0.3&amp;quot;
-  },
-  &amp;quot;devDependencies&amp;quot;: {
-    &amp;quot;@eslint/js&amp;quot;: &amp;quot;^9.17.0&amp;quot;,
-    &amp;quot;@types/md5&amp;quot;: &amp;quot;^2.3.5&amp;quot;,
-    &amp;quot;@types/node&amp;quot;: &amp;quot;^22.13.1&amp;quot;,
-    &amp;quot;@types/react&amp;quot;: &amp;quot;^18.3.18&amp;quot;,
-    &amp;quot;@types/react-dom&amp;quot;: &amp;quot;^18.3.5&amp;quot;,
-    &amp;quot;@vitejs/plugin-react&amp;quot;: &amp;quot;^4.3.4&amp;quot;,
-    &amp;quot;autoprefixer&amp;quot;: &amp;quot;^10.4.20&amp;quot;,
-    &amp;quot;eslint&amp;quot;: &amp;quot;^9.17.0&amp;quot;,
-    &amp;quot;eslint-plugin-react-hooks&amp;quot;: &amp;quot;^5.0.0&amp;quot;,
-    &amp;quot;eslint-plugin-react-refresh&amp;quot;: &amp;quot;^0.4.16&amp;quot;,
-    &amp;quot;globals&amp;quot;: &amp;quot;^15.14.0&amp;quot;,
-    &amp;quot;postcss&amp;quot;: &amp;quot;^8.5.1&amp;quot;,
-    &amp;quot;tailwindcss&amp;quot;: &amp;quot;3&amp;quot;,
-    &amp;quot;typescript&amp;quot;: &amp;quot;~5.6.2&amp;quot;,
-    &amp;quot;typescript-eslint&amp;quot;: &amp;quot;^8.18.2&amp;quot;,
-    &amp;quot;vite&amp;quot;: &amp;quot;^6.0.5&amp;quot;
-  }
-}&lt;/file&gt;&lt;file path=&quot;postcss.config.js&quot;&gt;export default {
-  plugins: {
-    tailwindcss: {},
-    autoprefixer: {},
-  },
-}&lt;/file&gt;&lt;file path=&quot;README.md&quot;&gt;# React + TypeScript + Vite
-
-This template provides a minimal setup to get React working in Vite with HMR and some ESLint rules.
-
-Currently, two official plugins are available:
-
-- [@vitejs/plugin-react](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/README.md) uses [Babel](https://babeljs.io/) for Fast Refresh
-- [@vitejs/plugin-react-swc](https://github.com/vitejs/vite-plugin-react-swc) uses [SWC](https://swc.rs/) for Fast Refresh
-
-## Expanding the ESLint configuration
-
-If you are developing a production application, we recommend updating the configuration to enable type aware lint rules:
-
-- Configure the top-level `parserOptions` property like this:
-
-```js
-export default tseslint.config({
-  languageOptions: {
-    // other options...
-    parserOptions: {
-      project: [&amp;apos;./tsconfig.node.json&amp;apos;, &amp;apos;./tsconfig.app.json&amp;apos;],
-      tsconfigRootDir: import.meta.dirname,
-    },
-  },
-})
-```
-
-- Replace `tseslint.configs.recommended` to `tseslint.configs.recommendedTypeChecked` or `tseslint.configs.strictTypeChecked`
-- Optionally add `...tseslint.configs.stylisticTypeChecked`
-- Install [eslint-plugin-react](https://github.com/jsx-eslint/eslint-plugin-react) and update the config:
-
-```js
-// eslint.config.js
-import react from &amp;apos;eslint-plugin-react&amp;apos;
-
-export default tseslint.config({
-  // Set the react version
-  settings: { react: { version: &amp;apos;18.3&amp;apos; } },
-  plugins: {
-    // Add the react plugin
-    react,
-  },
-  rules: {
-    // other rules...
-    // Enable its recommended rules
-    ...react.configs.recommended.rules,
-    ...react.configs[&amp;apos;jsx-runtime&amp;apos;].rules,
-  },
-})
-```&lt;/file&gt;&lt;file path=&quot;tailwind.config.js&quot;&gt;/** @type {import(&amp;apos;tailwindcss&amp;apos;).Config} */
-export default {
-    darkMode: [&amp;quot;class&amp;quot;],
-    content: [&amp;quot;./index.html&amp;quot;, &amp;quot;./src/**/*.{ts,tsx,js,jsx}&amp;quot;],
-  theme: {
-  	extend: {
-  		borderRadius: {
-  			lg: &amp;apos;var(--radius)&amp;apos;,
-  			md: &amp;apos;calc(var(--radius) - 2px)&amp;apos;,
-  			sm: &amp;apos;calc(var(--radius) - 4px)&amp;apos;
-  		},
-  		colors: {
-  			background: &amp;apos;hsl(var(--background))&amp;apos;,
-  			foreground: &amp;apos;hsl(var(--foreground))&amp;apos;,
-  			card: {
-  				DEFAULT: &amp;apos;hsl(var(--card))&amp;apos;,
-  				foreground: &amp;apos;hsl(var(--card-foreground))&amp;apos;
-  			},
-  			popover: {
-  				DEFAULT: &amp;apos;hsl(var(--popover))&amp;apos;,
-  				foreground: &amp;apos;hsl(var(--popover-foreground))&amp;apos;
-  			},
-  			primary: {
-  				DEFAULT: &amp;apos;hsl(var(--primary))&amp;apos;,
-  				foreground: &amp;apos;hsl(var(--primary-foreground))&amp;apos;
-  			},
-  			secondary: {
-  				DEFAULT: &amp;apos;hsl(var(--secondary))&amp;apos;,
-  				foreground: &amp;apos;hsl(var(--secondary-foreground))&amp;apos;
-  			},
-  			muted: {
-  				DEFAULT: &amp;apos;hsl(var(--muted))&amp;apos;,
-  				foreground: &amp;apos;hsl(var(--muted-foreground))&amp;apos;
-  			},
-  			accent: {
-  				DEFAULT: &amp;apos;hsl(var(--accent))&amp;apos;,
-  				foreground: &amp;apos;hsl(var(--accent-foreground))&amp;apos;
-  			},
-  			destructive: {
-  				DEFAULT: &amp;apos;hsl(var(--destructive))&amp;apos;,
-  				foreground: &amp;apos;hsl(var(--destructive-foreground))&amp;apos;
-  			},
-  			border: &amp;apos;hsl(var(--border))&amp;apos;,
-  			input: &amp;apos;hsl(var(--input))&amp;apos;,
-  			ring: &amp;apos;hsl(var(--ring))&amp;apos;,
-  			chart: {
-  				&amp;apos;1&amp;apos;: &amp;apos;hsl(var(--chart-1))&amp;apos;,
-  				&amp;apos;2&amp;apos;: &amp;apos;hsl(var(--chart-2))&amp;apos;,
-  				&amp;apos;3&amp;apos;: &amp;apos;hsl(var(--chart-3))&amp;apos;,
-  				&amp;apos;4&amp;apos;: &amp;apos;hsl(var(--chart-4))&amp;apos;,
-  				&amp;apos;5&amp;apos;: &amp;apos;hsl(var(--chart-5))&amp;apos;
-  			}
-  		}
-  	}
-  },
-  plugins: [require(&amp;quot;tailwindcss-animate&amp;quot;)],
-}&lt;/file&gt;&lt;file path=&quot;tsconfig.app.json&quot;&gt;{
-  &amp;quot;compilerOptions&amp;quot;: {
-    &amp;quot;tsBuildInfoFile&amp;quot;: &amp;quot;./node_modules/.tmp/tsconfig.app.tsbuildinfo&amp;quot;,
-    &amp;quot;target&amp;quot;: &amp;quot;ES2020&amp;quot;,
-    &amp;quot;useDefineForClassFields&amp;quot;: true,
-    &amp;quot;lib&amp;quot;: [&amp;quot;ES2020&amp;quot;, &amp;quot;DOM&amp;quot;, &amp;quot;DOM.Iterable&amp;quot;],
-    &amp;quot;module&amp;quot;: &amp;quot;ESNext&amp;quot;,
-    &amp;quot;skipLibCheck&amp;quot;: true,
-
-    /* Bundler mode */
-    &amp;quot;moduleResolution&amp;quot;: &amp;quot;bundler&amp;quot;,
-    &amp;quot;allowImportingTsExtensions&amp;quot;: true,
-    &amp;quot;isolatedModules&amp;quot;: true,
-    &amp;quot;moduleDetection&amp;quot;: &amp;quot;force&amp;quot;,
-    &amp;quot;noEmit&amp;quot;: true,
-    &amp;quot;jsx&amp;quot;: &amp;quot;react-jsx&amp;quot;,
-
-    /* Linting */
-    &amp;quot;strict&amp;quot;: true,
-    &amp;quot;noUnusedLocals&amp;quot;: true,
-    &amp;quot;noUnusedParameters&amp;quot;: true,
-    &amp;quot;noFallthroughCasesInSwitch&amp;quot;: true,
-    &amp;quot;noUncheckedSideEffectImports&amp;quot;: true
-  },
-  &amp;quot;include&amp;quot;: [&amp;quot;src&amp;quot;]
-}&lt;/file&gt;&lt;file path=&quot;tsconfig.json&quot;&gt;{
-  &amp;quot;files&amp;quot;: [],
-  &amp;quot;references&amp;quot;: [
-    { &amp;quot;path&amp;quot;: &amp;quot;./tsconfig.app.json&amp;quot; },
-    { &amp;quot;path&amp;quot;: &amp;quot;./tsconfig.node.json&amp;quot; }
-  ],
-  &amp;quot;compilerOptions&amp;quot;: {
-    &amp;quot;baseUrl&amp;quot;: &amp;quot;.&amp;quot;,
-    &amp;quot;paths&amp;quot;: {
-      &amp;quot;@/*&amp;quot;: [&amp;quot;./src/*&amp;quot;]
-    }
-  }
-}&lt;/file&gt;&lt;file path=&quot;tsconfig.node.json&quot;&gt;{
-  &amp;quot;compilerOptions&amp;quot;: {
-    &amp;quot;baseUrl&amp;quot;: &amp;quot;.&amp;quot;,
-    &amp;quot;paths&amp;quot;: {
-      &amp;quot;@/*&amp;quot;: [&amp;quot;./src/*&amp;quot;]
-    },
-    &amp;quot;tsBuildInfoFile&amp;quot;: &amp;quot;./node_modules/.tmp/tsconfig.node.tsbuildinfo&amp;quot;,
-    &amp;quot;target&amp;quot;: &amp;quot;ES2022&amp;quot;,
-    &amp;quot;lib&amp;quot;: [&amp;quot;ES2023&amp;quot;],
-    &amp;quot;module&amp;quot;: &amp;quot;ESNext&amp;quot;,
-    &amp;quot;skipLibCheck&amp;quot;: true,
-
-    /* Bundler mode */
-    &amp;quot;moduleResolution&amp;quot;: &amp;quot;bundler&amp;quot;,
-    &amp;quot;allowImportingTsExtensions&amp;quot;: true,
-    &amp;quot;isolatedModules&amp;quot;: true,
-    &amp;quot;moduleDetection&amp;quot;: &amp;quot;force&amp;quot;,
-    &amp;quot;noEmit&amp;quot;: true,
-
-    /* Linting */
-    &amp;quot;strict&amp;quot;: true,
-    &amp;quot;noUnusedLocals&amp;quot;: true,
-    &amp;quot;noUnusedParameters&amp;quot;: true,
-    &amp;quot;noFallthroughCasesInSwitch&amp;quot;: true,
-    &amp;quot;noUncheckedSideEffectImports&amp;quot;: true
-  },
-  &amp;quot;include&amp;quot;: [&amp;quot;vite.config.ts&amp;quot;]
-}&lt;/file&gt;&lt;file path=&quot;vite.config.ts&quot;&gt;import path from &amp;quot;path&amp;quot;
-import react from &amp;quot;@vitejs/plugin-react&amp;quot;
-import { defineConfig } from &amp;quot;vite&amp;quot;
-
-export default defineConfig({
-  plugins: [react()],
-  resolve: {
-    alias: {
-      &amp;quot;@&amp;quot;: path.resolve(__dirname, &amp;quot;./src&amp;quot;),
-    },
-  },
-})&lt;/file&gt;&lt;/files&gt;&lt;/repomix&gt;</file><file path="frontend/tailwind.config.js">/** @type {import(&apos;tailwindcss&apos;).Config} */
-export default {
-    darkMode: [&quot;class&quot;],
-    content: [&quot;./index.html&quot;, &quot;./src/**/*.{ts,tsx,js,jsx}&quot;],
-  theme: {
-  	extend: {
-  		borderRadius: {
-  			lg: &apos;var(--radius)&apos;,
-  			md: &apos;calc(var(--radius) - 2px)&apos;,
-  			sm: &apos;calc(var(--radius) - 4px)&apos;
-  		},
-  		colors: {
-  			background: &apos;hsl(var(--background))&apos;,
-  			foreground: &apos;hsl(var(--foreground))&apos;,
-  			card: {
-  				DEFAULT: &apos;hsl(var(--card))&apos;,
-  				foreground: &apos;hsl(var(--card-foreground))&apos;
-  			},
-  			popover: {
-  				DEFAULT: &apos;hsl(var(--popover))&apos;,
-  				foreground: &apos;hsl(var(--popover-foreground))&apos;
-  			},
-  			primary: {
-  				DEFAULT: &apos;hsl(var(--primary))&apos;,
-  				foreground: &apos;hsl(var(--primary-foreground))&apos;
-  			},
-  			secondary: {
-  				DEFAULT: &apos;hsl(var(--secondary))&apos;,
-  				foreground: &apos;hsl(var(--secondary-foreground))&apos;
-  			},
-  			muted: {
-  				DEFAULT: &apos;hsl(var(--muted))&apos;,
-  				foreground: &apos;hsl(var(--muted-foreground))&apos;
-  			},
-  			accent: {
-  				DEFAULT: &apos;hsl(var(--accent))&apos;,
-  				foreground: &apos;hsl(var(--accent-foreground))&apos;
-  			},
-  			destructive: {
-  				DEFAULT: &apos;hsl(var(--destructive))&apos;,
-  				foreground: &apos;hsl(var(--destructive-foreground))&apos;
-  			},
-  			border: &apos;hsl(var(--border))&apos;,
-  			input: &apos;hsl(var(--input))&apos;,
-  			ring: &apos;hsl(var(--ring))&apos;,
-  			chart: {
-  				&apos;1&apos;: &apos;hsl(var(--chart-1))&apos;,
-  				&apos;2&apos;: &apos;hsl(var(--chart-2))&apos;,
-  				&apos;3&apos;: &apos;hsl(var(--chart-3))&apos;,
-  				&apos;4&apos;: &apos;hsl(var(--chart-4))&apos;,
-  				&apos;5&apos;: &apos;hsl(var(--chart-5))&apos;
-  			}
-  		}
-  	}
-  },
-  plugins: [require(&quot;tailwindcss-animate&quot;)],
-}</file><file path="frontend/tsconfig.app.json">{
-  &quot;compilerOptions&quot;: {
-    &quot;tsBuildInfoFile&quot;: &quot;./node_modules/.tmp/tsconfig.app.tsbuildinfo&quot;,
-    &quot;target&quot;: &quot;ES2020&quot;,
-    &quot;useDefineForClassFields&quot;: true,
-    &quot;lib&quot;: [&quot;ES2020&quot;, &quot;DOM&quot;, &quot;DOM.Iterable&quot;],
-    &quot;module&quot;: &quot;ESNext&quot;,
-    &quot;skipLibCheck&quot;: true,
-
-    /* Bundler mode */
-    &quot;moduleResolution&quot;: &quot;bundler&quot;,
-    &quot;allowImportingTsExtensions&quot;: true,
-    &quot;isolatedModules&quot;: true,
-    &quot;moduleDetection&quot;: &quot;force&quot;,
-    &quot;noEmit&quot;: true,
-    &quot;jsx&quot;: &quot;react-jsx&quot;,
-
-    /* Linting */
-    &quot;strict&quot;: true,
-    &quot;noUnusedLocals&quot;: true,
-    &quot;noUnusedParameters&quot;: true,
-    &quot;noFallthroughCasesInSwitch&quot;: true,
-    &quot;noUncheckedSideEffectImports&quot;: true
-  },
-  &quot;include&quot;: [&quot;src&quot;]
-}</file><file path="frontend/tsconfig.json">{
-  &quot;files&quot;: [],
-  &quot;references&quot;: [
-    { &quot;path&quot;: &quot;./tsconfig.app.json&quot; },
-    { &quot;path&quot;: &quot;./tsconfig.node.json&quot; }
-  ],
-  &quot;compilerOptions&quot;: {
-    &quot;baseUrl&quot;: &quot;.&quot;,
-    &quot;paths&quot;: {
-      &quot;@/*&quot;: [&quot;./src/*&quot;]
-    }
-  }
-}</file><file path="frontend/tsconfig.node.json">{
-  &quot;compilerOptions&quot;: {
-    &quot;baseUrl&quot;: &quot;.&quot;,
-    &quot;paths&quot;: {
-      &quot;@/*&quot;: [&quot;./src/*&quot;]
-    },
-    &quot;tsBuildInfoFile&quot;: &quot;./node_modules/.tmp/tsconfig.node.tsbuildinfo&quot;,
-    &quot;target&quot;: &quot;ES2022&quot;,
-    &quot;lib&quot;: [&quot;ES2023&quot;],
-    &quot;module&quot;: &quot;ESNext&quot;,
-    &quot;skipLibCheck&quot;: true,
-
-    /* Bundler mode */
-    &quot;moduleResolution&quot;: &quot;bundler&quot;,
-    &quot;allowImportingTsExtensions&quot;: true,
-    &quot;isolatedModules&quot;: true,
-    &quot;moduleDetection&quot;: &quot;force&quot;,
-    &quot;noEmit&quot;: true,
-
-    /* Linting */
-    &quot;strict&quot;: true,
-    &quot;noUnusedLocals&quot;: true,
-    &quot;noUnusedParameters&quot;: true,
-    &quot;noFallthroughCasesInSwitch&quot;: true,
-    &quot;noUncheckedSideEffectImports&quot;: true
-  },
-  &quot;include&quot;: [&quot;vite.config.ts&quot;]
-}</file><file path="frontend/types.ts">export type User = {
-  name: string;
-  email: string;
-  nom_famille: string;
-  prenom: string;
-  courriel: string;
-  tel?: string;
-  date_anniversaire?: Date;
-  adresse?: string;
-  ville?: string;
-  province?: string;
-  code_postal?: string;
-  forfait?: string;
-  credits?: number;
-};
-
-export type Movie = {
-  ID: number;
-  TITRE: string;
-  RESUME: string;
-  ANNEE: number;
-  DUREE: number;
-  LANGUE: string;
-  ID_REALISATEUR: number;
-  POSTER_URL: string;
-}
-
-export type MovieDetails = {
-  id: number;
-  title: string;
-  year: number;
-  genre: string;
-  duration: number;
-  poster: string;
-};</file><file path="frontend/vite.config.ts">import path from &quot;path&quot;
-import react from &quot;@vitejs/plugin-react&quot;
-import { defineConfig } from &quot;vite&quot;
-
-export default defineConfig({
-  plugins: [react()],
-  resolve: {
-    alias: {
-      &quot;@&quot;: path.resolve(__dirname, &quot;./src&quot;),
-    },
-  },
-})</file></files></repomix>
\ No newline at end of file
